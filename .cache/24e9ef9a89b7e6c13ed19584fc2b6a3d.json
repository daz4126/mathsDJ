{"dependencies":[],"generated":{"js":"/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax.js\n *\n *  The main support code for the MathJax Hub, including the\n *  Ajax, Callback, Messaging, and Object-Oriented Programming\n *  libraries, as well as the base Jax classes, and startup\n *  processing code.\n *\n *  ---------------------------------------------------------------------\n *\n *  Copyright (c) 2009-2018 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n//\n//  Check if browser can support MathJax (no one fails this nowadays)\n//\nif (document.getElementById && document.childNodes && document.createElement) {\n//\n//  Skip if MathJax is already loaded\n//\nif (!(window.MathJax && MathJax.Hub)) {\n\n//\n//  Get author configuration from MathJax variable, if any\n//\nif (window.MathJax) {window.MathJax = {AuthorConfig: window.MathJax}}\n               else {window.MathJax = {}}\n\n// MathJax.isPacked = true; // This line is uncommented by the packer.\n\nMathJax.version = \"2.7.3\";\nMathJax.fileversion = \"2.7.3\";\nMathJax.cdnVersion = \"2.7.3\";  // specifies a revision to break caching\nMathJax.cdnFileVersions = {};  // can be used to specify revisions for individual files\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var PROTO = [];  // a static object used to indicate when a prototype is being created\n  var OBJECT = function (def) {\n    var obj = def.constructor; if (!obj) {obj = function () {}}\n    for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}}\n    return obj;\n  };\n  var CONSTRUCTOR = function () {\n    return function () {return arguments.callee.Init.call(this,arguments)};\n  };\n\n  BASE.Object = OBJECT({\n    constructor: CONSTRUCTOR(),\n\n    Subclass: function (def,classdef) {\n      var obj = CONSTRUCTOR();\n      obj.SUPER = this; obj.Init = this.Init;\n      obj.Subclass = this.Subclass; obj.Augment = this.Augment;\n      obj.protoFunction = this.protoFunction;\n      obj.can = this.can; obj.has = this.has; obj.isa = this.isa;\n      obj.prototype = new this(PROTO);\n      obj.prototype.constructor = obj;  // the real constructor\n      obj.Augment(def,classdef);\n      return obj;\n    },\n\n    Init: function (args) {\n      var obj = this;\n      if (args.length === 1 && args[0] === PROTO) {return obj}\n      if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)}\n      return obj.Init.apply(obj,args) || obj;\n    },\n\n    Augment: function (def,classdef) {\n      var id;\n      if (def != null) {\n        for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== this.prototype.toString && def.toString !== {}.toString)\n          {this.protoFunction('toString',def.toString)}\n      }\n      if (classdef != null) {\n        for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}}\n      }\n      return this;\n    },\n\n    protoFunction: function (id,def) {\n      this.prototype[id] = def;\n      if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype}\n    },\n\n    prototype: {\n      Init: function () {},\n      SUPER: function (fn) {return fn.callee.SUPER},\n      can: function (method) {return typeof(this[method]) === \"function\"},\n      has: function (property) {return typeof(this[property]) !== \"undefined\"},\n      isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)}\n    },\n\n    can: function (method)   {return this.prototype.can.call(this,method)},\n    has: function (property) {return this.prototype.has.call(this,property)},\n    isa: function (obj) {\n      var constructor = this;\n      while (constructor) {\n        if (constructor === obj) {return true} else {constructor = constructor.SUPER}\n      }\n      return false;\n    },\n\n\n    SimpleSUPER: OBJECT({\n      constructor: function (def) {return this.SimpleSUPER.define(def)},\n\n      define: function (src) {\n\tvar dst = {};\n\tif (src != null) {\n          for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}}\n\t  // MSIE doesn't list toString even if it is not native so handle it separately\n          if (src.toString !== this.prototype.toString && src.toString !== {}.toString)\n            {dst.toString = this.wrap('toString',src.toString)}\n\t}\n\treturn dst;\n      },\n\n      wrap: function (id,f) {\n        if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f}\n        var fn = function () {\n          this.SUPER = fn.SUPER[id];\n          try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err}\n          delete this.SUPER;\n          return result;\n        }\n        fn.toString = function () {return f.toString.apply(f,arguments)}\n        return fn;\n      }\n\n    })\n  });\n\n  BASE.Object.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n\n  BASE.Object.Array = Array;\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n/*\n *  Create a callback function from various forms of data:\n *\n *     MathJax.Callback(fn)    -- callback to a function\n *\n *     MathJax.Callback([fn])  -- callback to function\n *     MathJax.Callback([fn,data...])\n *                             -- callback to function with given data as arguments\n *     MathJax.Callback([object,fn])\n *                             -- call fn with object as \"this\"\n *     MathJax.Callback([object,fn,data...])\n *                             -- call fn with object as \"this\" and data as arguments\n *     MathJax.Callback([\"method\",object])\n *                             -- call method of object wth object as \"this\"\n *     MathJax.Callback([\"method\",object,data...])\n *                             -- as above, but with data as arguments to method\n *\n *     MathJax.Callback({hook: fn, data: [...], object: this})\n *                             -- give function, data, and object to act as \"this\" explicitly\n *\n *     MathJax.Callback(\"code\")  -- callback that compiles and executes a string\n *\n *     MathJax.Callback([...],i)\n *                             -- use slice of array starting at i and interpret\n *                                result as above.  (Used for passing \"arguments\" array\n *                                and trimming initial arguments, if any.)\n */\n\n/*\n *    MathJax.Callback.After([...],cb1,cb2,...)\n *                             -- make a callback that isn't called until all the other\n *                                ones are called first.  I.e., wait for a union of\n *                                callbacks to occur before making the given callback.\n */\n\n/*\n *  MathJax.Callback.Queue([callback,...])\n *                             -- make a synchronized queue of commands that process\n *                                sequentially, waiting for those that return uncalled\n *                                callbacks.\n */\n\n/*\n *  MathJax.Callback.Signal(name)\n *                             -- finds or creates a names signal, to which listeners\n *                                can be attached and are signaled by messages posted\n *                                to the signal.  Responses can be asynchronous.\n */\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  var isArray = BASE.Object.isArray;\n  //\n  //  Create a callback from an associative array\n  //\n  var CALLBACK = function (data) {\n    var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)};\n    for (var id in CALLBACK.prototype) {\n      if (CALLBACK.prototype.hasOwnProperty(id)) {\n        if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]}\n                                         else {cb[id] = CALLBACK.prototype[id]}\n      }\n    }\n    cb.toString = CALLBACK.prototype.toString;\n    return cb;\n  };\n  CALLBACK.prototype = {\n    isCallback: true,\n    hook: function () {},\n    data: [],\n    object: window,\n    execute: function () {\n      if (!this.called || this.autoReset) {\n        this.called = !this.autoReset;\n        return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)));\n      }\n    },\n    reset: function () {delete this.called},\n    toString: function () {return this.hook.toString.apply(this.hook,arguments)}\n  };\n  var ISCALLBACK = function (f) {\n    return (typeof(f) === \"function\" && f.isCallback);\n  }\n\n  //\n  //  Evaluate a string in global context\n  //\n  var EVAL = function (code) {return eval.call(window,code)}\n  var TESTEVAL = function () {\n    EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context\n    if (window.__TeSt_VaR__) {\n      try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode\n      catch (error) { window.__TeSt_VaR__ = null; }\n    } else {\n      if (window.execScript) {\n        // IE\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          window.execScript(code);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      } else {\n        // Safari2\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body}\n          var script = document.createElement(\"script\");\n          script.appendChild(document.createTextNode(code));\n          head.appendChild(script); head.removeChild(script);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      }\n    }\n    TESTEVAL = null;\n  };\n\n  //\n  //  Create a callback from various types of data\n  //\n  var USING = function (args,i) {\n    if (arguments.length > 1) {\n      if (arguments.length === 2 && !(typeof arguments[0] === 'function') &&\n          arguments[0] instanceof Object && typeof arguments[1] === 'number')\n            {args = [].slice.call(args,i)}\n      else {args = [].slice.call(arguments,0)}\n    }\n    if (isArray(args) && args.length === 1 && typeof(args[0]) === 'function') {args = args[0]}\n    if (typeof args === 'function') {\n      if (args.execute === CALLBACK.prototype.execute) {return args}\n      return CALLBACK({hook: args});\n    } else if (isArray(args)) {\n      if (typeof(args[0]) === 'string' && args[1] instanceof Object &&\n                 typeof args[1][args[0]] === 'function') {\n        return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)});\n      } else if (typeof args[0] === 'function') {\n        return CALLBACK({hook: args[0], data: args.slice(1)});\n      } else if (typeof args[1] === 'function') {\n        return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)});\n      }\n    } else if (typeof(args) === 'string') {\n      if (TESTEVAL) TESTEVAL();\n      return CALLBACK({hook: EVAL, data: [args]});\n    } else if (args instanceof Object) {\n      return CALLBACK(args);\n    } else if (typeof(args) === 'undefined') {\n      return CALLBACK({});\n    }\n    throw Error(\"Can't make callback from given data\");\n  };\n\n  //\n  //  Wait for a given time to elapse and then perform the callback\n  //\n  var DELAY = function (time,callback) {\n    callback = USING(callback);\n    callback.timeout = setTimeout(callback,time);\n    return callback;\n  };\n\n  //\n  //  Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed\n  //\n  var WAITFOR = function (callback,signal) {\n    callback = USING(callback);\n    if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++}\n  };\n  var WAITEXECUTE = function () {\n    var signals = this.signal; delete this.signal;\n    this.execute = this.oldExecute; delete this.oldExecute;\n    var result = this.execute.apply(this,arguments);\n    if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else {\n      for (var i = 0, m = signals.length; i < m; i++) {\n        signals[i].pending--;\n        if (signals[i].pending <= 0) {signals[i].call()}\n      }\n    }\n  };\n  var WAITSIGNAL = function (callback,signals) {\n    if (!isArray(signals)) {signals = [signals]}\n    if (!callback.signal) {\n      callback.oldExecute = callback.execute;\n      callback.execute = WAITEXECUTE;\n      callback.signal = signals;\n    } else if (signals.length === 1) {callback.signal.push(signals[0])}\n      else {callback.signal = callback.signal.concat(signals)}\n  };\n\n  //\n  //  Create a callback that is called when a collection of other callbacks have\n  //  all been executed.  If the callback gets called immediately (i.e., the\n  //  others are all already called), check if it returns another callback\n  //  and return that instead.\n  //\n  var AFTER = function (callback) {\n    callback = USING(callback);\n    callback.pending = 0;\n    for (var i = 1, m = arguments.length; i < m; i++)\n      {if (arguments[i]) {WAITFOR(arguments[i],callback)}}\n    if (callback.pending === 0) {\n      var result = callback();\n      if (ISCALLBACK(result)) {callback = result}\n    }\n    return callback;\n  };\n\n  //\n  //  An array of prioritized hooks that are executed sequentially\n  //  with a given set of data.\n  //\n  var HOOKS = MathJax.Object.Subclass({\n    //\n    //  Initialize the array and the auto-reset status\n    //\n    Init: function (reset) {\n      this.hooks = [];\n      this.remove = []; // used when hooks are removed during execution of list\n      this.reset = reset;\n      this.running = false;\n    },\n    //\n    //  Add a callback to the list, in priority order (default priority is 10)\n    //\n    Add: function (hook,priority) {\n      if (priority == null) {priority = 10}\n      if (!ISCALLBACK(hook)) {hook = USING(hook)}\n      hook.priority = priority;\n      var i = this.hooks.length;\n      while (i > 0 && priority < this.hooks[i-1].priority) {i--}\n      this.hooks.splice(i,0,hook);\n      return hook;\n    },\n    Remove: function (hook) {\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.hooks[i] === hook) {\n          if (this.running) {this.remove.push(i)}\n            else {this.hooks.splice(i,1)}\n          return;\n        }\n      }\n    },\n    //\n    //  Execute the list of callbacks, resetting them if requested.\n    //  If any return callbacks, return a callback that will be\n    //  executed when they all have completed.\n    //  Remove any hooks that requested being removed during processing.\n    //\n    Execute: function () {\n      var callbacks = [{}];\n      this.running = true;\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.reset) {this.hooks[i].reset()}\n        var result = this.hooks[i].apply(window,arguments);\n        if (ISCALLBACK(result) && !result.called) {callbacks.push(result)}\n      }\n      this.running = false;\n      if (this.remove.length) {this.RemovePending()}\n      if (callbacks.length === 1) {return null}\n      if (callbacks.length === 2) {return callbacks[1]}\n      return AFTER.apply({},callbacks);\n    },\n    //\n    //  Remove hooks that asked to be removed during execution of list\n    //\n    RemovePending: function () {\n      this.remove = this.remove.sort();\n      for (var i = this.remove.length-1; i >= 0; i--) {this.hooks.splice(i,1)}\n      this.remove = [];\n    }\n\n  });\n\n  //\n  //  Run an array of callbacks passing them the given data.\n  //  (Legacy function, since this has been replaced by the HOOKS object).\n  //\n  var EXECUTEHOOKS = function (hooks,data,reset) {\n    if (!hooks) {return null}\n    if (!isArray(hooks)) {hooks = [hooks]}\n    if (!isArray(data))  {data = (data == null ? [] : [data])}\n    var handler = HOOKS(reset);\n    for (var i = 0, m = hooks.length; i < m; i++) {handler.Add(hooks[i])}\n    return handler.Execute.apply(handler,data);\n  };\n\n  //\n  //  Command queue that performs commands in order, waiting when\n  //  necessary for commands to complete asynchronousely\n  //\n  var QUEUE = BASE.Object.Subclass({\n    //\n    //  Create the queue and push any commands that are specified\n    //\n    Init: function () {\n      this.pending = this.running = 0;\n      this.queue = [];\n      this.Push.apply(this,arguments);\n    },\n    //\n    //  Add commands to the queue and run them. Adding a callback object\n    //  (rather than a callback specification) queues a wait for that callback.\n    //  Return the final callback for synchronization purposes.\n    //\n    Push: function () {\n      var callback;\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        callback = USING(arguments[i]);\n        if (callback === arguments[i] && !callback.called)\n          {callback = USING([\"wait\",this,callback])}\n        this.queue.push(callback);\n      }\n      if (!this.running && !this.pending) {this.Process()}\n      return callback;\n    },\n    //\n    //  Process the command queue if we aren't waiting on another command\n    //\n    Process: function (queue) {\n      while (!this.running && !this.pending && this.queue.length) {\n        var callback = this.queue[0];\n        queue = this.queue.slice(1); this.queue = [];\n        this.Suspend(); var result = callback(); this.Resume();\n        if (queue.length) {this.queue = queue.concat(this.queue)}\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n      }\n    },\n    //\n    //  Suspend/Resume command processing on this queue\n    //\n    Suspend: function () {this.running++},\n    Resume: function () {if (this.running) {this.running--}},\n    //\n    //  Used by WAITFOR to restart the queue when an action completes\n    //\n    call: function () {this.Process.apply(this,arguments)},\n    wait: function (callback) {return callback}\n  });\n\n  //\n  //  Create a named signal that listeners can attach to, to be signaled by\n  //  postings made to the signal.  Posts are queued if they occur while one\n  //  is already in process.\n  //\n  var SIGNAL = QUEUE.Subclass({\n    Init: function (name) {\n      QUEUE.prototype.Init.call(this);\n      this.name = name;\n      this.posted = [];              // the messages posted so far\n      this.listeners = HOOKS(true);  // those with interest in this signal\n      this.posting = false;\n      this.callback = null;\n    },\n    //\n    // Post a message to the signal listeners, with callback for when complete\n    //\n    Post: function (message,callback,forget) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        this.Push([\"Post\",this,message,callback,forget]);\n      } else {\n        this.callback = callback; callback.reset();\n        if (!forget) {this.posted.push(message)}\n        this.Suspend(); this.posting = true;\n        var result = this.listeners.Execute(message);\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n        this.Resume(); this.posting = false;\n        if (!this.pending) {this.call()}\n      }\n      return callback;\n    },\n    //\n    //  Clear the post history (so new listeners won't get old messages)\n    //\n    Clear: function (callback) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        callback = this.Push([\"Clear\",this,callback]);\n      } else {\n        this.posted = [];\n        callback();\n      }\n      return callback;\n    },\n    //\n    //  Call the callback (all replies are in) and process the command queue\n    //\n    call: function () {this.callback(this); this.Process()},\n\n    //\n    //  A listener calls this to register interest in the signal (so it will be called\n    //  when posts occur).  If ignorePast is true, it will not be sent the post history.\n    //\n    Interest: function (callback,ignorePast,priority) {\n      callback = USING(callback);\n      this.listeners.Add(callback,priority);\n      if (!ignorePast) {\n        for (var i = 0, m = this.posted.length; i < m; i++) {\n          callback.reset();\n          var result = callback(this.posted[i]);\n          if (ISCALLBACK(result) && i === this.posted.length-1) {WAITFOR(result,this)}\n        }\n      }\n      return callback;\n    },\n    //\n    //  A listener calls this to remove itself from a signal\n    //\n    NoInterest: function (callback) {\n      this.listeners.Remove(callback);\n    },\n\n    //\n    //  Hook a callback to a particular message on this signal\n    //\n    MessageHook: function (msg,callback,priority) {\n      callback = USING(callback);\n      if (!this.hooks) {this.hooks = {}; this.Interest([\"ExecuteHooks\",this])}\n      if (!this.hooks[msg]) {this.hooks[msg] = HOOKS(true)}\n      this.hooks[msg].Add(callback,priority);\n      for (var i = 0, m = this.posted.length; i < m; i++)\n        {if (this.posted[i] == msg) {callback.reset(); callback(this.posted[i])}}\n      callback.msg = msg; // keep track so we can remove it\n      return callback;\n    },\n    //\n    //  Execute the message hooks for the given message\n    //\n    ExecuteHooks: function (msg) {\n      var type = (isArray(msg) ? msg[0] : msg);\n      if (!this.hooks[type]) {return null}\n      return this.hooks[type].Execute(msg);\n    },\n    //\n    //  Remove a hook safely\n    //\n    RemoveHook: function (hook) {\n      this.hooks[hook.msg].Remove(hook);\n    }\n\n  },{\n    signals: {},  // the named signals\n    find: function (name) {\n      if (!SIGNAL.signals[name]) {SIGNAL.signals[name] = new SIGNAL(name)}\n      return SIGNAL.signals[name];\n    }\n  });\n\n  //\n  //  The main entry-points\n  //\n  BASE.Callback = BASE.CallBack = USING;\n  BASE.Callback.Delay = DELAY;\n  BASE.Callback.After = AFTER;\n  BASE.Callback.Queue = QUEUE;\n  BASE.Callback.Signal = SIGNAL.find;\n  BASE.Callback.Hooks = HOOKS;\n  BASE.Callback.ExecuteHooks = EXECUTEHOOKS;\n})(\"MathJax\");\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var isSafari2 = (navigator.vendor === \"Apple Computer, Inc.\" &&\n                   typeof navigator.vendorSub === \"undefined\");\n  var sheets = 0; // used by Safari2\n\n  //\n  //  Update sheets count and look up the head object\n  //\n  var HEAD = function (head) {\n    if (document.styleSheets && document.styleSheets.length > sheets)\n      {sheets = document.styleSheets.length}\n    if (!head) {\n      head = document.head || ((document.getElementsByTagName(\"head\"))[0]);\n      if (!head) {head = document.body}\n    }\n    return head;\n  };\n\n  //\n  //  Remove scripts that are completed so they don't clutter up the HEAD.\n  //  This runs via setTimeout since IE7 can't remove the script while it is running.\n  //\n  var SCRIPTS = [];  // stores scripts to be removed after a delay\n  var REMOVESCRIPTS = function () {\n    for (var i = 0, m = SCRIPTS.length; i < m; i++) {BASE.Ajax.head.removeChild(SCRIPTS[i])}\n    SCRIPTS = [];\n  };\n\n  var PATH = {};\n  PATH[BASENAME] = \"\";                                        // empty path gets the root URL\n  PATH.a11y = '[MathJax]/extensions/a11y';                    // a11y extensions\n  PATH.Contrib = \"https://cdn.mathjax.org/mathjax/contrib\";   // the third-party extensions\n\n  BASE.Ajax = {\n    loaded: {},         // files already loaded\n    loading: {},        // files currently in process of loading\n    loadHooks: {},      // hooks to call when files are loaded\n    timeout: 15*1000,   // timeout for loading of files (15 seconds)\n    styleDelay: 1,      // delay to use before styles are available\n    config: {\n      root: \"\",         // URL of root directory to load from\n      path: PATH        // paths to named URL's (e.g., [MathJax]/...)\n    },\n    params:  {},        // filled in from MathJax.js?...\n\n    STATUS: {\n      OK: 1,         // file is loading or did load OK\n      ERROR: -1      // file timed out during load\n    },\n\n    //\n    //  Return a complete URL to a file (replacing any root names)\n    //\n    fileURL: function (file) {\n      var match;\n      while ((match = file.match(/^\\[([-._a-z0-9]+)\\]/i)) && PATH.hasOwnProperty(match[1])) {\n        file = (PATH[match[1]]||this.config.root) + file.substr(match[1].length+2);\n      }\n      return file;\n    },\n    //\n    //  Replace root names if URL includes one\n    //\n    fileName: function (url) {\n      var root = this.config.root;\n      if (url.substr(0,root.length) === root) {url = \"[\"+BASENAME+\"]\"+url.substr(root.length)}\n      do {\n        var recheck = false;\n        for (var id in PATH) {if (PATH.hasOwnProperty(id) && PATH[id]) {\n          if (url.substr(0,PATH[id].length) === PATH[id]) {\n            url = \"[\"+id+\"]\"+url.substr(PATH[id].length);\n            recheck = true;\n            break;\n          }\n        }}\n      } while (recheck);\n      return url;\n    },\n    //\n    //  Cache-breaking revision number for file\n    //\n    fileRev: function (file) {\n      var V = BASE.cdnFileVersions[file] || BASE.cdnVersion || '';\n      if (V) {V = \"?V=\"+V}\n      return V;\n    },\n    urlRev: function (file) {return this.fileURL(file)+this.fileRev(file)},\n\n    //\n    //  Load a file if it hasn't been already.\n    //  Make sure the file URL is \"safe\"?\n    //\n    Require: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      if (this.params.noContrib && file.substr(0,9) === \"[Contrib]\") {\n        callback(this.STATUS.ERROR);\n      } else {\n        file = this.fileURL(file);\n        // FIXME: check that URL is OK\n        if (this.loaded[file]) {\n          callback(this.loaded[file]);\n        } else {\n          var FILE = {}; FILE[type] = file;\n          this.Load(FILE,callback);\n        }\n      }\n      return callback;\n    },\n\n    //\n    //  Load a file regardless of where it is and whether it has\n    //  already been loaded.\n    //\n    Load: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      file = this.fileURL(file);\n      if (this.loading[file]) {\n        this.addHook(file,callback);\n      } else {\n        this.head = HEAD(this.head);\n        if (this.loader[type]) {this.loader[type].call(this,file,callback)}\n          else {throw Error(\"Can't load files of type \"+type)}\n      }\n      return callback;\n    },\n\n    //\n    //  Register a load hook for a particular file (it will be called when\n    //  loadComplete() is called for that file)\n    //\n    LoadHook: function (file,callback,priority) {\n      callback = BASE.Callback(callback);\n      if (file instanceof Object)\n        {for (var i in file) {if (file.hasOwnProperty(i)) {file = file[i]}}}\n      file = this.fileURL(file);\n      if (this.loaded[file]) {callback(this.loaded[file])}\n        else {this.addHook(file,callback,priority)}\n      return callback;\n    },\n    addHook: function (file,callback,priority) {\n      if (!this.loadHooks[file]) {this.loadHooks[file] = MathJax.Callback.Hooks()}\n      this.loadHooks[file].Add(callback,priority);\n      callback.file = file;\n    },\n    removeHook: function (hook) {\n      if (this.loadHooks[hook.file]) {\n        this.loadHooks[hook.file].Remove(hook);\n        if (!this.loadHooks[hook.file].hooks.length) {delete this.loadHooks[hook.file]}\n      }\n    },\n\n    //\n    //  Used when files are combined in a preloading configuration file\n    //\n    Preloading: function () {\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        var file = this.fileURL(arguments[i]);\n        if (!this.loading[file]) {this.loading[file] = {preloaded: true}}\n      }\n    },\n\n    //\n    //  Code used to load the various types of files\n    //  (JS for JavaScript, CSS for style sheets)\n    //\n    loader: {\n      //\n      //  Create a SCRIPT tag to load the file\n      //\n      JS: function (file,callback) {\n        var name = this.fileName(file);\n        var script = document.createElement(\"script\");\n        var timeout = BASE.Callback([\"loadTimeout\",this,file]);\n        this.loading[file] = {\n          callback: callback,\n          timeout: setTimeout(timeout,this.timeout),\n          status: this.STATUS.OK,\n          script: script\n        };\n        //\n        // Add this to the structure above after it is created to prevent recursion\n        //  when loading the initial localization file (before loading message is available)\n        //\n        this.loading[file].message = BASE.Message.File(name);\n        script.onerror = timeout;  // doesn't work in IE and no apparent substitute\n        script.type = \"text/javascript\";\n        script.src = file+this.fileRev(name);\n        this.head.appendChild(script);\n      },\n      //\n      //  Create a LINK tag to load the style sheet\n      //\n      CSS: function (file,callback) {\n        var name = this.fileName(file);\n        var link = document.createElement(\"link\");\n        link.rel = \"stylesheet\"; link.type = \"text/css\";\n        link.href = file+this.fileRev(name);\n        this.loading[file] = {\n          callback: callback,\n          message: BASE.Message.File(name),\n          status: this.STATUS.OK\n        };\n        this.head.appendChild(link);\n        this.timer.create.call(this,[this.timer.file,file],link);\n      }\n    },\n\n    //\n    //  Timing code for checking when style sheets are available.\n    //\n    timer: {\n      //\n      //  Create the timing callback and start the timing loop.\n      //  We use a delay because some browsers need it to allow the styles\n      //  to be processed.\n      //\n      create: function (callback,node) {\n        callback = BASE.Callback(callback);\n        if (node.nodeName === \"STYLE\" && node.styleSheet &&\n            typeof(node.styleSheet.cssText) !== 'undefined') {\n          callback(this.STATUS.OK); // MSIE processes style immediately, but doesn't set its styleSheet!\n        } else if (window.chrome && node.nodeName === \"LINK\") {\n          callback(this.STATUS.OK); // Chrome doesn't give access to cssRules for stylesheet in\n                                    //   a link node, so we can't detect when it is loaded.\n        } else if (isSafari2) {\n          this.timer.start(this,[this.timer.checkSafari2,sheets++,callback],this.styleDelay);\n        } else {\n          this.timer.start(this,[this.timer.checkLength,node,callback],this.styleDelay);\n        }\n        return callback;\n      },\n      //\n      //  Start the timer for the given callback checker\n      //\n      start: function (AJAX,check,delay,timeout) {\n        check = BASE.Callback(check);\n        check.execute = this.execute; check.time = this.time;\n        check.STATUS = AJAX.STATUS; check.timeout = timeout || AJAX.timeout;\n        check.delay = check.total = delay || 0;\n        if (delay) {setTimeout(check,delay)} else {check()}\n      },\n      //\n      //  Increment the time total, increase the delay\n      //  and test if we are past the timeout time.\n      //\n      time: function (callback) {\n        this.total += this.delay;\n        this.delay = Math.floor(this.delay * 1.05 + 5);\n        if (this.total >= this.timeout) {callback(this.STATUS.ERROR); return 1}\n        return 0;\n      },\n      //\n      //  For JS file loads, call the proper routine according to status\n      //\n      file: function (file,status) {\n        if (status < 0) {BASE.Ajax.loadTimeout(file)} else {BASE.Ajax.loadComplete(file)}\n      },\n      //\n      //  Call the hook with the required data\n      //\n      execute: function () {this.hook.call(this.object,this,this.data[0],this.data[1])},\n      //\n      //  Safari2 doesn't set the link's stylesheet, so we need to look in the\n      //  document.styleSheets array for the new sheet when it is created\n      //\n      checkSafari2: function (check,length,callback) {\n        if (check.time(callback)) return;\n        if (document.styleSheets.length > length &&\n            document.styleSheets[length].cssRules &&\n            document.styleSheets[length].cssRules.length)\n          {callback(check.STATUS.OK)} else {setTimeout(check,check.delay)}\n      },\n      //\n      //  Look for the stylesheets rules and check when they are defined\n      //  and no longer of length zero.  (This assumes there actually ARE\n      //  some rules in the stylesheet.)\n      //\n      checkLength: function (check,node,callback) {\n        if (check.time(callback)) return;\n        var isStyle = 0; var sheet = (node.sheet || node.styleSheet);\n        try {if ((sheet.cssRules||sheet.rules||[]).length > 0) {isStyle = 1}} catch(err) {\n          if (err.message.match(/protected variable|restricted URI/)) {isStyle = 1}\n          else if (err.message.match(/Security error/)) {\n            // Firefox3 gives \"Security error\" for missing files, so\n            //   can't distinguish that from OK files on remote servers.\n            //   or OK files in different directory from local files.\n            isStyle = 1; // just say it is OK (can't really tell)\n          }\n        }\n        if (isStyle) {\n          // Opera 9.6 requires this setTimeout\n          setTimeout(BASE.Callback([callback,check.STATUS.OK]),0);\n        } else {\n          setTimeout(check,check.delay);\n        }\n      }\n    },\n\n    //\n    //  JavaScript code must call this when they are completely initialized\n    //  (this allows them to perform asynchronous actions before indicating\n    //  that they are complete).\n    //\n    loadComplete: function (file) {\n      file = this.fileURL(file);\n      var loading = this.loading[file];\n      if (loading && !loading.preloaded) {\n        BASE.Message.Clear(loading.message);\n        clearTimeout(loading.timeout);\n\tif (loading.script) {\n\t  if (SCRIPTS.length === 0) {setTimeout(REMOVESCRIPTS,0)}\n\t  SCRIPTS.push(loading.script);\n\t}\n        this.loaded[file] = loading.status; delete this.loading[file];\n        this.addHook(file,loading.callback);\n      } else {\n        if (loading) {delete this.loading[file]}\n        this.loaded[file] = this.STATUS.OK;\n        loading = {status: this.STATUS.OK}\n      }\n      if (!this.loadHooks[file]) {return null}\n      return this.loadHooks[file].Execute(loading.status);\n    },\n\n    //\n    //  If a file fails to load within the timeout period (or the onerror handler\n    //  is called), this routine runs to signal the error condition.\n    //\n    loadTimeout: function (file) {\n      if (this.loading[file].timeout) {clearTimeout(this.loading[file].timeout)}\n      this.loading[file].status = this.STATUS.ERROR;\n      this.loadError(file);\n      this.loadComplete(file);\n    },\n\n    //\n    //  The default error hook for file load failures\n    //\n    loadError: function (file) {\n      BASE.Message.Set([\"LoadFailed\",\"File failed to load: %1\",file],null,2000);\n      BASE.Hub.signal.Post([\"file load error\",file]);\n    },\n\n    //\n    //  Defines a style sheet from a hash of style declarations (key:value pairs\n    //  where the key is the style selector and the value is a hash of CSS attributes\n    //  and values).\n    //\n    Styles: function (styles,callback) {\n      var styleString = this.StyleString(styles);\n      if (styleString === \"\") {\n        callback = BASE.Callback(callback);\n        callback();\n      } else {\n        var style = document.createElement(\"style\"); style.type = \"text/css\";\n        this.head = HEAD(this.head);\n        this.head.appendChild(style);\n        if (style.styleSheet && typeof(style.styleSheet.cssText) !== 'undefined') {\n          style.styleSheet.cssText = styleString;\n        } else {\n          style.appendChild(document.createTextNode(styleString));\n        }\n        callback = this.timer.create.call(this,callback,style);\n      }\n      return callback;\n    },\n\n    //\n    //  Create a stylesheet string from a style declaration object\n    //\n    StyleString: function (styles) {\n      if (typeof(styles) === 'string') {return styles}\n      var string = \"\", id, style;\n      for (id in styles) {if (styles.hasOwnProperty(id)) {\n        if (typeof styles[id] === 'string') {\n          string += id + \" {\"+styles[id]+\"}\\n\";\n        } else if (BASE.Object.isArray(styles[id])) {\n          for (var i = 0; i < styles[id].length; i++) {\n            style = {}; style[id] = styles[id][i];\n            string += this.StyleString(style);\n          }\n        } else if (id.substr(0,6) === '@media') {\n          string += id + \" {\"+this.StyleString(styles[id])+\"}\\n\";\n        } else if (styles[id] != null) {\n          style = [];\n          for (var name in styles[id]) {if (styles[id].hasOwnProperty(name)) {\n            if (styles[id][name] != null)\n              {style[style.length] = name + ': ' + styles[id][name]}\n          }}\n          string += id +\" {\"+style.join('; ')+\"}\\n\";\n        }\n      }}\n      return string;\n    }\n  };\n\n})(\"MathJax\");\n\n/**********************************************************/\n\nMathJax.HTML = {\n  //\n  //  Create an HTML element with given attributes and content.\n  //  The def parameter is an (optional) object containing key:value pairs\n  //  of the attributes and their values, and contents is an (optional)\n  //  array of strings to be inserted as text, or arrays of the form\n  //  [type,def,contents] that describes an HTML element to be inserted\n  //  into the current element.  Thus the contents can describe a complete\n  //  HTML snippet of arbitrary complexity.  E.g.:\n  //\n  //    MathJax.HTML.Element(\"span\",{id:\"mySpan\",style{\"font-style\":\"italic\"}},[\n  //        \"(See the \",[\"a\",{href:\"http://www.mathjax.org\"},[\"MathJax home page\"]],\n  //        \" for more details.)\"]);\n  //\n  Element: function (type,def,contents) {\n    var obj = document.createElement(type), id;\n    if (def) {\n      if (def.hasOwnProperty(\"style\")) {\n        var style = def.style; def.style = {};\n        for (id in style) {if (style.hasOwnProperty(id))\n          {def.style[id.replace(/-([a-z])/g,this.ucMatch)] = style[id]}}\n      }\n      MathJax.Hub.Insert(obj,def);\n      for (id in def) {\n        if (id === \"role\" || id.substr(0,5) === \"aria-\") obj.setAttribute(id,def[id]);\n      }\n    }\n    if (contents) {\n      if (!MathJax.Object.isArray(contents)) {contents = [contents]}\n      for (var i = 0, m = contents.length; i < m; i++) {\n        if (MathJax.Object.isArray(contents[i])) {\n          obj.appendChild(this.Element(contents[i][0],contents[i][1],contents[i][2]));\n        } else if (type === \"script\") { // IE throws an error if script is added as a text node\n          this.setScript(obj, contents[i]);\n        } else {\n          obj.appendChild(document.createTextNode(contents[i]));\n        }\n      }\n    }\n    return obj;\n  },\n  ucMatch: function (match,c) {return c.toUpperCase()},\n  addElement: function (span,type,def,contents) {return span.appendChild(this.Element(type,def,contents))},\n  TextNode: function (text) {return document.createTextNode(text)},\n  addText: function (span,text) {return span.appendChild(this.TextNode(text))},\n\n  //\n  //  Set and get the text of a script\n  //\n  setScript: function (script,text) {\n    if (this.setScriptBug) {script.text = text} else {\n      while (script.firstChild) {script.removeChild(script.firstChild)}\n      this.addText(script,text);\n    }\n  },\n  getScript: function (script) {\n    var text = (script.text === \"\" ? script.innerHTML : script.text);\n    return text.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\");\n  },\n\n  //\n  //  Manage cookies\n  //\n  Cookie: {\n    prefix: \"mjx\",\n    expires: 365,\n\n    //\n    //  Save an object as a named cookie\n    //\n    Set: function (name,def) {\n      var keys = [];\n      if (def) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          keys.push(id+\":\"+def[id].toString().replace(/&/g,\"&&\"));\n        }}\n      }\n      var cookie = this.prefix+\".\"+name+\"=\"+escape(keys.join('&;'));\n      if (this.expires) {\n        var time = new Date(); time.setDate(time.getDate() + this.expires);\n        cookie += '; expires='+time.toGMTString();\n      }\n      try {document.cookie = cookie+\"; path=/\"} catch (err) {} // ignore errors saving cookies\n    },\n\n    //\n    //  Get the contents of a named cookie and incorporate\n    //  it into the given object (or return a fresh one)\n    //\n    Get: function (name,obj) {\n      if (!obj) {obj = {}}\n      var pattern = new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+name+\"=([^;]*)(?:;|$)\");\n      var match;\n      try {match = pattern.exec(document.cookie)} catch (err) {}; // ignore errors reading cookies\n      if (match && match[1] !== \"\") {\n        var keys = unescape(match[1]).split('&;');\n        for (var i = 0, m = keys.length; i < m; i++) {\n          match = keys[i].match(/([^:]+):(.*)/);\n          var value = match[2].replace(/&&/g,'&');\n          if (value === \"true\") {value = true} else if (value === \"false\") {value = false}\n            else if (value.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)) {value = parseFloat(value)}\n          obj[match[1]] = value;\n        }\n      }\n      return obj;\n    }\n  }\n\n};\n\n\n/**********************************************************/\n\nMathJax.Localization = {\n\n  locale: \"en\",\n  directory: \"[MathJax]/localization\",\n  strings: {\n    // Currently, this list is not modified by the MathJax-i18n script. You can\n    // run the following command in MathJax/unpacked/localization to update it:\n    //\n    // find . -name \"*.js\" | xargs grep menuTitle\\: | grep -v qqq | sed 's/^\\.\\/\\(.*\\)\\/.*\\.js\\:  /    \"\\1\"\\: \\{/' | sed 's/,$/\\},/' | sed 's/\"English\"/\"English\", isLoaded: true/' > tmp ; sort tmp > tmp2 ; sed '$ s/,$//' tmp2 ; rm tmp*\n    //\n    // This only takes languages with localization data so you must also add\n    // the languages that use a remap but are not translated at all.\n    //\n    \"ar\": {menuTitle: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"},\n    \"ast\": {menuTitle: \"asturianu\"},\n    \"bg\": {menuTitle: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},\n    \"bcc\": {menuTitle: \"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},\n    \"br\": {menuTitle: \"brezhoneg\"},\n    \"ca\": {menuTitle: \"catal\\u00E0\"},\n    \"cdo\": {menuTitle: \"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},\n    \"cs\": {menuTitle: \"\\u010De\\u0161tina\"},\n    \"da\": {menuTitle: \"dansk\"},\n    \"de\": {menuTitle: \"Deutsch\"},\n    \"diq\": {menuTitle: \"Zazaki\"},\n    \"en\": {menuTitle: \"English\", isLoaded: true},\n    \"eo\": {menuTitle: \"Esperanto\"},\n    \"es\": {menuTitle: \"espa\\u00F1ol\"},\n    \"fa\": {menuTitle: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},\n    \"fi\": {menuTitle: \"suomi\"},\n    \"fr\": {menuTitle: \"fran\\u00E7ais\"},\n    \"gl\": {menuTitle: \"galego\"},\n    \"he\": {menuTitle: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},\n    \"ia\": {menuTitle: \"interlingua\"},\n    \"it\": {menuTitle: \"italiano\"},\n    \"ja\": {menuTitle: \"\\u65E5\\u672C\\u8A9E\"},\n    \"kn\": {menuTitle: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},\n    \"ko\": {menuTitle: \"\\uD55C\\uAD6D\\uC5B4\"},\n    \"lb\": {menuTitle: \"L\\u00EBtzebuergesch\"},\n    \"lki\": {menuTitle: \"\\u0644\\u06D5\\u06A9\\u06CC\"},\n    \"lt\": {menuTitle: \"lietuvi\\u0173\"},\n    \"mk\": {menuTitle: \"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},\n    \"nl\": {menuTitle: \"Nederlands\"},\n    \"oc\": {menuTitle: \"occitan\"},\n    \"pl\": {menuTitle: \"polski\"},\n    \"pt\": {menuTitle: \"portugu\\u00EAs\"},\n    \"pt-br\": {menuTitle: \"portugu\\u00EAs do Brasil\"},\n    \"ru\": {menuTitle: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},\n    \"sco\": {menuTitle: \"Scots\"},\n    \"scn\": {menuTitle: \"sicilianu\"},\n    \"sk\": {menuTitle: \"sloven\\u010Dina\"},\n    \"sl\": {menuTitle: \"sloven\\u0161\\u010Dina\"},\n    \"sv\": {menuTitle: \"svenska\"},\n    \"th\": {menuTitle: \"\\u0E44\\u0E17\\u0E22\"},\n    \"tr\": {menuTitle: \"T\\u00FCrk\\u00E7e\"},\n    \"uk\": {menuTitle: \"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},\n    \"vi\": {menuTitle: \"Ti\\u1EBFng Vi\\u1EC7t\"},\n    \"zh-hans\": {menuTitle: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"},\n    \"zh-hant\": {menuTitle: \"\\u6C49\\u8BED\"}\n  },\n\n  //\n  //  The pattern for substitution escapes:\n  //      %n or %{n} or %{plural:%n|option1|option1|...} or %c\n  //\n  pattern: /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,\n\n  SPLIT: (\"axb\".split(/(x)/).length === 3 ?\n    function (string,regex) {return string.split(regex)} :\n    //\n    //  IE8 and below don't do split() correctly when the pattern includes\n    //    parentheses (the split should include the matched exrepssions).\n    //    So implement it by hand here.\n    //\n    function (string,regex) {\n      var result = [], match, last = 0;\n      regex.lastIndex = 0;\n      while ((match = regex.exec(string))) {\n        result.push(string.substr(last,match.index-last));\n        result.push.apply(result,match.slice(1));\n        last = match.index + match[0].length;\n      }\n      result.push(string.substr(last));\n      return result;\n    }),\n\n  _: function (id,phrase) {\n    if (MathJax.Object.isArray(phrase)) {return this.processSnippet(id,phrase)}\n    return this.processString(this.lookupPhrase(id,phrase),[].slice.call(arguments,2));\n  },\n\n  processString: function (string,args,domain) {\n    //\n    //  Process arguments for substitution\n    //    If the argument is a snippet (and we are processing snippets) do so,\n    //    Otherwise, if it is a number, convert it for the lacale\n    //\n    var i, m, isArray = MathJax.Object.isArray;\n    for (i = 0, m = args.length; i < m; i++) {\n      if (domain && isArray(args[i])) {args[i] = this.processSnippet(domain,args[i])}\n    }\n    //\n    //  Split string at escapes and process them individually\n    //\n    var parts = this.SPLIT(string,this.pattern);\n    for (i = 1, m = parts.length; i < m; i += 2) {\n      var c = parts[i].charAt(0);  // first char will be { or \\d or a char to be kept literally\n      if (c >= \"0\" && c <= \"9\") {    // %n\n        parts[i] = args[parts[i]-1];\n        if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n      } else if (c === \"{\") {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= \"0\" && c <= \"9\") {  // %{n}\n          parts[i] = args[parts[i].substr(1,parts[i].length-2)-1];\n          if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n        } else {                     // %{plural:%n|...}\n          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            if (match[1] === \"plural\") {\n              var n = args[match[2]-1];\n              if (typeof n === \"undefined\") {\n                parts[i] = \"???\";        // argument doesn't exist\n              } else {\n                n = this.plural(n) - 1;  // index of the form to use\n                var plurals = match[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/); // the parts (replacing %| with a special character)\n                if (n >= 0 && n < plurals.length) {\n                  parts[i] = this.processString(plurals[n].replace(/\\uEFEF/g,\"|\"),args,domain);\n                } else {\n                  parts[i] = \"???\";      // no string for this index\n                }\n              }\n            } else {parts[i] = \"%\"+parts[i]}  // not \"plural\", put back the % and leave unchanged\n          }\n        }\n      }\n      if (parts[i] == null) {parts[i] = \"???\"}\n    }\n    //\n    //  If we are not forming a snippet, return the completed string\n    //\n    if (!domain) {return parts.join(\"\")}\n    //\n    //  We need to return an HTML snippet, so buld it from the\n    //  broken up string with inserted parts (that could be snippets)\n    //\n    var snippet = [], part = \"\";\n    for (i = 0; i < m; i++) {\n      part += parts[i]; i++;  // add the string and move on to substitution result\n      if (i < m) {\n        if (isArray(parts[i]))  {                // substitution was a snippet\n          snippet.push(part);                        // add the accumulated string\n          snippet = snippet.concat(parts[i]);        // concatenate the substution snippet\n          part = \"\";                                 // start accumulating a new string\n        } else {                                 // substitution was a string\n          part += parts[i];                          // add to accumulating string\n        }\n      }\n    }\n    if (part !== \"\") {snippet.push(part)} // add final string\n    return snippet;\n  },\n\n  processSnippet: function (domain,snippet) {\n    var result = [];   // the new snippet\n    //\n    //  Look through the original snippet for\n    //   strings or snippets to translate\n    //\n    for (var i = 0, m = snippet.length; i < m; i++) {\n      if (MathJax.Object.isArray(snippet[i])) {\n        //\n        //  This could be a sub-snippet:\n        //    [\"tag\"] or [\"tag\",{properties}] or [\"tag\",{properties},snippet]\n        //  Or it could be something to translate:\n        //    [id,string,args] or [domain,snippet]\n        var data = snippet[i];\n        if (typeof data[1] === \"string\") {        // [id,string,args]\n          var id = data[0]; if (!MathJax.Object.isArray(id)) {id = [domain,id]}\n          var phrase = this.lookupPhrase(id,data[1]);\n          result = result.concat(this.processMarkdown(phrase,data.slice(2),domain));\n        } else if (MathJax.Object.isArray(data[1])) {    // [domain,snippet]\n          result = result.concat(this.processSnippet.apply(this,data));\n        } else if (data.length >= 3) {            // [\"tag\",{properties},snippet]\n          result.push([data[0],data[1],this.processSnippet(domain,data[2])]);\n        } else {                                  // [\"tag\"] or [\"tag\",{properties}]\n          result.push(snippet[i]);\n        }\n      } else {                                    // a string\n        result.push(snippet[i]);\n      }\n    }\n    return result;\n  },\n\n  markdownPattern: /(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,\n  //   %c or *bold*, **italics**, ***bold-italics***, or `code`, or [link](url)\n\n  processMarkdown: function (phrase,args,domain) {\n    var result = [], data;\n    //\n    //  Split the string by the Markdown pattern\n    //    (the text blocks are separated by\n    //      c,stars,star-text,backtics,code-text,link-text,URL).\n    //  Start with the first text string from the split.\n    //\n    var parts = phrase.split(this.markdownPattern);\n    var string = parts[0];\n    //\n    //  Loop through the matches and process them\n    //\n    for (var i = 1, m = parts.length; i < m; i += 8) {\n      if (parts[i+1]) {        // stars (for bold/italic)\n        //\n        //  Select the tag to use by number of stars (three stars requires two tags)\n        //\n        data = this.processString(parts[i+2],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [[\"b\",\"i\",\"i\"][parts[i+1].length-1],{},data]; // number of stars determines type\n        if (parts[i+1].length === 3) {data = [\"b\",{},data]}  // bold-italic\n      } else if (parts[i+3]) { //  backtics (for code)\n        //\n        //  Remove one leading or trailing space, and process substitutions\n        //  Make a <code> tag\n        //\n        data = this.processString(parts[i+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"code\",{},data];\n      } else if (parts[i+5]) { //  hyperlink\n        //\n        //  Process the link text, and make an <a> tag with the URL\n        //\n        data = this.processString(parts[i+5],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"a\",{href:this.processString(parts[i+6],args),target:\"_blank\"},data];\n      } else {\n        //\n        //  Escaped character (%c) gets added into the string.\n        //\n        string += parts[i]; data = null;\n      }\n      //\n      //  If there is a tag to insert,\n      //     Add any pending string, then push the tag\n      //\n      if (data) {\n        result = this.concatString(result,string,args,domain);\n        result.push(data); string = \"\";\n      }\n      //\n      //  Process the string that follows matches pattern\n      //\n      if (parts[i+7] !== \"\") {string += parts[i+7]}\n    };\n    //\n    //  Add any pending string and return the resulting snippet\n    //\n    result = this.concatString(result,string,args,domain);\n    return result;\n  },\n  concatString: function (result,string,args,domain) {\n    if (string != \"\") {\n      //\n      //  Process the substutions.\n      //  If the result is not a snippet, turn it into one.\n      //  Then concatenate the snippet to the current one\n      //\n      string = this.processString(string,args,domain);\n      if (!MathJax.Object.isArray(string)) {string = [string]}\n      result = result.concat(string);\n    }\n    return result;\n  },\n\n  lookupPhrase: function (id,phrase,domain) {\n    //\n    //  Get the domain and messageID\n    //\n    if (!domain) {domain = \"_\"}\n    if (MathJax.Object.isArray(id)) {domain = (id[0] || \"_\"); id = (id[1] || \"\")}\n    //\n    //  Check if the data is available and if not,\n    //    load it and throw a restart error so the calling\n    //    code can wait for the load and try again.\n    //\n    var load = this.loadDomain(domain);\n    if (load) {MathJax.Hub.RestartAfter(load)}\n    //\n    //  Look up the message in the localization data\n    //    (if not found, the original English is used)\n    //\n    var localeData = this.strings[this.locale];\n    if (localeData) {\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (domainData.strings && id in domainData.strings)\n          {phrase = domainData.strings[id]}\n      }\n    }\n    //\n    //  return the translated phrase\n    //\n    return phrase;\n  },\n\n  //\n  //  Load a langauge data file from the proper\n  //  directory and file.\n  //\n  loadFile: function (file,data,callback) {\n    callback = MathJax.Callback(callback);\n    file = (data.file || file);  // the data's file name or the default name\n    if (!file.match(/\\.js$/)) {file += \".js\"} // add .js if needed\n    //\n    //  Add the directory if the file doesn't\n    //  contain a full URL already.\n    //\n    if (!file.match(/^([a-z]+:|\\[MathJax\\])/)) {\n      var dir = (this.strings[this.locale].directory  ||\n                 this.directory + \"/\" + this.locale ||\n                 \"[MathJax]/localization/\" + this.locale);\n      file = dir + \"/\" + file;\n    }\n    //\n    //  Load the file and mark the data as loaded (even if it\n    //  failed to load, so we don't continue to try to load it\n    //  over and over).\n    //\n    var load = MathJax.Ajax.Require(file,function () {data.isLoaded = true; return callback()});\n    //\n    //  Return the callback if needed, otherwise null.\n    //\n    return (load.called ? null : load);\n  },\n\n  //\n  //  Check to see if the localization data are loaded\n  //  for the given domain; if not, load the data file,\n  //  and return a callback for the loading operation.\n  //  Otherwise return null (data are loaded).\n  //\n  loadDomain: function (domain,callback) {\n    var load, localeData = this.strings[this.locale];\n    if (localeData) {\n      if (!localeData.isLoaded) {\n        load = this.loadFile(this.locale,localeData);\n        if (load) {\n          return MathJax.Callback.Queue(\n            load,[\"loadDomain\",this,domain] // call again to load domain\n          ).Push(callback||{});\n        }\n      }\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (!domainData.isLoaded) {\n          load = this.loadFile(domain,domainData);\n          if (load) {return MathJax.Callback.Queue(load).Push(callback)}\n        }\n      }\n    }\n    // localization data are loaded, so just do the callback\n    return MathJax.Callback(callback)();\n  },\n\n  //\n  //  Perform a function, properly handling\n  //  restarts due to localization file loads.\n  //\n  //  Note that this may return before the function\n  //  has been called successfully, so you should\n  //  consider fn as running asynchronously.  (Callbacks\n  //  can be used to synchronize it with other actions.)\n  //\n  Try: function (fn) {\n    fn = MathJax.Callback(fn); fn.autoReset = true;\n    try {fn()} catch (err) {\n      if (!err.restart) {throw err}\n      MathJax.Callback.After([\"Try\",this,fn],err.restart);\n    }\n  },\n\n  //\n  //  Reset the current language\n  //\n  resetLocale: function(locale) {\n    // Selection algorithm:\n    // 1) Downcase locale name (e.g. \"en-US\" => \"en-us\")\n    // 2) Try a parent language (e.g. \"en-us\" => \"en\")\n    // 3) Try the fallback specified in the data (e.g. \"pt\" => \"pt-br\")\n    // 4) Otherwise don't change the locale.\n    if (!locale) return;\n    locale = locale.toLowerCase();\n    while (!this.strings[locale]) {\n      var dashPos = locale.lastIndexOf(\"-\");\n      if (dashPos === -1) return;\n      locale = locale.substring(0, dashPos);\n    }\n    var remap = this.strings[locale].remap;\n    this.locale = remap ? remap : locale;\n    MathJax.Callback.Signal(\"Hub\").Post([\"Locale Reset\", this.locale]);\n  },\n\n  //\n  //  Set the current language\n  //\n  setLocale: function(locale) {\n    this.resetLocale(locale);\n    if (MathJax.Menu) {this.loadDomain(\"MathMenu\")}\n  },\n\n  //\n  //  Add or update a language or domain\n  //\n  addTranslation: function (locale,domain,definition) {\n    var data = this.strings[locale], isNew = false;\n    if (!data) {data = this.strings[locale] = {}; isNew = true}\n    if (!data.domains) {data.domains = {}}\n    if (domain) {\n      if (!data.domains[domain]) {data.domains[domain] = {}}\n      data = data.domains[domain];\n    }\n    MathJax.Hub.Insert(data,definition);\n    if (isNew && MathJax.Menu.menu) {MathJax.Menu.CreateLocaleMenu()}\n  },\n\n  //\n  //  Set CSS for an element based on font requirements\n  //\n  setCSS: function (div) {\n    var locale = this.strings[this.locale];\n    if (locale) {\n      if (locale.fontFamily) {div.style.fontFamily = locale.fontFamily}\n      if (locale.fontDirection) {\n        div.style.direction = locale.fontDirection;\n        if (locale.fontDirection === \"rtl\") {div.style.textAlign = \"right\"}\n      }\n    }\n    return div;\n  },\n\n  //\n  //  Get the language's font family or direction\n  //\n  fontFamily: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontFamily : null);\n  },\n  fontDirection: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontDirection : null);\n  },\n\n  //\n  //  Get the language's plural index for a number\n  //\n  plural: function (n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.plural) {return locale.plural(n)}\n    // default\n    if (n == 1) {return 1} // one\n    return 2; // other\n  },\n\n  //\n  //  Convert a number to language-specific form\n  //\n  number: function(n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.number) {return locale.number(n)}\n    // default\n    return n;\n  }\n};\n\n\n/**********************************************************/\n\nMathJax.Message = {\n  ready: false,  // used to tell when the styles are available\n  log: [{}], current: null,\n  textNodeBug: (navigator.vendor === \"Apple Computer, Inc.\" &&\n                typeof navigator.vendorSub === \"undefined\") ||\n               (window.hasOwnProperty && window.hasOwnProperty(\"konqueror\")), // Konqueror displays some gibberish with text.nodeValue = \"...\"\n\n  styles: {\n    \"#MathJax_Message\": {\n      position: \"fixed\", left: \"1px\", bottom: \"2px\",\n      'background-color': \"#E6E6E6\",  border: \"1px solid #959595\",\n      margin: \"0px\", padding: \"2px 8px\",\n      'z-index': \"102\", color: \"black\", 'font-size': \"80%\",\n      width: \"auto\", 'white-space': \"nowrap\"\n    },\n\n    \"#MathJax_MSIE_Frame\": {\n      position: \"absolute\",\n      top:0, left: 0, width: \"0px\", 'z-index': 101,\n      border: \"0px\", margin: \"0px\", padding: \"0px\"\n    }\n  },\n\n  browsers: {\n    MSIE: function (browser) {\n      MathJax.Message.msieFixedPositionBug = ((document.documentMode||0) < 7);\n      if (MathJax.Message.msieFixedPositionBug)\n        {MathJax.Hub.config.styles[\"#MathJax_Message\"].position = \"absolute\"}\n      MathJax.Message.quirks = (document.compatMode === \"BackCompat\");\n    },\n    Chrome: function (browser) {\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom = \"1.5em\";\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].left = \"1em\";\n    }\n  },\n\n  Init: function (styles) {\n    if (styles) {this.ready = true}\n    if (!document.body || !this.ready) {return false}\n    //\n    //  ASCIIMathML replaces the entire page with a copy of itself (@#!#%@!!)\n    //  so check that this.div is still part of the page, otherwise look up\n    //  the copy and use that.\n    //\n    if (this.div && this.div.parentNode == null) {\n      this.div = document.getElementById(\"MathJax_Message\");\n      this.text = (this.div ? this.div.firstChild : null);\n    }\n    if (!this.div) {\n      var frame = document.body;\n      if (this.msieFixedPositionBug && window.attachEvent) {\n        frame = this.frame = this.addDiv(document.body); frame.removeAttribute(\"id\");\n        frame.style.position = \"absolute\";\n        frame.style.border = frame.style.margin = frame.style.padding = \"0px\";\n        frame.style.zIndex = \"101\"; frame.style.height = \"0px\";\n        frame = this.addDiv(frame);\n        frame.id = \"MathJax_MSIE_Frame\";\n        window.attachEvent(\"onscroll\",this.MoveFrame);\n        window.attachEvent(\"onresize\",this.MoveFrame);\n        this.MoveFrame();\n      }\n      this.div = this.addDiv(frame); this.div.style.display = \"none\";\n    }\n    if (!this.text) {\n      this.text = this.div.appendChild(document.createTextNode(\"\"));\n    }\n    return true;\n  },\n\n  addDiv: function (parent) {\n    var div = document.createElement(\"div\");\n    div.id = \"MathJax_Message\";\n    if (parent.firstChild) {parent.insertBefore(div,parent.firstChild)}\n      else {parent.appendChild(div)}\n    return div;\n  },\n\n  MoveFrame: function () {\n    var body = (MathJax.Message.quirks ? document.body : document.documentElement);\n    var frame = MathJax.Message.frame;\n    frame.style.left = body.scrollLeft + 'px';\n    frame.style.top = body.scrollTop + 'px';\n    frame.style.width = body.clientWidth + 'px';\n    frame = frame.firstChild;\n    frame.style.height = body.clientHeight + 'px';\n  },\n\n  localize: function (message) {\n    return MathJax.Localization._(message,message);\n  },\n\n  filterText: function (text,n,id) {\n    if (MathJax.Hub.config.messageStyle === \"simple\") {\n      if (id === \"LoadFile\") {\n        if (!this.loading) {this.loading = this.localize(\"Loading\") + \" \"}\n        text = this.loading; this.loading += \".\";\n      } else if (id === \"ProcessMath\") {\n        if (!this.processing) {this.processing = this.localize(\"Processing\") + \" \"}\n        text = this.processing; this.processing += \".\";\n      } else if (id === \"TypesetMath\") {\n        if (!this.typesetting) {this.typesetting = this.localize(\"Typesetting\") + \" \"}\n        text = this.typesetting; this.typesetting += \".\";\n      }\n    }\n    return text;\n  },\n\n  clearCounts: function () {\n    delete this.loading;\n    delete this.processing;\n    delete this.typesetting;\n  },\n\n  Set: function (text,n,clearDelay) {\n    if (n == null) {n = this.log.length; this.log[n] = {}}\n    //\n    //  Translate message if it is [id,message,arguments]\n    //\n    var id = \"\";\n    if (MathJax.Object.isArray(text)) {\n      id = text[0]; if (MathJax.Object.isArray(id)) {id = id[1]}\n      //\n      // Localization._() will throw a restart error if a localization file\n      //   needs to be loaded, so trap that and redo the Set() call\n      //   after it is loaded.\n      //\n      try {\n        text = MathJax.Localization._.apply(MathJax.Localization,text);\n      } catch (err) {\n        if (!err.restart) {throw err}\n        if (!err.restart.called) {\n          //\n          //  Mark it so we can tell if the Clear() comes before the message is displayed\n          //\n          if (this.log[n].restarted == null) {this.log[n].restarted = 0}\n          this.log[n].restarted++; delete this.log[n].cleared;\n          MathJax.Callback.After([\"Set\",this,text,n,clearDelay],err.restart);\n          return n;\n        }\n      }\n    }\n    //\n    // Clear the timout timer.\n    //\n    if (this.timer) {clearTimeout(this.timer); delete this.timer}\n    //\n    //  Save the message and filtered message.\n    //\n    this.log[n].text = text; this.log[n].filteredText = text = this.filterText(text,n,id);\n    //\n    //  Hook the message into the message list so we can tell\n    //   what message to put up when this one is removed.\n    //\n    if (typeof(this.log[n].next) === \"undefined\") {\n      this.log[n].next = this.current;\n      if (this.current != null) {this.log[this.current].prev = n}\n      this.current = n;\n    }\n    //\n    //  Show the message if it is the currently active one.\n    //\n    if (this.current === n && MathJax.Hub.config.messageStyle !== \"none\") {\n      if (this.Init()) {\n        if (this.textNodeBug) {this.div.innerHTML = text} else {this.text.nodeValue = text}\n        this.div.style.display = \"\";\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else {\n        window.status = text;\n        this.status = true;\n      }\n    }\n    //\n    //  Check if the message was resetarted to load a localization file\n    //    and if it has been cleared in the meanwhile.\n    //\n    if (this.log[n].restarted) {\n      if (this.log[n].cleared) {clearDelay = 0}\n      if (--this.log[n].restarted === 0) {delete this.log[n].cleared}\n    }\n    //\n    //  Check if we need to clear the message automatically.\n    //\n    if (clearDelay) {setTimeout(MathJax.Callback([\"Clear\",this,n]),clearDelay)}\n      else if (clearDelay == 0) {this.Clear(n,0)}\n    //\n    //  Return the message number.\n    //\n    return n;\n  },\n\n  Clear: function (n,delay) {\n    //\n    //  Detatch the message from the active list.\n    //\n    if (this.log[n].prev != null) {this.log[this.log[n].prev].next = this.log[n].next}\n    if (this.log[n].next != null) {this.log[this.log[n].next].prev = this.log[n].prev}\n    //\n    //  If it is the current message, get the next one to show.\n    //\n    if (this.current === n) {\n      this.current = this.log[n].next;\n      if (this.text) {\n        if (this.div.parentNode == null) {this.Init()} // see ASCIIMathML comments above\n        if (this.current == null) {\n          //\n          //  If there are no more messages, remove the message box.\n          //\n          if (this.timer) {clearTimeout(this.timer); delete this.timer}\n          if (delay == null) {delay = 600}\n          if (delay === 0) {this.Remove()}\n\t    else {this.timer = setTimeout(MathJax.Callback([\"Remove\",this]),delay)}\n        } else if (MathJax.Hub.config.messageStyle !== \"none\") {\n          //\n          //  If there is an old message, put it in place\n          //\n          if (this.textNodeBug) {this.div.innerHTML = this.log[this.current].filteredText}\n                           else {this.text.nodeValue = this.log[this.current].filteredText}\n        }\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else if (this.status) {\n        window.status = (this.current == null ? \"\" : this.log[this.current].text);\n      }\n    }\n    //\n    //  Clean up the log data no longer needed\n    //\n    delete this.log[n].next; delete this.log[n].prev;\n    delete this.log[n].filteredText;\n    //\n    //  If this is a restarted localization message, mark that it has been cleared\n    //    while waiting for the file to load.\n    //\n    if (this.log[n].restarted) {this.log[n].cleared = true}\n  },\n\n  Remove: function () {\n    // FIXME:  do a fade out or something else interesting?\n    this.text.nodeValue = \"\";\n    this.div.style.display = \"none\";\n  },\n\n  File: function (file) {\n    return this.Set([\"LoadFile\",\"Loading %1\",file],null,null);\n  },\n\n  Log: function () {\n    var strings = [];\n    for (var i = 1, m = this.log.length; i < m; i++) {strings[i] = this.log[i].text}\n    return strings.join(\"\\n\");\n  }\n\n};\n\n/**********************************************************/\n\nMathJax.Hub = {\n  config: {\n    root: \"\",\n    config: [],      // list of configuration files to load\n    styleSheets: [], // list of CSS files to load\n    styles: {        // styles to generate in-line\n      \".MathJax_Preview\": {color: \"#888\"}\n    },\n    jax: [],         // list of input and output jax to load\n    extensions: [],  // list of extensions to load\n    preJax: null,    // pattern to remove from before math script tag\n    postJax: null,   // pattern to remove from after math script tag\n    displayAlign: 'center',       // how to align displayed equations (left, center, right)\n    displayIndent: '0',           // indentation for displayed equations (when not centered)\n    preRemoveClass: 'MathJax_Preview', // class of objects to remove preceding math script\n    showProcessingMessages: true, // display \"Processing math: nn%\" messages or not\n    messageStyle: \"normal\",       // set to \"none\" or \"simple\" (for \"Loading...\" and \"Processing...\")\n    delayStartupUntil: \"none\",    // set to \"onload\" to delay setup until the onload handler runs\n                                  // set to \"configured\" to delay startup until MathJax.Hub.Configured() is called\n                                  // set to a Callback to wait for before continuing with the startup\n    skipStartupTypeset: false,    // set to true to skip PreProcess and Process during startup\n    elements: [],             // array of elements to process when none is given explicitly\n    positionToHash: true,    // after initial typeset pass, position to #hash location?\n\n    showMathMenu: true,      // attach math context menu to typeset math?\n    showMathMenuMSIE: true,  // separtely determine if MSIE should have math menu\n                             //  (since the code for that is a bit delicate)\n\n    menuSettings: {\n      zoom: \"None\",        //  when to do MathZoom\n      CTRL: false,         //    require CTRL for MathZoom?\n      ALT: false,          //    require Alt or Option?\n      CMD: false,          //    require CMD?\n      Shift: false,        //    require Shift?\n      discoverable: false, //  make math menu discoverable on hover?\n      zscale: \"200%\",      //  the scaling factor for MathZoom\n      renderer: null,      //  set when Jax are loaded\n      font: \"Auto\",        //  what font HTML-CSS should use\n      context: \"MathJax\",  //  or \"Browser\" for pass-through to browser menu\n      locale: null,        //  the language to use for messages\n      mpContext: false,    //  true means pass menu events to MathPlayer in IE\n      mpMouse: false,      //  true means pass mouse events to MathPlayer in IE\n      texHints: true,      //  include class names for TeXAtom elements\n      FastPreview: null,   //  use PreviewHTML output as preview?\n      assistiveMML: null,  //  include hidden MathML for screen readers?\n      inTabOrder: true,    //  set to false if math elements should be included in the tabindex\n      semantics: false     //  add semantics tag with original form in MathML output\n    },\n\n    errorSettings: {\n       // localized HTML snippet structure for message to use\n      message: [\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],\n      style: {color: \"#CC0000\", \"font-style\":\"italic\"}  // style for message\n    },\n\n    ignoreMMLattributes: {}  // attributes not to copy to HTML-CSS or SVG output\n                             //   from MathML input (in addition to the ones in MML.nocopyAttributes).\n                             //   An id set to true will be ignored, one set to false will\n                             //   be allowed (even if other criteria normally would prevent\n                             //   it from being copied); use false carefully!\n  },\n\n  preProcessors: MathJax.Callback.Hooks(true), // list of callbacks for preprocessing (initialized by extensions)\n  inputJax: {},          // mime-type mapped to input jax (by registration)\n  outputJax: {order:{}}, // mime-type mapped to output jax list (by registration)\n\n  processSectionDelay: 50, // pause between input and output phases of processing\n  processUpdateTime: 250, // time between screen updates when processing math (milliseconds)\n  processUpdateDelay: 10, // pause between screen updates to allow other processing (milliseconds)\n\n  signal: MathJax.Callback.Signal(\"Hub\"), // Signal used for Hub events\n\n  Config: function (def) {\n    this.Insert(this.config,def);\n    if (this.config.Augment) {this.Augment(this.config.Augment)}\n  },\n  CombineConfig: function (name,def) {\n    var config = this.config, id, parent; name = name.split(/\\./);\n    for (var i = 0, m = name.length; i < m; i++) {\n      id = name[i]; if (!config[id]) {config[id] = {}}\n      parent = config; config = config[id];\n    }\n    parent[id] = config = this.Insert(def,config);\n    return config;\n  },\n\n  Register: {\n    PreProcessor: function () {return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},\n    MessageHook: function () {return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},\n    StartupHook: function () {return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},\n    LoadHook: function () {return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}\n  },\n  UnRegister: {\n    PreProcessor: function (hook) {MathJax.Hub.preProcessors.Remove(hook)},\n    MessageHook: function (hook) {MathJax.Hub.signal.RemoveHook(hook)},\n    StartupHook: function (hook) {MathJax.Hub.Startup.signal.RemoveHook(hook)},\n    LoadHook: function (hook) {MathJax.Ajax.removeHook(hook)}\n  },\n\n  getAllJax: function (element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxByType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].MathJax.elementJax.mimeType === type)\n            {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxByInputType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].type && scripts[i].type.replace(/ *;(.|\\s)*/,\"\") === type)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxFor: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (element && element.MathJax) {return element.MathJax.elementJax}\n    if (this.isMathJaxNode(element)) {\n      if (!element.isMathJax) {element = element.firstChild}  // for NativeMML output\n      while (element && !element.jaxID) {element = element.parentNode}\n      if (element) {return MathJax.OutputJax[element.jaxID].getJaxFromMath(element)}\n    }\n    return null;\n  },\n\n  isJax: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (this.isMathJaxNode(element)) {return 1}\n    if (element && (element.tagName||\"\").toLowerCase() === 'script') {\n      if (element.MathJax)\n        {return (element.MathJax.state === MathJax.ElementJax.STATE.PROCESSED ? 1 : -1)}\n      if (element.type && this.inputJax[element.type.replace(/ *;(.|\\s)*/,\"\")]) {return -1}\n    }\n    return 0;\n  },\n  isMathJaxNode: function (element) {\n    return !!element && (element.isMathJax || (element.className||\"\") === \"MathJax_MathML\");\n  },\n\n  setRenderer: function (renderer,type) {\n    if (!renderer) return;\n    if (!MathJax.OutputJax[renderer]) {\n      this.config.menuSettings.renderer = \"\";\n      var file = \"[MathJax]/jax/output/\"+renderer+\"/config.js\";\n      return MathJax.Ajax.Require(file,[\"setRenderer\",this,renderer,type]);\n    } else {\n      this.config.menuSettings.renderer = renderer;\n      if (type == null) {type = \"jax/mml\"}\n      var jax = this.outputJax;\n      if (jax[type] && jax[type].length) {\n        if (renderer !== jax[type][0].id) {\n          jax[type].unshift(MathJax.OutputJax[renderer]);\n          return this.signal.Post([\"Renderer Selected\",renderer]);\n        }\n      }\n      return null;\n    }\n  },\n\n  Queue: function () {\n    return this.queue.Push.apply(this.queue,arguments);\n  },\n\n  Typeset: function (element,callback) {\n    if (!MathJax.isReady) return null;\n    var ec = this.elementCallback(element,callback);\n    if (ec.count) {\n      var queue = MathJax.Callback.Queue(\n        [\"PreProcess\",this,ec.elements],\n        [\"Process\",this,ec.elements]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n\n  PreProcess: function (element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var queue = MathJax.Callback.Queue();\n    if (ec.count) {\n      var elements = (ec.count === 1 ? [ec.elements] : ec.elements);\n      queue.Push([\"Post\",this.signal,[\"Begin PreProcess\",ec.elements]]);\n      for (var i = 0, m = elements.length; i < m; i++) {\n        if (elements[i]) {queue.Push([\"Execute\",this.preProcessors,elements[i]])}\n      }\n      queue.Push([\"Post\",this.signal,[\"End PreProcess\",ec.elements]]);\n    }\n    return queue.Push(ec.callback);\n  },\n\n  Process:   function (element,callback) {return this.takeAction(\"Process\",element,callback)},\n  Update:    function (element,callback) {return this.takeAction(\"Update\",element,callback)},\n  Reprocess: function (element,callback) {return this.takeAction(\"Reprocess\",element,callback)},\n  Rerender:  function (element,callback) {return this.takeAction(\"Rerender\",element,callback)},\n\n  takeAction: function (action,element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var elements = ec.elements;\n    var queue = MathJax.Callback.Queue([\"Clear\",this.signal]);\n    var state = {\n      scripts: [],                  // filled in by prepareScripts\n      start: new Date().getTime(),  // timer for processing messages\n      i: 0, j: 0,                   // current script, current jax\n      jax: {},                      // scripts grouped by output jax\n      jaxIDs: []                    // id's of jax used\n    };\n    if (ec.count) {\n      var delay = [\"Delay\",MathJax.Callback,this.processSectionDelay];\n      if (!delay[2]) {delay = {}}\n      queue.Push(\n        [\"clearCounts\",MathJax.Message],\n        [\"Post\",this.signal,[\"Begin \"+action,elements]],\n        [\"Post\",this.signal,[\"Begin Math\",elements,action]],\n        [\"prepareScripts\",this,action,elements,state],\n        [\"Post\",this.signal,[\"Begin Math Input\",elements,action]],\n        [\"processInput\",this,state],\n        [\"Post\",this.signal,[\"End Math Input\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"preProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"Begin Math Output\",elements,action]],\n        [\"processOutput\",this,state],\n        [\"Post\",this.signal,[\"End Math Output\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"postProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"End Math\",elements,action]],\n        [\"Post\",this.signal,[\"End \"+action,elements]],\n        [\"clearCounts\",MathJax.Message]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n\n  scriptAction: {\n    Process: function (script) {},\n    Update: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax && jax.needsUpdate()) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n        else {script.MathJax.state = jax.STATE.PROCESSED}\n    },\n    Reprocess: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n    },\n    Rerender: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.OUTPUT}\n    }\n  },\n\n  prepareScripts: function (action,element,state) {\n    if (arguments.callee.disabled) return;\n    var scripts = this.elementScripts(element);\n    var STATE = MathJax.ElementJax.STATE;\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var script = scripts[i];\n      if (script.type && this.inputJax[script.type.replace(/ *;(.|\\n)*/,\"\")]) {\n        if (script.MathJax) {\n          if (script.MathJax.elementJax && script.MathJax.elementJax.hover) {\n            MathJax.Extension.MathEvents.Hover.ClearHover(script.MathJax.elementJax);\n          }\n          if (script.MathJax.state !== STATE.PENDING) {this.scriptAction[action](script)}\n        }\n        if (!script.MathJax) {script.MathJax = {state: STATE.PENDING}}\n        if (script.MathJax.error) delete script.MathJax.error;\n        if (script.MathJax.state !== STATE.PROCESSED) {state.scripts.push(script)}\n      }\n    }\n  },\n\n  checkScriptSiblings: function (script) {\n    if (script.MathJax.checked) return;\n    var config = this.config, pre = script.previousSibling;\n    if (pre && pre.nodeName === \"#text\") {\n      var preJax,postJax, post = script.nextSibling;\n      if (post && post.nodeName !== \"#text\") {post = null}\n      if (config.preJax) {\n        if (typeof(config.preJax) === \"string\") {config.preJax = new RegExp(config.preJax+\"$\")}\n        preJax = pre.nodeValue.match(config.preJax);\n      }\n      if (config.postJax && post) {\n        if (typeof(config.postJax) === \"string\") {config.postJax = new RegExp(\"^\"+config.postJax)}\n        postJax = post.nodeValue.match(config.postJax);\n      }\n      if (preJax && (!config.postJax || postJax)) {\n        pre.nodeValue  = pre.nodeValue.replace\n          (config.preJax,(preJax.length > 1? preJax[1] : \"\"));\n        pre = null;\n      }\n      if (postJax && (!config.preJax || preJax)) {\n        post.nodeValue = post.nodeValue.replace\n          (config.postJax,(postJax.length > 1? postJax[1] : \"\"));\n      }\n      if (pre && !pre.nodeValue.match(/\\S/)) {pre = pre.previousSibling}\n    }\n    if (config.preRemoveClass && pre && pre.className === config.preRemoveClass)\n      {script.MathJax.preview = pre}\n    script.MathJax.checked = 1;\n  },\n\n  processInput: function (state) {\n    var jax, STATE = MathJax.ElementJax.STATE;\n    var script, prev, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        script = state.scripts[state.i]; if (!script) {state.i++; continue}\n        //\n        //  Remove previous error marker, if any\n        //\n        prev = script.previousSibling;\n        if (prev && prev.className === \"MathJax_Error\") {prev.parentNode.removeChild(prev)}\n        //\n        //  Check if already processed or needs processing\n        //\n        if (!script.parentNode || !script.MathJax || script.MathJax.state === STATE.PROCESSED) {state.i++; continue};\n        if (!script.MathJax.elementJax || script.MathJax.state === STATE.UPDATE) {\n          this.checkScriptSiblings(script);                 // remove preJax/postJax etc.\n          var type = script.type.replace(/ *;(.|\\s)*/,\"\");  // the input jax type\n          var input = this.inputJax[type];                  // the input jax itself\n          jax = input.Process(script,state);                // run the input jax\n          if (typeof jax === 'function') {                  // if a callback was returned\n            if (jax.called) continue;                       //   go back and call Process() again\n            this.RestartAfter(jax);                         //   wait for the callback\n          }\n          jax = jax.Attach(script,input.id);                // register the jax on the script\n          this.saveScript(jax,state,script,STATE);          // add script to state\n          this.postInputHooks.Execute(jax,input.id,script); // run global jax filters\n        } else if (script.MathJax.state === STATE.OUTPUT) {\n          this.saveScript(script.MathJax.elementJax,state,script,STATE); // add script to state\n        }\n        //\n        //  Go on to the next script, and check if we need to update the processing message\n        //\n        state.i++; var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(1))}\n      }\n    } catch (err) {return this.processError(err,state,\"Input\")}\n    //\n    //  Put up final message, reset the state and return\n    //\n    if (state.scripts.length && this.config.showProcessingMessages)\n      {MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}\n    state.start = new Date().getTime(); state.i = state.j = 0;\n    return null;\n  },\n  postInputHooks: MathJax.Callback.Hooks(true),  // hooks to run after element jax is created\n  saveScript: function (jax,state,script,STATE) {\n    //\n    //  Check that output jax exists\n    //\n    if (!this.outputJax[jax.mimeType]) {\n      script.MathJax.state = STATE.UPDATE;\n      throw Error(\"No output jax registered for \"+jax.mimeType);\n    }\n    //\n    //  Record the output jax\n    //  and put this script in the queue for that jax\n    //\n    jax.outputJax = this.outputJax[jax.mimeType][0].id;\n    if (!state.jax[jax.outputJax]) {\n      if (state.jaxIDs.length === 0) {\n        // use original array until we know there are more (rather than two copies)\n        state.jax[jax.outputJax] = state.scripts;\n      } else {\n        if (state.jaxIDs.length === 1) // get the script so far for the existing jax\n          {state.jax[state.jaxIDs[0]] = state.scripts.slice(0,state.i)}\n        state.jax[jax.outputJax] = []; // start a new array for the new jax\n      }\n      state.jaxIDs.push(jax.outputJax); // save the ID of the jax\n    }\n    if (state.jaxIDs.length > 1) {state.jax[jax.outputJax].push(script)}\n    //\n    //  Mark script as needing output\n    //\n    script.MathJax.state = STATE.OUTPUT;\n  },\n\n  //\n  //  Pre- and post-process scripts by jax\n  //    (to get scaling factors, hide/show output, and so on)\n  //  Since this can cause the jax to load, we need to trap restarts\n  //\n  prepareOutput: function (state,method) {\n    while (state.j < state.jaxIDs.length) {\n      var id = state.jaxIDs[state.j], JAX = MathJax.OutputJax[id];\n      if (JAX[method]) {\n        try {\n          var result = JAX[method](state);\n          if (typeof result === 'function') {\n            if (result.called) continue;  // go back and try again\n            this.RestartAfter(result);\n          }\n        } catch (err) {\n          if (!err.restart) {\n            MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",id,method],null,600);\n            MathJax.Hub.lastPrepError = err;\n            state.j++;\n          }\n          return MathJax.Callback.After([\"prepareOutput\",this,state,method],err.restart);\n        }\n      }\n      state.j++;\n    }\n    return null;\n  },\n\n  processOutput: function (state) {\n    var result, STATE = MathJax.ElementJax.STATE, script, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        //\n        //  Check that there is an element jax\n        //\n        script = state.scripts[state.i];\n        if (!script || !script.parentNode || !script.MathJax || script.MathJax.error) {state.i++; continue}\n        var jax = script.MathJax.elementJax; if (!jax) {state.i++; continue}\n        //\n        //  Call the output Jax's Process method (which will be its Translate()\n        //  method once loaded).  Mark it as complete and remove the preview unless\n        //  the Process() call returns an explicit false value (in which case, it will\n        //  handle this later during the postProcess phase, as HTML-CSS does).\n        //\n        result = MathJax.OutputJax[jax.outputJax].Process(script,state);\n        if (result !== false) {\n          script.MathJax.state = STATE.PROCESSED;\n          if (script.MathJax.preview) {\n            script.MathJax.preview.innerHTML = \"\";\n            script.MathJax.preview.style.display = \"none\";\n          }\n          //\n          //  Signal that new math is available\n          //\n          this.signal.Post([\"New Math\",jax.inputID]); // FIXME: wait for this?  (i.e., restart if returns uncalled callback)\n        }\n        //\n        //  Go on to next math expression\n        //\n        state.i++;\n        //\n        //  Update the processing message, if needed\n        //\n        var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}\n      }\n    } catch (err) {return this.processError(err,state,\"Output\")}\n    //\n    //  Put up the typesetting-complete message\n    //\n    if (state.scripts.length && this.config.showProcessingMessages) {\n      MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);\n      MathJax.Message.Clear(0);\n    }\n    state.i = state.j = 0;\n    return null;\n  },\n\n  processMessage: function (state,type) {\n    var m = Math.floor(state.i/(state.scripts.length)*100);\n    var message = (type === \"Output\" ? [\"TypesetMath\",\"Typesetting math: %1%%\"] :\n                                       [\"ProcessMath\",\"Processing math: %1%%\"]);\n    if (this.config.showProcessingMessages) {MathJax.Message.Set(message.concat(m),0)}\n  },\n\n  processError: function (err,state,type) {\n    if (!err.restart) {\n      if (!this.config.errorSettings.message) {throw err}\n      this.formatError(state.scripts[state.i],err); state.i++;\n    }\n    this.processMessage(state,type);\n    return MathJax.Callback.After([\"process\"+type,this,state],err.restart);\n  },\n\n  formatError: function (script,err) {\n    var LOCALIZE = function (id,text,arg1,arg2) {return MathJax.Localization._(id,text,arg1,arg2)};\n    //\n    //  Get the error message, URL, and line, and save it for\n    //    reporting in the Show Math As Error menu\n    //\n    var message = LOCALIZE(\"ErrorMessage\",\"Error: %1\",err.message)+\"\\n\";\n    if (err.sourceURL||err.fileName) message += \"\\n\"+LOCALIZE(\"ErrorFile\",\"file: %1\",err.sourceURL||err.fileName);\n    if (err.line||err.lineNumber) message += \"\\n\"+LOCALIZE(\"ErrorLine\",\"line: %1\",err.line||err.lineNumber);\n    message += \"\\n\\n\"+LOCALIZE(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");\n    script.MathJax.error = MathJax.OutputJax.Error.Jax(message,script);\n    if (script.MathJax.elementJax)\n      script.MathJax.error.inputID = script.MathJax.elementJax.inputID;\n    //\n    //  Create the [Math Processing Error] span\n    //\n    var errorSettings = this.config.errorSettings;\n    var errorText = LOCALIZE(errorSettings.messageId,errorSettings.message);\n    var error = MathJax.HTML.Element(\"span\", {\n      className:\"MathJax_Error\", jaxID:\"Error\", isMathJax:true,\n      id: script.MathJax.error.inputID+\"-Frame\"\n    },[[\"span\",null,errorText]]);\n    //\n    //  Attach the menu events\n    //\n    MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function () {\n      var EVENT = MathJax.Extension.MathEvents.Event,\n          HUB = MathJax.Hub;\n      error.oncontextmenu = EVENT.Menu;\n      error.onmousedown = EVENT.Mousedown;\n      error.onkeydown = EVENT.Keydown;\n      error.tabIndex = HUB.getTabOrder(HUB.getJaxFor(script));\n    });\n    //\n    //  Insert the error into the page and remove any preview\n    //\n    var node = document.getElementById(error.id);\n    if (node) node.parentNode.removeChild(node);\n    if (script.parentNode) script.parentNode.insertBefore(error,script);\n    if (script.MathJax.preview) {\n      script.MathJax.preview.innerHTML = \"\";\n      script.MathJax.preview.style.display = \"none\";\n    }\n    //\n    //  Save the error for debugging purposes\n    //  Report the error as a signal\n    //\n    this.lastError = err;\n    this.signal.Post([\"Math Processing Error\",script,err]);\n  },\n\n  RestartAfter: function (callback) {\n    throw this.Insert(Error(\"restart\"),{restart: MathJax.Callback(callback)});\n  },\n\n  elementCallback: function (element,callback) {\n    if (callback == null && (MathJax.Object.isArray(element) || typeof element === 'function'))\n      {try {MathJax.Callback(element); callback = element; element = null} catch(e) {}}\n    if (element == null) {element = this.config.elements || []}\n    if (this.isHTMLCollection(element)) {element = this.HTMLCollection2Array(element)}\n    if (!MathJax.Object.isArray(element)) {element = [element]}\n    element = [].concat(element); // make a copy so the original isn't changed\n    for (var i = 0, m = element.length; i < m; i++)\n      {if (typeof(element[i]) === 'string') {element[i] = document.getElementById(element[i])}}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element.length == 0) {element.push(document.body)}\n    if (!callback) {callback = {}}\n    return {\n      count: element.length,\n      elements: (element.length === 1 ? element[0] : element),\n      callback: callback\n    };\n  },\n\n  elementScripts: function (element) {\n    var scripts = [];\n    if (MathJax.Object.isArray(element) || this.isHTMLCollection(element)) {\n      for (var i = 0, m = element.length; i < m; i++) {\n        var alreadyDone = 0;\n        for (var j = 0; j < i && !alreadyDone; j++)\n          {alreadyDone = element[j].contains(element[i])}\n        if (!alreadyDone) scripts.push.apply(scripts,this.elementScripts(element[i]));\n      }\n      return scripts;\n    }\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element == null) {element = document.body}\n    if (element.tagName != null && element.tagName.toLowerCase() === \"script\") {return [element]}\n    scripts = element.getElementsByTagName(\"script\");\n    if (this.msieHTMLCollectionBug) {scripts = this.HTMLCollection2Array(scripts)}\n    return scripts;\n  },\n\n  //\n  //  IE8 fails to check \"obj instanceof HTMLCollection\" for some values of obj.\n  //\n  isHTMLCollection: function (obj) {\n    return (\"HTMLCollection\" in window && typeof(obj) === \"object\" && obj instanceof HTMLCollection);\n  },\n  //\n  //  IE8 doesn't deal with HTMLCollection as an array, so convert to array\n  //\n  HTMLCollection2Array: function (nodes) {\n    if (!this.msieHTMLCollectionBug) {return [].slice.call(nodes)}\n    var NODES = [];\n    for (var i = 0, m = nodes.length; i < m; i++) {NODES[i] = nodes[i]}\n    return NODES;\n  },\n\n  Insert: function (dst,src) {\n    for (var id in src) {if (src.hasOwnProperty(id)) {\n      // allow for concatenation of arrays?\n      if (typeof src[id] === 'object' && !(MathJax.Object.isArray(src[id])) &&\n         (typeof dst[id] === 'object' || typeof dst[id] === 'function')) {\n        this.Insert(dst[id],src[id]);\n      } else {\n        dst[id] = src[id];\n      }\n    }}\n    return dst;\n  },\n\n  getTabOrder: function(script) {\n    return this.config.menuSettings.inTabOrder ? 0 : -1;\n  },\n\n  // Old browsers (e.g. Internet Explorer <= 8) do not support trim().\n  SplitList: (\"trim\" in String.prototype ?\n              function (list) {return list.trim().split(/\\s+/)} :\n              function (list) {return list.replace(/^\\s+/,'').\n                                           replace(/\\s+$/,'').split(/\\s+/)})\n};\nMathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);\nMathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});\n\n//\n//  Storage area for extensions and preprocessors\n//\nMathJax.Extension = {};\n\n//\n//  Hub Startup code\n//\nMathJax.Hub.Configured = MathJax.Callback({}); // called when configuration is complete\nMathJax.Hub.Startup = {\n  script: \"\", // the startup script from the SCRIPT call that loads MathJax.js\n  queue:   MathJax.Callback.Queue(),           // Queue used for startup actions\n  signal:  MathJax.Callback.Signal(\"Startup\"), // Signal used for startup events\n  params:  {},\n\n  //\n  //  Load the configuration files\n  //\n  Config: function () {\n    this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);\n    //\n    //  Make sure root is set before loading any files\n    //\n    if (MathJax.AuthorConfig && MathJax.AuthorConfig.root)\n      MathJax.Ajax.config.root = MathJax.AuthorConfig.root;\n    //\n    //  If a locale is given as a parameter,\n    //    set the locale and the default menu value for the locale\n    //\n    if (this.params.locale) {\n      MathJax.Localization.resetLocale(this.params.locale);\n      MathJax.Hub.config.menuSettings.locale = this.params.locale;\n    }\n    //\n    //  Run the config files, if any are given in the parameter list\n    //\n    if (this.params.config) {\n      var files = this.params.config.split(/,/);\n      for (var i = 0, m = files.length; i < m; i++) {\n        if (!files[i].match(/\\.js$/)) {files[i] += \".js\"}\n        this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",files[i])]);\n      }\n    }\n    //\n    //  Perform author configuration from in-line MathJax = {...}\n    //\n    this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);\n    //\n    //  Run the deprecated configuration script, if any (ignoring return value)\n    //  Wait for the startup delay signal\n    //  Run the mathjax-config blocks\n    //  Load the files in the configuration's config array\n    //\n    if (this.script.match(/\\S/)) {this.queue.Push(this.script+\";\\n1;\")}\n    this.queue.Push(\n      [\"ConfigDelay\",this],\n      [\"ConfigBlocks\",this],\n      [function (THIS) {return THIS.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],\n      [\"Post\",this.signal,\"End Config\"]\n    );\n  },\n  //\n  //  Return the delay callback\n  //\n  ConfigDelay: function () {\n    var delay = this.params.delayStartupUntil || MathJax.Hub.config.delayStartupUntil;\n    if (delay === \"onload\") {return this.onload}\n    if (delay === \"configured\") {return MathJax.Hub.Configured}\n    return delay;\n  },\n  //\n  //  Run the scripts of type=text/x-mathjax-config\n  //\n  ConfigBlocks: function () {\n    var scripts = document.getElementsByTagName(\"script\");\n    var queue = MathJax.Callback.Queue();\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var type = String(scripts[i].type).replace(/ /g,\"\");\n      if (type.match(/^text\\/x-mathjax-config(;.*)?$/) && !type.match(/;executed=true/)) {\n        scripts[i].type += \";executed=true\";\n        queue.Push(scripts[i].innerHTML+\";\\n1;\");\n      }\n    }\n    return queue.Push(function () {MathJax.Ajax.config.root = MathJax.Hub.config.root});\n  },\n\n  //\n  //  Read cookie and set up menu defaults\n  //  (set the locale according to the cookie)\n  //  (adjust the jax to accommodate renderer preferences)\n  //\n  Cookie: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Cookie\"],\n      [\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],\n      [function (config) {\n        var SETTINGS = config.menuSettings;\n        if (SETTINGS.locale) MathJax.Localization.resetLocale(SETTINGS.locale);\n        var renderer = config.menuSettings.renderer, jax = config.jax;\n        if (renderer) {\n          var name = \"output/\"+renderer; jax.sort();\n          for (var i = 0, m = jax.length; i < m; i++) {\n            if (jax[i].substr(0,7) === \"output/\") break;\n          }\n          if (i == m-1) {jax.pop()} else {\n            while (i < m) {if (jax[i] === name) {jax.splice(i,1); break}; i++}\n          }\n          jax.unshift(name);\n        }\n        if (SETTINGS.CHTMLpreview != null) {\n          if (SETTINGS.FastPreview == null) SETTINGS.FastPreview = SETTINGS.CHTMLpreview;\n          delete SETTINGS.CHTMLpreview;\n        }\n        if (SETTINGS.FastPreview && !MathJax.Extension[\"fast-preview\"])\n          MathJax.Hub.config.extensions.push(\"fast-preview.js\");\n        if (config.menuSettings.assistiveMML && !MathJax.Extension.AssistiveMML)\n          MathJax.Hub.config.extensions.push(\"AssistiveMML.js\");\n      },MathJax.Hub.config],\n      [\"Post\",this.signal,\"End Cookie\"]\n    );\n  },\n  //\n  //  Setup stylesheets and extra styles\n  //\n  Styles: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Styles\"],\n      [\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],\n      [\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],\n      [\"Post\",this.signal,\"End Styles\"]\n    );\n  },\n  //\n  //  Load the input and output jax\n  //\n  Jax: function () {\n    var config = MathJax.Hub.config, jax = MathJax.Hub.outputJax;\n    //  Save the order of the output jax since they are loading asynchronously\n    for (var i = 0, m = config.jax.length, k = 0; i < m; i++) {\n      var name = config.jax[i].substr(7);\n      if (config.jax[i].substr(0,7) === \"output/\" && jax.order[name] == null)\n        {jax.order[name] = k; k++}\n    }\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Jax\"],\n      [\"loadArray\",this,config.jax,\"jax\",\"config.js\"],\n      [\"Post\",this.signal,\"End Jax\"]\n    );\n  },\n  //\n  //  Load the extensions\n  //\n  Extensions: function () {\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Extensions\"],\n      [\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],\n      [\"Post\",this.signal,\"End Extensions\"]\n    );\n  },\n\n  //\n  //  Initialize the Message system\n  //\n  Message: function () {\n    MathJax.Message.Init(true);\n  },\n\n  //\n  //  Set the math menu renderer, if it isn't already\n  //  (this must come after the jax are loaded)\n  //\n  Menu: function () {\n    var menu = MathJax.Hub.config.menuSettings, jax = MathJax.Hub.outputJax, registered;\n    for (var id in jax) {if (jax.hasOwnProperty(id)) {\n      if (jax[id].length) {registered = jax[id]; break}\n    }}\n    if (registered && registered.length) {\n      if (menu.renderer && menu.renderer !== registered[0].id)\n        {registered.unshift(MathJax.OutputJax[menu.renderer])}\n      menu.renderer = registered[0].id;\n    }\n  },\n\n  //\n  //  Set the location to the designated hash position\n  //\n  Hash: function () {\n    if (MathJax.Hub.config.positionToHash && document.location.hash &&\n        document.body && document.body.scrollIntoView) {\n      var name = decodeURIComponent(document.location.hash.substr(1));\n      var target = document.getElementById(name);\n      if (!target) {\n        var a = document.getElementsByTagName(\"a\");\n        for (var i = 0, m = a.length; i < m; i++)\n          {if (a[i].name === name) {target = a[i]; break}}\n      }\n      if (target) {\n        while (!target.scrollIntoView) {target = target.parentNode}\n        target = this.HashCheck(target);\n        if (target && target.scrollIntoView)\n          {setTimeout(function () {target.scrollIntoView(true)},1)}\n      }\n    }\n  },\n  HashCheck: function (target) {\n    var jax = MathJax.Hub.getJaxFor(target);\n    if (jax && MathJax.OutputJax[jax.outputJax].hashCheck)\n      {target = MathJax.OutputJax[jax.outputJax].hashCheck(target)}\n    return target;\n  },\n\n  //\n  //  Load the Menu and Zoom code, if it hasn't already been loaded.\n  //  This is called after the initial typeset, so should no longer be\n  //  competing with other page loads, but will make these available\n  //  if needed later on.\n  //\n  MenuZoom: function () {\n    if (MathJax.Hub.config.showMathMenu) {\n      if (!MathJax.Extension.MathMenu) {\n        setTimeout(\n          function () {\n            MathJax.Callback.Queue(\n              [\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],\n              [\"loadDomain\",MathJax.Localization,\"MathMenu\"]\n            )\n          },1000\n        );\n      } else {\n        setTimeout(\n          MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),\n          1000\n        );\n      }\n      if (!MathJax.Extension.MathZoom) {\n        setTimeout(\n          MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),\n          2000\n        );\n      }\n    }\n  },\n\n  //\n  //  Setup the onload callback\n  //\n  onLoad: function () {\n    var onload = this.onload =\n      MathJax.Callback(function () {MathJax.Hub.Startup.signal.Post(\"onLoad\")});\n    if (document.body && document.readyState)\n      if (MathJax.Hub.Browser.isMSIE) {\n        // IE can change from loading to interactive before\n        //  full page is ready, so go with complete (even though\n        //  that means we may have to wait longer).\n        if (document.readyState === \"complete\") {return [onload]}\n      } else if (document.readyState !== \"loading\") {return [onload]}\n    if (window.addEventListener) {\n      window.addEventListener(\"load\",onload,false);\n      if (!this.params.noDOMContentEvent)\n        {window.addEventListener(\"DOMContentLoaded\",onload,false)}\n    }\n    else if (window.attachEvent) {window.attachEvent(\"onload\",onload)}\n    else {window.onload = onload}\n    return onload;\n  },\n\n  //\n  //  Perform the initial typesetting (or skip if configuration says to)\n  //\n  Typeset: function (element,callback) {\n    if (MathJax.Hub.config.skipStartupTypeset) {return function () {}}\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Typeset\"],\n      [\"Typeset\",MathJax.Hub,element,callback],\n      [\"Post\",this.signal,\"End Typeset\"]\n    );\n  },\n\n  //\n  //  Create a URL in the MathJax hierarchy\n  //\n  URL: function (dir,name) {\n    if (!name.match(/^([a-z]+:\\/\\/|\\[|\\/)/)) {name = \"[MathJax]/\"+dir+\"/\"+name}\n    return name;\n  },\n\n  //\n  //  Load an array of files, waiting for all of them\n  //  to be loaded before going on\n  //\n  loadArray: function (files,dir,name,synchronous) {\n    if (files) {\n      if (!MathJax.Object.isArray(files)) {files = [files]}\n      if (files.length) {\n        var queue = MathJax.Callback.Queue(), callback = {}, file;\n        for (var i = 0, m = files.length; i < m; i++) {\n          file = this.URL(dir,files[i]);\n          if (name) {file += \"/\" + name}\n          if (synchronous) {queue.Push([\"Require\",MathJax.Ajax,file,callback])}\n                      else {queue.Push(MathJax.Ajax.Require(file,callback))}\n        }\n        return queue.Push({}); // wait for everything to finish\n      }\n    }\n    return null;\n  }\n\n};\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME], ROOT = \"[\"+BASENAME+\"]\";\n  var HUB = BASE.Hub, AJAX = BASE.Ajax, CALLBACK = BASE.Callback;\n\n  var JAX = MathJax.Object.Subclass({\n    JAXFILE: \"jax.js\",\n    require: null, // array of files to load before jax.js is complete\n    config: {},\n    //\n    //  Make a subclass and return an instance of it.\n    //  (FIXME: should we replace config with a copy of the constructor's\n    //   config?  Otherwise all subclasses share the same config structure.)\n    //\n    Init: function (def,cdef) {\n      if (arguments.length === 0) {return this}\n      return (this.constructor.Subclass(def,cdef))();\n    },\n    //\n    //  Augment by merging with class definition (not replacing)\n    //\n    Augment: function (def,cdef) {\n      var cObject = this.constructor, ndef = {};\n      if (def != null) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          if (typeof def[id] === \"function\")\n            {cObject.protoFunction(id,def[id])} else {ndef[id] = def[id]}\n        }}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== cObject.prototype.toString && def.toString !== {}.toString)\n          {cObject.protoFunction('toString',def.toString)}\n      }\n      HUB.Insert(cObject.prototype,ndef);\n      cObject.Augment(null,cdef);\n      return this;\n    },\n    Translate: function (script,state) {\n      throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\");\n    },\n    Register: function (mimetype) {},\n    Config: function () {\n      this.config = HUB.CombineConfig(this.id,this.config);\n      if (this.config.Augment) {this.Augment(this.config.Augment)}\n    },\n    Startup: function () {},\n    loadComplete: function (file) {\n      if (file === \"config.js\") {\n        return AJAX.loadComplete(this.directory+\"/\"+file);\n      } else {\n        var queue = CALLBACK.Queue();\n        queue.Push(\n          HUB.Register.StartupHook(\"End Config\",{}), // wait until config complete\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Config\"],\n          [\"Config\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Require\"],\n          // Config may set the required and extensions array,\n          //  so use functions to delay making the reference until needed\n          [function (THIS) {return MathJax.Hub.Startup.loadArray(THIS.require,this.directory)},this],\n          [function (config,id) {return MathJax.Hub.Startup.loadArray(config.extensions,\"extensions/\"+id)},this.config||{},this.id],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Startup\"],\n          [\"Startup\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Ready\"]\n        );\n        if (this.copyTranslate) {\n          queue.Push(\n            [function (THIS) {\n              THIS.preProcess  = THIS.preTranslate;\n              THIS.Process     = THIS.Translate;\n              THIS.postProcess = THIS.postTranslate;\n            },this.constructor.prototype]\n          );\n        }\n        return queue.Push([\"loadComplete\",AJAX,this.directory+\"/\"+file]);\n      }\n    }\n  },{\n    id: \"Jax\",\n    version: \"2.7.3\",\n    directory: ROOT+\"/jax\",\n    extensionDir: ROOT+\"/extensions\"\n  });\n\n  /***********************************/\n\n  BASE.InputJax = JAX.Subclass({\n    elementJax: \"mml\",  // the element jax to load for this input jax\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"],\n    copyTranslate: true,\n    Process: function (script,state) {\n      var queue = CALLBACK.Queue(), file;\n      // Load any needed element jax\n      var jax = this.elementJax; if (!BASE.Object.isArray(jax)) {jax = [jax]}\n      for (var i = 0, m = jax.length; i < m; i++) {\n        file = BASE.ElementJax.directory+\"/\"+jax[i]+\"/\"+this.JAXFILE;\n        if (!this.require) {this.require = []}\n          else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n        this.require.push(file);  // so Startup will wait for it to be loaded\n        queue.Push(AJAX.Require(file));\n      }\n      // Load the input jax\n      file = this.directory+\"/\"+this.JAXFILE;\n      var load = queue.Push(AJAX.Require(file));\n      if (!load.called) {\n        this.constructor.prototype.Process = function () {\n          if (!load.called) {return load}\n          throw Error(file+\" failed to load properly\");\n        }\n      }\n      // Load the associated output jax\n      jax = HUB.outputJax[\"jax/\"+jax[0]];\n      if (jax) {queue.Push(AJAX.Require(jax[0].directory+\"/\"+this.JAXFILE))}\n      return queue.Push({});\n    },\n    needsUpdate: function (jax) {\n      var script = jax.SourceElement();\n      return (jax.originalText !== BASE.HTML.getScript(script));\n    },\n    Register: function (mimetype) {\n      if (!HUB.inputJax) {HUB.inputJax = {}}\n      HUB.inputJax[mimetype] = this;\n    }\n  },{\n    id: \"InputJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/input\",\n    extensionDir: JAX.extensionDir\n  });\n\n  /***********************************/\n\n  BASE.OutputJax = JAX.Subclass({\n    copyTranslate: true,\n    preProcess: function (state) {\n      var load, file = this.directory+\"/\"+this.JAXFILE;\n      this.constructor.prototype.preProcess = function (state) {\n\tif (!load.called) {return load}\n        throw Error(file+\" failed to load properly\");\n      }\n      load = AJAX.Require(file);\n      return load;\n    },\n    Register: function (mimetype) {\n      var jax = HUB.outputJax;\n      if (!jax[mimetype]) {jax[mimetype] = []}\n      //  If the output jax is earlier in the original configuration list, put it first here\n      if (jax[mimetype].length && (this.id === HUB.config.menuSettings.renderer ||\n            (jax.order[this.id]||0) < (jax.order[jax[mimetype][0].id]||0)))\n        {jax[mimetype].unshift(this)} else {jax[mimetype].push(this)}\n      //  Make sure the element jax is loaded before Startup is called\n      if (!this.require) {this.require = []}\n        else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n      this.require.push(BASE.ElementJax.directory+\"/\"+(mimetype.split(/\\//)[1])+\"/\"+this.JAXFILE);\n    },\n    Remove: function (jax) {}\n  },{\n    id: \"OutputJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/output\",\n    extensionDir: JAX.extensionDir,\n    fontDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/fonts\",\n    imageDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/images\"\n  });\n\n  /***********************************/\n\n  BASE.ElementJax = JAX.Subclass({\n    // make a subclass, not an instance\n    Init: function (def,cdef) {return this.constructor.Subclass(def,cdef)},\n\n    inputJax: null,\n    outputJax: null,\n    inputID: null,\n    originalText: \"\",\n    mimeType: \"\",\n    sourceMenuTitle: /*_(MathMenu)*/ [\"MathMLcode\",\"MathML Code\"],\n\n    Text: function (text,callback) {\n      var script = this.SourceElement();\n      BASE.HTML.setScript(script,text);\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Update(script,callback);\n    },\n    Reprocess: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Reprocess(script,callback);\n    },\n    Update: function (callback) {return this.Rerender(callback)},\n    Rerender: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.OUTPUT;\n      return HUB.Process(script,callback);\n    },\n    Remove: function (keep) {\n      if (this.hover) {this.hover.clear(this)}\n      BASE.OutputJax[this.outputJax].Remove(this);\n      if (!keep) {\n        HUB.signal.Post([\"Remove Math\",this.inputID]); // wait for this to finish?\n        this.Detach();\n      }\n    },\n    needsUpdate: function () {\n      return BASE.InputJax[this.inputJax].needsUpdate(this);\n    },\n\n    SourceElement: function () {return document.getElementById(this.inputID)},\n\n    Attach: function (script,inputJax) {\n      var jax = script.MathJax.elementJax;\n      if (script.MathJax.state === this.STATE.UPDATE) {\n        jax.Clone(this);\n      } else {\n        jax = script.MathJax.elementJax = this;\n        if (script.id) {this.inputID = script.id}\n          else {script.id = this.inputID = BASE.ElementJax.GetID(); this.newID = 1}\n      }\n      jax.originalText = BASE.HTML.getScript(script);\n      jax.inputJax = inputJax;\n      if (jax.root) {jax.root.inputID = jax.inputID}\n      return jax;\n    },\n    Detach: function () {\n      var script = this.SourceElement(); if (!script) return;\n      try {delete script.MathJax} catch(err) {script.MathJax = null}\n      if (this.newID) {script.id = \"\"}\n    },\n    Clone: function (jax) {\n      var id;\n      for (id in this) {\n        if (!this.hasOwnProperty(id)) continue;\n        if (typeof(jax[id]) === 'undefined' && id !== 'newID') {delete this[id]}\n      }\n      for (id in jax) {\n        if (!jax.hasOwnProperty(id)) continue;\n        if (typeof(this[id]) === 'undefined' || (this[id] !== jax[id] && id !== 'inputID'))\n          {this[id] = jax[id]}\n      }\n    }\n  },{\n    id: \"ElementJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/element\",\n    extensionDir: JAX.extensionDir,\n    ID: 0,  // jax counter (for IDs)\n    STATE: {\n      PENDING: 1,      // script is identified as math but not yet processed\n      PROCESSED: 2,    // script has been processed\n      UPDATE: 3,       // elementJax should be updated\n      OUTPUT: 4        // output should be updated (input is OK)\n    },\n\n    GetID: function () {this.ID++; return \"MathJax-Element-\"+this.ID},\n    Subclass: function () {\n      var obj = JAX.Subclass.apply(this,arguments);\n      obj.loadComplete = this.prototype.loadComplete;\n      return obj;\n    }\n  });\n  BASE.ElementJax.prototype.STATE = BASE.ElementJax.STATE;\n\n  //\n  //  Some \"Fake\" jax used to allow menu access for \"Math Processing Error\" messages\n  //\n  BASE.OutputJax.Error = {\n    id: \"Error\", version: \"2.7.3\", config: {}, errors: 0,\n    ContextMenu: function () {return BASE.Extension.MathEvents.Event.ContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    Mousedown:   function () {return BASE.Extension.MathEvents.Event.AltContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    getJaxFromMath: function (math) {return (math.nextSibling.MathJax||{}).error},\n    Jax: function (text,script) {\n      var jax = MathJax.Hub.inputJax[script.type.replace(/ *;(.|\\s)*/,\"\")];\n      this.errors++;\n      return {\n        inputJax: (jax||{id:\"Error\"}).id,  // Use Error InputJax as fallback\n        outputJax: \"Error\",\n        inputID: \"MathJax-Error-\"+this.errors,\n        sourceMenuTitle: /*_(MathMenu)*/ [\"ErrorMessage\",\"Error Message\"],\n        sourceMenuFormat: \"Error\",\n        originalText: MathJax.HTML.getScript(script),\n        errorText: text\n      }\n    }\n  };\n  BASE.InputJax.Error = {\n    id: \"Error\", version: \"2.7.3\", config: {},\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"]\n  };\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var HUB = BASE.Hub; var STARTUP = HUB.Startup; var CONFIG = HUB.config;\n  var HEAD = document.head || (document.getElementsByTagName(\"head\")[0]);\n  if (!HEAD) {HEAD = document.childNodes[0]};\n  var scripts = (document.documentElement || document).getElementsByTagName(\"script\");\n  if (scripts.length === 0 && HEAD.namespaceURI)\n    scripts = document.getElementsByTagNameNS(HEAD.namespaceURI,\"script\");\n  var namePattern = new RegExp(\"(^|/)\"+BASENAME+\"\\\\.js(\\\\?.*)?$\");\n  for (var i = scripts.length-1; i >= 0; i--) {\n    if ((scripts[i].src||\"\").match(namePattern)) {\n      STARTUP.script = scripts[i].innerHTML;\n      if (RegExp.$2) {\n        var params = RegExp.$2.substr(1).split(/\\&/);\n        for (var j = 0, m = params.length; j < m; j++) {\n          var KV = params[j].match(/(.*)=(.*)/);\n          if (KV) {STARTUP.params[unescape(KV[1])] = unescape(KV[2])}\n             else {STARTUP.params[params[j]] = true}\n        }\n      }\n      CONFIG.root = scripts[i].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,'');\n      BASE.Ajax.config.root = CONFIG.root;\n      BASE.Ajax.params = STARTUP.params;\n      break;\n    }\n  }\n\n  var AGENT = navigator.userAgent;\n  var BROWSERS = {\n    isMac:       (navigator.platform.substr(0,3) === \"Mac\"),\n    isPC:        (navigator.platform.substr(0,3) === \"Win\"),\n    isMSIE:      (\"ActiveXObject\" in window && \"clipboardData\" in window),\n    isEdge:      (\"MSGestureEvent\" in window && \"chrome\" in window &&\n                     window.chrome.loadTimes == null),\n    isFirefox:   (!!AGENT.match(/Gecko\\//) && !AGENT.match(/like Gecko/)),\n    isSafari:    (!!AGENT.match(/ (Apple)?WebKit\\//) && !AGENT.match(/ like iPhone /) &&\n                     (!window.chrome || window.chrome.app == null)),\n    isChrome:    (\"chrome\" in window && window.chrome.loadTimes != null),\n    isOpera:     (\"opera\" in window && window.opera.version != null),\n    isKonqueror: (\"konqueror\" in window && navigator.vendor == \"KDE\"),\n    versionAtLeast: function (v) {\n      var bv = (this.version).split('.'); v = (new String(v)).split('.');\n      for (var i = 0, m = v.length; i < m; i++)\n        {if (bv[i] != v[i]) {return parseInt(bv[i]||\"0\") >= parseInt(v[i])}}\n      return true;\n    },\n    Select: function (choices) {\n      var browser = choices[HUB.Browser];\n      if (browser) {return browser(HUB.Browser)}\n      return null;\n    }\n  };\n\n  var xAGENT = AGENT\n    .replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\")                                   // remove initial Mozilla, which is never right\n    .replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\")  // remove linux version\n    .replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");               // special case for these\n\n  HUB.Browser = HUB.Insert(HUB.Insert(new String(\"Unknown\"),{version: \"0.0\"}),BROWSERS);\n  for (var browser in BROWSERS) {if (BROWSERS.hasOwnProperty(browser)) {\n    if (BROWSERS[browser] && browser.substr(0,2) === \"is\") {\n      browser = browser.slice(2);\n      if (browser === \"Mac\" || browser === \"PC\") continue;\n      HUB.Browser = HUB.Insert(new String(browser),BROWSERS);\n      var VERSION = new RegExp(\n        \".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|\" +                      // for Safari, Opera10, and IE11+\n        \".*(\"+browser+\")\"+(browser == \"MSIE\" ? \" \" : \"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|\"+  // for one of the main browsers\n        \"(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");  // for unrecognized browser\n      var MATCH = VERSION.exec(xAGENT) || [\"\",\"\",\"\",\"unknown\",\"0.0\"];\n      HUB.Browser.name = (MATCH[1] != \"\" ? browser : (MATCH[3] || MATCH[5]));\n      HUB.Browser.version = MATCH[2] || MATCH[4] || MATCH[6];\n      break;\n    }\n  }};\n\n  //\n  //  Initial browser-specific info (e.g., touch up version or name, check for MathPlayer, etc.)\n  //  Wrap in try/catch just in case of error (see issue #1155).\n  //\n  try {HUB.Browser.Select({\n    Safari: function (browser) {\n      var v = parseInt((String(browser.version).split(\".\"))[0]);\n      if (v > 85) {browser.webkit = browser.version}\n      if      (v >= 538) {browser.version = \"8.0\"}\n      else if (v >= 537) {browser.version = \"7.0\"}\n      else if (v >= 536) {browser.version = \"6.0\"}\n      else if (v >= 534) {browser.version = \"5.1\"}\n      else if (v >= 533) {browser.version = \"5.0\"}\n      else if (v >= 526) {browser.version = \"4.0\"}\n      else if (v >= 525) {browser.version = \"3.1\"}\n      else if (v >  500) {browser.version = \"3.0\"}\n      else if (v >  400) {browser.version = \"2.0\"}\n      else if (v >   85) {browser.version = \"1.0\"}\n      browser.webkit = (navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];\n      browser.isMobile = (navigator.appVersion.match(/Mobile/i) != null);\n      browser.noContextMenu = browser.isMobile;\n    },\n    Firefox: function (browser) {\n      if ((browser.version === \"0.0\" || AGENT.match(/Firefox/) == null) &&\n           navigator.product === \"Gecko\") {\n        var rv = AGENT.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);\n        if (rv) {browser.version = rv[1]}\n        else {\n          var date = (navigator.buildID||navigator.productSub||\"0\").substr(0,8);\n          if      (date >= \"20111220\") {browser.version = \"9.0\"}\n          else if (date >= \"20111120\") {browser.version = \"8.0\"}\n          else if (date >= \"20110927\") {browser.version = \"7.0\"}\n          else if (date >= \"20110816\") {browser.version = \"6.0\"}\n          else if (date >= \"20110621\") {browser.version = \"5.0\"}\n          else if (date >= \"20110320\") {browser.version = \"4.0\"}\n          else if (date >= \"20100121\") {browser.version = \"3.6\"}\n          else if (date >= \"20090630\") {browser.version = \"3.5\"}\n          else if (date >= \"20080617\") {browser.version = \"3.0\"}\n          else if (date >= \"20061024\") {browser.version = \"2.0\"}\n        }\n      }\n      browser.isMobile = (navigator.appVersion.match(/Android/i) != null ||\n                          AGENT.match(/ Fennec\\//) != null ||\n                          AGENT.match(/Mobile/) != null);\n    },\n    Chrome: function (browser) {\n      browser.noContextMenu = browser.isMobile = !!navigator.userAgent.match(/ Mobile[ \\/]/);\n    },\n    Opera: function (browser) {browser.version = opera.version()},\n    Edge: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n    },\n    MSIE: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n      browser.isIE9 = !!(document.documentMode && (window.performance || window.msPerformance));\n      MathJax.HTML.setScriptBug = !browser.isIE9 || document.documentMode < 9;\n      MathJax.Hub.msieHTMLCollectionBug = (document.documentMode < 9);\n      //\n      //  MathPlayer doesn't function properly in IE10, and not at all in IE11,\n      //  so don't even try to load it.\n      //\n      if (document.documentMode < 10 && !STARTUP.params.NoMathPlayer) {\n        try {\n          new ActiveXObject(\"MathPlayer.Factory.1\");\n          browser.hasMathPlayer = true;\n        } catch (err) {}\n        try {\n          if (browser.hasMathPlayer) {\n            var mathplayer = document.createElement(\"object\");\n            mathplayer.id = \"mathplayer\"; mathplayer.classid = \"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";\n            HEAD.appendChild(mathplayer);\n            document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");\n            browser.mpNamespace = true;\n            if (document.readyState && (document.readyState === \"loading\" ||\n                                        document.readyState === \"interactive\")) {\n              document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');\n              browser.mpImported = true;\n            }\n          } else {\n            //  Adding any namespace avoids a crash in IE9 in IE9-standards mode\n            //  (any reference to document.namespaces before document.readyState is\n            //   \"complete\" causes an \"unspecified error\" to be thrown)\n            document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\");\n          }\n        } catch (err) {}\n      }\n    }\n  });} catch (err) {\n    console.error(err.message);\n  }\n  HUB.Browser.Select(MathJax.Message.browsers);\n\n  if (BASE.AuthorConfig && typeof BASE.AuthorConfig.AuthorInit === \"function\") {BASE.AuthorConfig.AuthorInit()}\n  HUB.queue = BASE.Callback.Queue();\n  HUB.queue.Push(\n    [\"Post\",STARTUP.signal,\"Begin\"],\n    [\"Config\",STARTUP],\n    [\"Cookie\",STARTUP],\n    [\"Styles\",STARTUP],\n    [\"Message\",STARTUP],\n    function () {\n      // Do Jax and Extensions in parallel, but wait for them all to complete\n      var queue = BASE.Callback.Queue(\n        STARTUP.Jax(),\n        STARTUP.Extensions()\n      );\n      return queue.Push({});\n    },\n    [\"Menu\",STARTUP],\n    STARTUP.onLoad(),\n    function () {MathJax.isReady = true}, // indicates that MathJax is ready to process math\n    [\"Typeset\",STARTUP],\n    [\"Hash\",STARTUP],\n    [\"MenuZoom\",STARTUP],\n    [\"Post\",STARTUP.signal,\"End\"]\n  );\n\n})(\"MathJax\");\n\n}}\n","map":{"mappings":[{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1892,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1893,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1894,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1895,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1896,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1897,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1898,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1899,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1900,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1901,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1902,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1903,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1904,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1905,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1906,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1907,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1908,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1909,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1910,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1911,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1912,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1913,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1914,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1915,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1916,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1917,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1918,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1919,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1920,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1921,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1922,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1923,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1924,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1925,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1926,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1927,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1928,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1929,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1930,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1931,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1932,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1933,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1934,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1935,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1936,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1937,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1938,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1939,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1940,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1941,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1942,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1943,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1944,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1945,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1946,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1947,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1948,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1949,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1950,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1951,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1952,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1953,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1954,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1955,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1956,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1957,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1958,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1959,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1960,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1961,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1962,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1963,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1964,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1965,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1966,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1967,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1968,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1969,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1970,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1971,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1972,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1973,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1974,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1975,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1976,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1977,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1978,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1979,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1980,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1981,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1982,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1983,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1984,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1985,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1986,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1987,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1988,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1989,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1990,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1991,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1992,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1993,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1994,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1995,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1996,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1997,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1998,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":1999,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2000,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2001,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2002,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2003,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2004,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2005,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2006,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2007,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2008,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2009,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2010,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2011,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2012,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2013,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2014,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2015,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2016,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2017,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2018,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2019,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2020,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2021,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2022,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2023,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2024,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2025,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2026,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2027,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2028,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2029,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2030,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2031,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2032,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2033,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2034,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2035,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2036,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2037,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2038,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2039,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2040,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2041,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2042,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2043,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2044,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2045,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2046,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2047,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2048,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2049,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2050,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2051,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2052,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2053,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2054,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2055,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2056,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2057,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2058,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2059,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2060,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2061,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2062,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2063,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2064,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2065,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2066,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2067,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2068,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2069,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2070,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2071,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2072,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2073,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2074,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2075,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2076,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2077,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2078,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2079,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2080,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2081,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2082,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2083,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2084,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2085,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2086,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2087,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2088,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2089,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2090,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2091,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2092,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2093,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2094,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2095,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2096,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2097,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2098,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2099,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2100,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2101,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2102,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2103,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2104,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2105,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2106,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2107,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2108,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2109,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2110,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2111,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2112,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2113,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2114,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2115,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2116,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2117,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2118,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2119,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2120,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2121,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2122,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2123,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2124,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2125,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2126,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2127,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2128,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2129,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2130,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2131,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2132,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2133,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2134,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2135,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2136,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2137,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2138,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2139,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2140,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2141,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2142,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2143,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2144,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2145,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2146,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2147,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2148,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2149,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2150,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2151,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2152,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2153,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2154,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2155,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2156,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2157,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2158,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2159,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2160,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2161,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2162,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2163,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2164,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2165,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2166,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2167,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2168,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2169,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2170,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2171,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2172,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2173,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2174,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2175,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2176,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2177,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2178,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2179,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2180,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2181,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2182,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2183,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2184,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2185,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2186,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2187,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2188,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2189,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2190,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2191,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2192,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2193,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2194,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2195,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2196,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2197,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2198,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2199,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2200,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2201,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2202,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2203,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2204,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2205,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2206,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2207,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2208,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2209,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2210,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2211,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2212,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2213,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2214,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2215,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2216,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2217,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2218,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2219,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2220,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2221,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2222,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2223,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2224,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2225,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2226,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2227,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2228,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2229,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2230,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2231,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2232,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2233,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2234,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2235,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2236,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2237,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2238,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2239,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2240,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2241,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2242,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2243,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2244,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2245,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2246,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2247,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2248,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2249,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2250,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2251,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2252,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2253,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2254,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2255,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2256,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2257,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2258,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2259,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2260,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2261,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2262,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2263,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2264,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2265,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2266,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2267,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2268,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2269,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2270,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2271,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2272,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2273,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2274,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2275,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2276,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2277,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2278,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2279,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2280,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2281,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2282,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2283,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2284,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2285,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2286,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2287,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2288,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2289,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2290,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2291,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2292,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2293,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2294,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2295,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2296,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2297,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2298,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2299,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2300,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2301,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2302,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2303,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2304,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2305,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2306,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2307,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2308,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2309,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2310,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2311,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2312,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2313,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2314,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2315,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2316,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2317,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2318,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2319,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2320,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2321,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2322,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2323,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2324,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2325,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2326,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2327,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2328,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2329,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2330,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2331,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2332,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2333,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2334,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2335,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2336,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2337,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2338,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2339,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2340,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2341,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2342,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2343,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2344,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2345,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2346,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2347,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2348,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2349,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2350,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2351,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2352,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2353,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2354,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2355,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2356,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2357,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2358,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2359,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2360,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2361,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2362,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2363,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2364,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2365,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2366,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2367,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2368,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2369,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2370,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2371,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2372,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2373,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2374,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2375,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2376,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2377,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2378,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2379,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2380,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2381,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2382,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2383,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2384,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2385,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2386,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2387,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2388,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2389,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2390,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2391,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2392,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2393,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2394,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2395,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2396,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2397,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2398,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2399,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2400,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2401,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2402,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2403,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2404,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2405,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2406,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2407,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2408,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2409,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2410,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2411,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2412,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2413,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2414,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2415,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2416,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2417,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2418,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2419,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2420,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2421,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2422,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2423,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2424,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2425,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2426,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2427,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2428,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2429,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2430,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2431,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2432,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2433,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2434,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2435,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2436,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2437,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2438,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2439,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2440,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2441,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2442,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2443,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2444,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2445,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2446,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2447,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2448,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2449,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2450,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2451,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2452,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2453,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2454,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2455,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2456,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2457,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2458,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2459,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2460,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2461,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2462,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2463,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2464,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2465,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2466,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2467,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2468,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2469,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2470,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2471,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2472,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2473,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2474,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2475,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2476,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2477,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2478,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2479,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2480,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2481,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2482,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2483,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2484,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2485,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2486,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2487,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2488,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2489,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2490,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2491,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2492,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2493,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2494,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2495,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2496,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2497,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2498,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2499,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2500,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2501,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2502,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2503,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2504,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2505,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2506,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2507,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2508,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2509,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2510,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2511,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2512,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2513,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2514,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2515,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2516,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2517,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2518,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2519,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2520,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2521,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2522,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2523,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2524,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2525,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2526,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2527,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2528,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2529,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2530,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2531,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2532,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2533,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2534,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2535,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2536,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2537,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2538,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2539,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2540,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2541,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2542,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2543,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2544,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2545,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2546,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2547,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2548,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2549,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2550,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2551,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2552,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2553,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2554,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2555,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2556,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2557,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2558,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2559,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2560,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2561,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2562,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2563,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2564,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2565,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2566,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2567,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2568,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2569,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2570,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2571,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2572,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2573,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2574,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2575,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2576,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2577,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2578,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2579,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2580,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2581,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2582,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2583,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2584,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2585,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2586,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2587,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2588,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2589,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2590,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2591,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2592,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2593,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2594,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2595,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2596,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2597,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2598,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2599,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2600,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2601,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2602,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2603,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2604,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2605,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2606,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2607,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2608,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2609,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2610,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2611,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2612,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2613,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2614,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2615,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2616,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2617,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2618,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2619,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2620,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2621,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2622,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2623,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2624,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2625,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2626,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2627,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2628,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2629,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2630,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2631,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2632,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2633,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2634,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2635,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2636,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2637,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2638,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2639,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2640,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2641,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2642,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2643,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2644,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2645,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2646,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2647,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2648,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2649,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2650,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2651,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2652,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2653,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2654,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2655,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2656,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2657,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2658,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2659,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2660,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2661,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2662,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2663,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2664,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2665,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2666,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2667,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2668,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2669,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2670,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2671,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2672,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2673,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2674,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2675,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2676,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2677,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2678,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2679,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2680,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2681,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2682,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2683,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2684,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2685,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2686,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2687,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2688,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2689,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2690,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2691,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2692,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2693,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2694,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2695,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2696,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2697,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2698,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2699,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2700,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2701,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2702,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2703,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2704,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2705,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2706,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2707,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2708,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2709,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2710,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2711,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2712,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2713,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2714,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2715,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2716,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2717,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2718,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2719,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2720,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2721,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2722,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2723,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2724,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2725,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2726,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2727,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2728,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2729,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2730,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2731,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2732,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2733,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2734,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2735,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2736,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2737,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2738,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2739,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2740,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2741,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2742,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2743,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2744,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2745,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2746,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2747,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2748,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2749,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2750,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2751,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2752,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2753,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2754,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2755,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2756,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2757,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2758,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2759,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2760,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2761,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2762,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2763,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2764,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2765,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2766,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2767,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2768,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2769,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2770,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2771,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2772,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2773,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2774,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2775,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2776,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2777,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2778,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2779,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2780,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2781,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2782,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2783,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2784,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2785,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2786,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2787,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2788,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2789,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2790,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2791,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2792,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2793,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2794,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2795,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2796,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2797,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2798,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2799,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2800,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2801,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2802,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2803,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2804,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2805,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2806,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2807,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2808,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2809,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2810,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2811,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2812,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2813,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2814,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2815,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2816,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2817,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2818,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2819,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2820,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2821,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2822,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2823,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2824,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2825,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2826,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2827,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2828,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2829,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2830,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2831,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2832,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2833,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2834,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2835,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2836,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2837,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2838,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2839,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2840,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2841,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2842,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2843,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2844,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2845,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2846,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2847,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2848,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2849,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2850,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2851,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2852,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2853,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2854,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2855,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2856,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2857,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2858,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2859,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2860,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2861,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2862,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2863,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2864,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2865,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2866,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2867,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2868,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2869,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2870,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2871,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2872,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2873,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2874,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2875,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2876,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2877,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2878,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2879,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2880,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2881,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2882,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2883,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2884,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2885,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2886,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2887,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2888,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2889,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2890,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2891,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2892,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2893,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2894,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2895,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2896,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2897,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2898,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2899,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2900,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2901,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2902,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2903,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2904,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2905,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2906,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2907,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2908,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2909,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2910,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2911,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2912,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2913,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2914,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2915,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2916,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2917,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2918,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2919,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2920,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2921,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2922,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2923,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2924,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2925,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2926,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2927,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2928,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2929,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2930,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2931,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2932,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2933,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2934,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2935,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2936,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2937,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2938,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2939,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2940,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2941,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2942,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2943,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2944,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2945,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2946,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2947,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2948,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2949,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2950,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2951,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2952,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2953,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2954,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2955,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2956,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2957,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2958,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2959,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2960,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2961,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2962,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2963,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2964,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2965,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2966,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2967,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2968,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2969,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2970,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2971,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2972,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2973,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2974,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2975,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2976,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2977,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2978,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2979,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2980,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2981,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2982,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2983,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2984,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2985,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2986,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2987,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2988,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2989,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2990,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2991,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2992,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2993,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2994,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2995,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2996,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2997,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2998,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":2999,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3000,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3001,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3002,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3003,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3004,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3005,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3006,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3007,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3008,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3009,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3010,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3011,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3012,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3013,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3014,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3015,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3016,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3017,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3018,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3019,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3020,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3021,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3022,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3023,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3024,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3025,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3026,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3027,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3028,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3029,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3030,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3031,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3032,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3033,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3034,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3035,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3036,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3037,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3038,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3039,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3040,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3041,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3042,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3043,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3044,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3045,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3046,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3047,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3048,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3049,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3050,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3051,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3052,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3053,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3054,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3055,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3056,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3057,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3058,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3059,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3060,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3061,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3062,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3063,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3064,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3065,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3066,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3067,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3068,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3069,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3070,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3071,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3072,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3073,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3074,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3075,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3076,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3077,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3078,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3079,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3080,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3081,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3082,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3083,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3084,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3085,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3086,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3087,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3088,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3089,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3090,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3091,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3092,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3093,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3094,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3095,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3096,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3097,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3098,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3099,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3100,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3101,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3102,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3103,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3104,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3105,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3106,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3107,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3108,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3109,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3110,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3111,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3112,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3113,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3114,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3115,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3116,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3117,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3118,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3119,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3120,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3121,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3122,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3123,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3124,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3125,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3126,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3127,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3128,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3129,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3130,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3131,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3132,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3133,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3134,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3135,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3136,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3137,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3138,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3139,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3140,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3141,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3142,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3143,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3144,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3145,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3146,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3147,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3148,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3149,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3150,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3151,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3152,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3153,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3154,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3155,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3156,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3157,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3158,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3159,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3160,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3161,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3162,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3163,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3164,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3165,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3166,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3167,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3168,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3169,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3170,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3171,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3172,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3173,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3174,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3175,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3176,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3177,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3178,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3179,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3180,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3181,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3182,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3183,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3184,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3185,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3186,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3187,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3188,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3189,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3190,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3191,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3192,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3193,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3194,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3195,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3196,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3197,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3198,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3199,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3200,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3201,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3202,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3203,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3204,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3205,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3206,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3207,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3208,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3209,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3210,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3211,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3212,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3213,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3214,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3215,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3216,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3217,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3218,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3219,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3220,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3221,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3222,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3223,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3224,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3225,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3226,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3227,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3228,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3229,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3230,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3231,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3232,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3233,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3234,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3235,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3236,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3237,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3238,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3239,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3240,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3241,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3242,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3243,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3244,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3245,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3246,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3247,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3248,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3249,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3250,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3251,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3252,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3253,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3254,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3255,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3256,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3257,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3258,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3259,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3260,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3261,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3262,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3263,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3264,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3265,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3266,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3267,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3268,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3269,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3270,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3271,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3272,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3273,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3274,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3275,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3276,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3277,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3278,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3279,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3280,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3281,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3282,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3283,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3284,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3285,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3286,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3287,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3288,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3289,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3290,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3291,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3292,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3293,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3294,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3295,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3296,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3297,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3298,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3299,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3300,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3301,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3302,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3303,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3304,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3305,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3306,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3307,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3308,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3309,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3310,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3311,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3312,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3313,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3314,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3315,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3316,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3317,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3318,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3319,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3320,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules/mathjax/unpacked/MathJax.js","original":{"line":3321,"column":0},"generated":{"line":3321,"column":0}}],"sources":{"node_modules/mathjax/unpacked/MathJax.js":"/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax.js\n *\n *  The main support code for the MathJax Hub, including the\n *  Ajax, Callback, Messaging, and Object-Oriented Programming\n *  libraries, as well as the base Jax classes, and startup\n *  processing code.\n *\n *  ---------------------------------------------------------------------\n *\n *  Copyright (c) 2009-2018 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n//\n//  Check if browser can support MathJax (no one fails this nowadays)\n//\nif (document.getElementById && document.childNodes && document.createElement) {\n//\n//  Skip if MathJax is already loaded\n//\nif (!(window.MathJax && MathJax.Hub)) {\n\n//\n//  Get author configuration from MathJax variable, if any\n//\nif (window.MathJax) {window.MathJax = {AuthorConfig: window.MathJax}}\n               else {window.MathJax = {}}\n\n// MathJax.isPacked = true; // This line is uncommented by the packer.\n\nMathJax.version = \"2.7.3\";\nMathJax.fileversion = \"2.7.3\";\nMathJax.cdnVersion = \"2.7.3\";  // specifies a revision to break caching\nMathJax.cdnFileVersions = {};  // can be used to specify revisions for individual files\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var PROTO = [];  // a static object used to indicate when a prototype is being created\n  var OBJECT = function (def) {\n    var obj = def.constructor; if (!obj) {obj = function () {}}\n    for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}}\n    return obj;\n  };\n  var CONSTRUCTOR = function () {\n    return function () {return arguments.callee.Init.call(this,arguments)};\n  };\n\n  BASE.Object = OBJECT({\n    constructor: CONSTRUCTOR(),\n\n    Subclass: function (def,classdef) {\n      var obj = CONSTRUCTOR();\n      obj.SUPER = this; obj.Init = this.Init;\n      obj.Subclass = this.Subclass; obj.Augment = this.Augment;\n      obj.protoFunction = this.protoFunction;\n      obj.can = this.can; obj.has = this.has; obj.isa = this.isa;\n      obj.prototype = new this(PROTO);\n      obj.prototype.constructor = obj;  // the real constructor\n      obj.Augment(def,classdef);\n      return obj;\n    },\n\n    Init: function (args) {\n      var obj = this;\n      if (args.length === 1 && args[0] === PROTO) {return obj}\n      if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)}\n      return obj.Init.apply(obj,args) || obj;\n    },\n\n    Augment: function (def,classdef) {\n      var id;\n      if (def != null) {\n        for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== this.prototype.toString && def.toString !== {}.toString)\n          {this.protoFunction('toString',def.toString)}\n      }\n      if (classdef != null) {\n        for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}}\n      }\n      return this;\n    },\n\n    protoFunction: function (id,def) {\n      this.prototype[id] = def;\n      if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype}\n    },\n\n    prototype: {\n      Init: function () {},\n      SUPER: function (fn) {return fn.callee.SUPER},\n      can: function (method) {return typeof(this[method]) === \"function\"},\n      has: function (property) {return typeof(this[property]) !== \"undefined\"},\n      isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)}\n    },\n\n    can: function (method)   {return this.prototype.can.call(this,method)},\n    has: function (property) {return this.prototype.has.call(this,property)},\n    isa: function (obj) {\n      var constructor = this;\n      while (constructor) {\n        if (constructor === obj) {return true} else {constructor = constructor.SUPER}\n      }\n      return false;\n    },\n\n\n    SimpleSUPER: OBJECT({\n      constructor: function (def) {return this.SimpleSUPER.define(def)},\n\n      define: function (src) {\n\tvar dst = {};\n\tif (src != null) {\n          for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}}\n\t  // MSIE doesn't list toString even if it is not native so handle it separately\n          if (src.toString !== this.prototype.toString && src.toString !== {}.toString)\n            {dst.toString = this.wrap('toString',src.toString)}\n\t}\n\treturn dst;\n      },\n\n      wrap: function (id,f) {\n        if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f}\n        var fn = function () {\n          this.SUPER = fn.SUPER[id];\n          try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err}\n          delete this.SUPER;\n          return result;\n        }\n        fn.toString = function () {return f.toString.apply(f,arguments)}\n        return fn;\n      }\n\n    })\n  });\n\n  BASE.Object.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n\n  BASE.Object.Array = Array;\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n/*\n *  Create a callback function from various forms of data:\n *\n *     MathJax.Callback(fn)    -- callback to a function\n *\n *     MathJax.Callback([fn])  -- callback to function\n *     MathJax.Callback([fn,data...])\n *                             -- callback to function with given data as arguments\n *     MathJax.Callback([object,fn])\n *                             -- call fn with object as \"this\"\n *     MathJax.Callback([object,fn,data...])\n *                             -- call fn with object as \"this\" and data as arguments\n *     MathJax.Callback([\"method\",object])\n *                             -- call method of object wth object as \"this\"\n *     MathJax.Callback([\"method\",object,data...])\n *                             -- as above, but with data as arguments to method\n *\n *     MathJax.Callback({hook: fn, data: [...], object: this})\n *                             -- give function, data, and object to act as \"this\" explicitly\n *\n *     MathJax.Callback(\"code\")  -- callback that compiles and executes a string\n *\n *     MathJax.Callback([...],i)\n *                             -- use slice of array starting at i and interpret\n *                                result as above.  (Used for passing \"arguments\" array\n *                                and trimming initial arguments, if any.)\n */\n\n/*\n *    MathJax.Callback.After([...],cb1,cb2,...)\n *                             -- make a callback that isn't called until all the other\n *                                ones are called first.  I.e., wait for a union of\n *                                callbacks to occur before making the given callback.\n */\n\n/*\n *  MathJax.Callback.Queue([callback,...])\n *                             -- make a synchronized queue of commands that process\n *                                sequentially, waiting for those that return uncalled\n *                                callbacks.\n */\n\n/*\n *  MathJax.Callback.Signal(name)\n *                             -- finds or creates a names signal, to which listeners\n *                                can be attached and are signaled by messages posted\n *                                to the signal.  Responses can be asynchronous.\n */\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  var isArray = BASE.Object.isArray;\n  //\n  //  Create a callback from an associative array\n  //\n  var CALLBACK = function (data) {\n    var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)};\n    for (var id in CALLBACK.prototype) {\n      if (CALLBACK.prototype.hasOwnProperty(id)) {\n        if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]}\n                                         else {cb[id] = CALLBACK.prototype[id]}\n      }\n    }\n    cb.toString = CALLBACK.prototype.toString;\n    return cb;\n  };\n  CALLBACK.prototype = {\n    isCallback: true,\n    hook: function () {},\n    data: [],\n    object: window,\n    execute: function () {\n      if (!this.called || this.autoReset) {\n        this.called = !this.autoReset;\n        return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)));\n      }\n    },\n    reset: function () {delete this.called},\n    toString: function () {return this.hook.toString.apply(this.hook,arguments)}\n  };\n  var ISCALLBACK = function (f) {\n    return (typeof(f) === \"function\" && f.isCallback);\n  }\n\n  //\n  //  Evaluate a string in global context\n  //\n  var EVAL = function (code) {return eval.call(window,code)}\n  var TESTEVAL = function () {\n    EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context\n    if (window.__TeSt_VaR__) {\n      try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode\n      catch (error) { window.__TeSt_VaR__ = null; }\n    } else {\n      if (window.execScript) {\n        // IE\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          window.execScript(code);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      } else {\n        // Safari2\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body}\n          var script = document.createElement(\"script\");\n          script.appendChild(document.createTextNode(code));\n          head.appendChild(script); head.removeChild(script);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      }\n    }\n    TESTEVAL = null;\n  };\n\n  //\n  //  Create a callback from various types of data\n  //\n  var USING = function (args,i) {\n    if (arguments.length > 1) {\n      if (arguments.length === 2 && !(typeof arguments[0] === 'function') &&\n          arguments[0] instanceof Object && typeof arguments[1] === 'number')\n            {args = [].slice.call(args,i)}\n      else {args = [].slice.call(arguments,0)}\n    }\n    if (isArray(args) && args.length === 1 && typeof(args[0]) === 'function') {args = args[0]}\n    if (typeof args === 'function') {\n      if (args.execute === CALLBACK.prototype.execute) {return args}\n      return CALLBACK({hook: args});\n    } else if (isArray(args)) {\n      if (typeof(args[0]) === 'string' && args[1] instanceof Object &&\n                 typeof args[1][args[0]] === 'function') {\n        return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)});\n      } else if (typeof args[0] === 'function') {\n        return CALLBACK({hook: args[0], data: args.slice(1)});\n      } else if (typeof args[1] === 'function') {\n        return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)});\n      }\n    } else if (typeof(args) === 'string') {\n      if (TESTEVAL) TESTEVAL();\n      return CALLBACK({hook: EVAL, data: [args]});\n    } else if (args instanceof Object) {\n      return CALLBACK(args);\n    } else if (typeof(args) === 'undefined') {\n      return CALLBACK({});\n    }\n    throw Error(\"Can't make callback from given data\");\n  };\n\n  //\n  //  Wait for a given time to elapse and then perform the callback\n  //\n  var DELAY = function (time,callback) {\n    callback = USING(callback);\n    callback.timeout = setTimeout(callback,time);\n    return callback;\n  };\n\n  //\n  //  Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed\n  //\n  var WAITFOR = function (callback,signal) {\n    callback = USING(callback);\n    if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++}\n  };\n  var WAITEXECUTE = function () {\n    var signals = this.signal; delete this.signal;\n    this.execute = this.oldExecute; delete this.oldExecute;\n    var result = this.execute.apply(this,arguments);\n    if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else {\n      for (var i = 0, m = signals.length; i < m; i++) {\n        signals[i].pending--;\n        if (signals[i].pending <= 0) {signals[i].call()}\n      }\n    }\n  };\n  var WAITSIGNAL = function (callback,signals) {\n    if (!isArray(signals)) {signals = [signals]}\n    if (!callback.signal) {\n      callback.oldExecute = callback.execute;\n      callback.execute = WAITEXECUTE;\n      callback.signal = signals;\n    } else if (signals.length === 1) {callback.signal.push(signals[0])}\n      else {callback.signal = callback.signal.concat(signals)}\n  };\n\n  //\n  //  Create a callback that is called when a collection of other callbacks have\n  //  all been executed.  If the callback gets called immediately (i.e., the\n  //  others are all already called), check if it returns another callback\n  //  and return that instead.\n  //\n  var AFTER = function (callback) {\n    callback = USING(callback);\n    callback.pending = 0;\n    for (var i = 1, m = arguments.length; i < m; i++)\n      {if (arguments[i]) {WAITFOR(arguments[i],callback)}}\n    if (callback.pending === 0) {\n      var result = callback();\n      if (ISCALLBACK(result)) {callback = result}\n    }\n    return callback;\n  };\n\n  //\n  //  An array of prioritized hooks that are executed sequentially\n  //  with a given set of data.\n  //\n  var HOOKS = MathJax.Object.Subclass({\n    //\n    //  Initialize the array and the auto-reset status\n    //\n    Init: function (reset) {\n      this.hooks = [];\n      this.remove = []; // used when hooks are removed during execution of list\n      this.reset = reset;\n      this.running = false;\n    },\n    //\n    //  Add a callback to the list, in priority order (default priority is 10)\n    //\n    Add: function (hook,priority) {\n      if (priority == null) {priority = 10}\n      if (!ISCALLBACK(hook)) {hook = USING(hook)}\n      hook.priority = priority;\n      var i = this.hooks.length;\n      while (i > 0 && priority < this.hooks[i-1].priority) {i--}\n      this.hooks.splice(i,0,hook);\n      return hook;\n    },\n    Remove: function (hook) {\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.hooks[i] === hook) {\n          if (this.running) {this.remove.push(i)}\n            else {this.hooks.splice(i,1)}\n          return;\n        }\n      }\n    },\n    //\n    //  Execute the list of callbacks, resetting them if requested.\n    //  If any return callbacks, return a callback that will be\n    //  executed when they all have completed.\n    //  Remove any hooks that requested being removed during processing.\n    //\n    Execute: function () {\n      var callbacks = [{}];\n      this.running = true;\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.reset) {this.hooks[i].reset()}\n        var result = this.hooks[i].apply(window,arguments);\n        if (ISCALLBACK(result) && !result.called) {callbacks.push(result)}\n      }\n      this.running = false;\n      if (this.remove.length) {this.RemovePending()}\n      if (callbacks.length === 1) {return null}\n      if (callbacks.length === 2) {return callbacks[1]}\n      return AFTER.apply({},callbacks);\n    },\n    //\n    //  Remove hooks that asked to be removed during execution of list\n    //\n    RemovePending: function () {\n      this.remove = this.remove.sort();\n      for (var i = this.remove.length-1; i >= 0; i--) {this.hooks.splice(i,1)}\n      this.remove = [];\n    }\n\n  });\n\n  //\n  //  Run an array of callbacks passing them the given data.\n  //  (Legacy function, since this has been replaced by the HOOKS object).\n  //\n  var EXECUTEHOOKS = function (hooks,data,reset) {\n    if (!hooks) {return null}\n    if (!isArray(hooks)) {hooks = [hooks]}\n    if (!isArray(data))  {data = (data == null ? [] : [data])}\n    var handler = HOOKS(reset);\n    for (var i = 0, m = hooks.length; i < m; i++) {handler.Add(hooks[i])}\n    return handler.Execute.apply(handler,data);\n  };\n\n  //\n  //  Command queue that performs commands in order, waiting when\n  //  necessary for commands to complete asynchronousely\n  //\n  var QUEUE = BASE.Object.Subclass({\n    //\n    //  Create the queue and push any commands that are specified\n    //\n    Init: function () {\n      this.pending = this.running = 0;\n      this.queue = [];\n      this.Push.apply(this,arguments);\n    },\n    //\n    //  Add commands to the queue and run them. Adding a callback object\n    //  (rather than a callback specification) queues a wait for that callback.\n    //  Return the final callback for synchronization purposes.\n    //\n    Push: function () {\n      var callback;\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        callback = USING(arguments[i]);\n        if (callback === arguments[i] && !callback.called)\n          {callback = USING([\"wait\",this,callback])}\n        this.queue.push(callback);\n      }\n      if (!this.running && !this.pending) {this.Process()}\n      return callback;\n    },\n    //\n    //  Process the command queue if we aren't waiting on another command\n    //\n    Process: function (queue) {\n      while (!this.running && !this.pending && this.queue.length) {\n        var callback = this.queue[0];\n        queue = this.queue.slice(1); this.queue = [];\n        this.Suspend(); var result = callback(); this.Resume();\n        if (queue.length) {this.queue = queue.concat(this.queue)}\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n      }\n    },\n    //\n    //  Suspend/Resume command processing on this queue\n    //\n    Suspend: function () {this.running++},\n    Resume: function () {if (this.running) {this.running--}},\n    //\n    //  Used by WAITFOR to restart the queue when an action completes\n    //\n    call: function () {this.Process.apply(this,arguments)},\n    wait: function (callback) {return callback}\n  });\n\n  //\n  //  Create a named signal that listeners can attach to, to be signaled by\n  //  postings made to the signal.  Posts are queued if they occur while one\n  //  is already in process.\n  //\n  var SIGNAL = QUEUE.Subclass({\n    Init: function (name) {\n      QUEUE.prototype.Init.call(this);\n      this.name = name;\n      this.posted = [];              // the messages posted so far\n      this.listeners = HOOKS(true);  // those with interest in this signal\n      this.posting = false;\n      this.callback = null;\n    },\n    //\n    // Post a message to the signal listeners, with callback for when complete\n    //\n    Post: function (message,callback,forget) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        this.Push([\"Post\",this,message,callback,forget]);\n      } else {\n        this.callback = callback; callback.reset();\n        if (!forget) {this.posted.push(message)}\n        this.Suspend(); this.posting = true;\n        var result = this.listeners.Execute(message);\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n        this.Resume(); this.posting = false;\n        if (!this.pending) {this.call()}\n      }\n      return callback;\n    },\n    //\n    //  Clear the post history (so new listeners won't get old messages)\n    //\n    Clear: function (callback) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        callback = this.Push([\"Clear\",this,callback]);\n      } else {\n        this.posted = [];\n        callback();\n      }\n      return callback;\n    },\n    //\n    //  Call the callback (all replies are in) and process the command queue\n    //\n    call: function () {this.callback(this); this.Process()},\n\n    //\n    //  A listener calls this to register interest in the signal (so it will be called\n    //  when posts occur).  If ignorePast is true, it will not be sent the post history.\n    //\n    Interest: function (callback,ignorePast,priority) {\n      callback = USING(callback);\n      this.listeners.Add(callback,priority);\n      if (!ignorePast) {\n        for (var i = 0, m = this.posted.length; i < m; i++) {\n          callback.reset();\n          var result = callback(this.posted[i]);\n          if (ISCALLBACK(result) && i === this.posted.length-1) {WAITFOR(result,this)}\n        }\n      }\n      return callback;\n    },\n    //\n    //  A listener calls this to remove itself from a signal\n    //\n    NoInterest: function (callback) {\n      this.listeners.Remove(callback);\n    },\n\n    //\n    //  Hook a callback to a particular message on this signal\n    //\n    MessageHook: function (msg,callback,priority) {\n      callback = USING(callback);\n      if (!this.hooks) {this.hooks = {}; this.Interest([\"ExecuteHooks\",this])}\n      if (!this.hooks[msg]) {this.hooks[msg] = HOOKS(true)}\n      this.hooks[msg].Add(callback,priority);\n      for (var i = 0, m = this.posted.length; i < m; i++)\n        {if (this.posted[i] == msg) {callback.reset(); callback(this.posted[i])}}\n      callback.msg = msg; // keep track so we can remove it\n      return callback;\n    },\n    //\n    //  Execute the message hooks for the given message\n    //\n    ExecuteHooks: function (msg) {\n      var type = (isArray(msg) ? msg[0] : msg);\n      if (!this.hooks[type]) {return null}\n      return this.hooks[type].Execute(msg);\n    },\n    //\n    //  Remove a hook safely\n    //\n    RemoveHook: function (hook) {\n      this.hooks[hook.msg].Remove(hook);\n    }\n\n  },{\n    signals: {},  // the named signals\n    find: function (name) {\n      if (!SIGNAL.signals[name]) {SIGNAL.signals[name] = new SIGNAL(name)}\n      return SIGNAL.signals[name];\n    }\n  });\n\n  //\n  //  The main entry-points\n  //\n  BASE.Callback = BASE.CallBack = USING;\n  BASE.Callback.Delay = DELAY;\n  BASE.Callback.After = AFTER;\n  BASE.Callback.Queue = QUEUE;\n  BASE.Callback.Signal = SIGNAL.find;\n  BASE.Callback.Hooks = HOOKS;\n  BASE.Callback.ExecuteHooks = EXECUTEHOOKS;\n})(\"MathJax\");\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var isSafari2 = (navigator.vendor === \"Apple Computer, Inc.\" &&\n                   typeof navigator.vendorSub === \"undefined\");\n  var sheets = 0; // used by Safari2\n\n  //\n  //  Update sheets count and look up the head object\n  //\n  var HEAD = function (head) {\n    if (document.styleSheets && document.styleSheets.length > sheets)\n      {sheets = document.styleSheets.length}\n    if (!head) {\n      head = document.head || ((document.getElementsByTagName(\"head\"))[0]);\n      if (!head) {head = document.body}\n    }\n    return head;\n  };\n\n  //\n  //  Remove scripts that are completed so they don't clutter up the HEAD.\n  //  This runs via setTimeout since IE7 can't remove the script while it is running.\n  //\n  var SCRIPTS = [];  // stores scripts to be removed after a delay\n  var REMOVESCRIPTS = function () {\n    for (var i = 0, m = SCRIPTS.length; i < m; i++) {BASE.Ajax.head.removeChild(SCRIPTS[i])}\n    SCRIPTS = [];\n  };\n\n  var PATH = {};\n  PATH[BASENAME] = \"\";                                        // empty path gets the root URL\n  PATH.a11y = '[MathJax]/extensions/a11y';                    // a11y extensions\n  PATH.Contrib = \"https://cdn.mathjax.org/mathjax/contrib\";   // the third-party extensions\n\n  BASE.Ajax = {\n    loaded: {},         // files already loaded\n    loading: {},        // files currently in process of loading\n    loadHooks: {},      // hooks to call when files are loaded\n    timeout: 15*1000,   // timeout for loading of files (15 seconds)\n    styleDelay: 1,      // delay to use before styles are available\n    config: {\n      root: \"\",         // URL of root directory to load from\n      path: PATH        // paths to named URL's (e.g., [MathJax]/...)\n    },\n    params:  {},        // filled in from MathJax.js?...\n\n    STATUS: {\n      OK: 1,         // file is loading or did load OK\n      ERROR: -1      // file timed out during load\n    },\n\n    //\n    //  Return a complete URL to a file (replacing any root names)\n    //\n    fileURL: function (file) {\n      var match;\n      while ((match = file.match(/^\\[([-._a-z0-9]+)\\]/i)) && PATH.hasOwnProperty(match[1])) {\n        file = (PATH[match[1]]||this.config.root) + file.substr(match[1].length+2);\n      }\n      return file;\n    },\n    //\n    //  Replace root names if URL includes one\n    //\n    fileName: function (url) {\n      var root = this.config.root;\n      if (url.substr(0,root.length) === root) {url = \"[\"+BASENAME+\"]\"+url.substr(root.length)}\n      do {\n        var recheck = false;\n        for (var id in PATH) {if (PATH.hasOwnProperty(id) && PATH[id]) {\n          if (url.substr(0,PATH[id].length) === PATH[id]) {\n            url = \"[\"+id+\"]\"+url.substr(PATH[id].length);\n            recheck = true;\n            break;\n          }\n        }}\n      } while (recheck);\n      return url;\n    },\n    //\n    //  Cache-breaking revision number for file\n    //\n    fileRev: function (file) {\n      var V = BASE.cdnFileVersions[file] || BASE.cdnVersion || '';\n      if (V) {V = \"?V=\"+V}\n      return V;\n    },\n    urlRev: function (file) {return this.fileURL(file)+this.fileRev(file)},\n\n    //\n    //  Load a file if it hasn't been already.\n    //  Make sure the file URL is \"safe\"?\n    //\n    Require: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      if (this.params.noContrib && file.substr(0,9) === \"[Contrib]\") {\n        callback(this.STATUS.ERROR);\n      } else {\n        file = this.fileURL(file);\n        // FIXME: check that URL is OK\n        if (this.loaded[file]) {\n          callback(this.loaded[file]);\n        } else {\n          var FILE = {}; FILE[type] = file;\n          this.Load(FILE,callback);\n        }\n      }\n      return callback;\n    },\n\n    //\n    //  Load a file regardless of where it is and whether it has\n    //  already been loaded.\n    //\n    Load: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      file = this.fileURL(file);\n      if (this.loading[file]) {\n        this.addHook(file,callback);\n      } else {\n        this.head = HEAD(this.head);\n        if (this.loader[type]) {this.loader[type].call(this,file,callback)}\n          else {throw Error(\"Can't load files of type \"+type)}\n      }\n      return callback;\n    },\n\n    //\n    //  Register a load hook for a particular file (it will be called when\n    //  loadComplete() is called for that file)\n    //\n    LoadHook: function (file,callback,priority) {\n      callback = BASE.Callback(callback);\n      if (file instanceof Object)\n        {for (var i in file) {if (file.hasOwnProperty(i)) {file = file[i]}}}\n      file = this.fileURL(file);\n      if (this.loaded[file]) {callback(this.loaded[file])}\n        else {this.addHook(file,callback,priority)}\n      return callback;\n    },\n    addHook: function (file,callback,priority) {\n      if (!this.loadHooks[file]) {this.loadHooks[file] = MathJax.Callback.Hooks()}\n      this.loadHooks[file].Add(callback,priority);\n      callback.file = file;\n    },\n    removeHook: function (hook) {\n      if (this.loadHooks[hook.file]) {\n        this.loadHooks[hook.file].Remove(hook);\n        if (!this.loadHooks[hook.file].hooks.length) {delete this.loadHooks[hook.file]}\n      }\n    },\n\n    //\n    //  Used when files are combined in a preloading configuration file\n    //\n    Preloading: function () {\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        var file = this.fileURL(arguments[i]);\n        if (!this.loading[file]) {this.loading[file] = {preloaded: true}}\n      }\n    },\n\n    //\n    //  Code used to load the various types of files\n    //  (JS for JavaScript, CSS for style sheets)\n    //\n    loader: {\n      //\n      //  Create a SCRIPT tag to load the file\n      //\n      JS: function (file,callback) {\n        var name = this.fileName(file);\n        var script = document.createElement(\"script\");\n        var timeout = BASE.Callback([\"loadTimeout\",this,file]);\n        this.loading[file] = {\n          callback: callback,\n          timeout: setTimeout(timeout,this.timeout),\n          status: this.STATUS.OK,\n          script: script\n        };\n        //\n        // Add this to the structure above after it is created to prevent recursion\n        //  when loading the initial localization file (before loading message is available)\n        //\n        this.loading[file].message = BASE.Message.File(name);\n        script.onerror = timeout;  // doesn't work in IE and no apparent substitute\n        script.type = \"text/javascript\";\n        script.src = file+this.fileRev(name);\n        this.head.appendChild(script);\n      },\n      //\n      //  Create a LINK tag to load the style sheet\n      //\n      CSS: function (file,callback) {\n        var name = this.fileName(file);\n        var link = document.createElement(\"link\");\n        link.rel = \"stylesheet\"; link.type = \"text/css\";\n        link.href = file+this.fileRev(name);\n        this.loading[file] = {\n          callback: callback,\n          message: BASE.Message.File(name),\n          status: this.STATUS.OK\n        };\n        this.head.appendChild(link);\n        this.timer.create.call(this,[this.timer.file,file],link);\n      }\n    },\n\n    //\n    //  Timing code for checking when style sheets are available.\n    //\n    timer: {\n      //\n      //  Create the timing callback and start the timing loop.\n      //  We use a delay because some browsers need it to allow the styles\n      //  to be processed.\n      //\n      create: function (callback,node) {\n        callback = BASE.Callback(callback);\n        if (node.nodeName === \"STYLE\" && node.styleSheet &&\n            typeof(node.styleSheet.cssText) !== 'undefined') {\n          callback(this.STATUS.OK); // MSIE processes style immediately, but doesn't set its styleSheet!\n        } else if (window.chrome && node.nodeName === \"LINK\") {\n          callback(this.STATUS.OK); // Chrome doesn't give access to cssRules for stylesheet in\n                                    //   a link node, so we can't detect when it is loaded.\n        } else if (isSafari2) {\n          this.timer.start(this,[this.timer.checkSafari2,sheets++,callback],this.styleDelay);\n        } else {\n          this.timer.start(this,[this.timer.checkLength,node,callback],this.styleDelay);\n        }\n        return callback;\n      },\n      //\n      //  Start the timer for the given callback checker\n      //\n      start: function (AJAX,check,delay,timeout) {\n        check = BASE.Callback(check);\n        check.execute = this.execute; check.time = this.time;\n        check.STATUS = AJAX.STATUS; check.timeout = timeout || AJAX.timeout;\n        check.delay = check.total = delay || 0;\n        if (delay) {setTimeout(check,delay)} else {check()}\n      },\n      //\n      //  Increment the time total, increase the delay\n      //  and test if we are past the timeout time.\n      //\n      time: function (callback) {\n        this.total += this.delay;\n        this.delay = Math.floor(this.delay * 1.05 + 5);\n        if (this.total >= this.timeout) {callback(this.STATUS.ERROR); return 1}\n        return 0;\n      },\n      //\n      //  For JS file loads, call the proper routine according to status\n      //\n      file: function (file,status) {\n        if (status < 0) {BASE.Ajax.loadTimeout(file)} else {BASE.Ajax.loadComplete(file)}\n      },\n      //\n      //  Call the hook with the required data\n      //\n      execute: function () {this.hook.call(this.object,this,this.data[0],this.data[1])},\n      //\n      //  Safari2 doesn't set the link's stylesheet, so we need to look in the\n      //  document.styleSheets array for the new sheet when it is created\n      //\n      checkSafari2: function (check,length,callback) {\n        if (check.time(callback)) return;\n        if (document.styleSheets.length > length &&\n            document.styleSheets[length].cssRules &&\n            document.styleSheets[length].cssRules.length)\n          {callback(check.STATUS.OK)} else {setTimeout(check,check.delay)}\n      },\n      //\n      //  Look for the stylesheets rules and check when they are defined\n      //  and no longer of length zero.  (This assumes there actually ARE\n      //  some rules in the stylesheet.)\n      //\n      checkLength: function (check,node,callback) {\n        if (check.time(callback)) return;\n        var isStyle = 0; var sheet = (node.sheet || node.styleSheet);\n        try {if ((sheet.cssRules||sheet.rules||[]).length > 0) {isStyle = 1}} catch(err) {\n          if (err.message.match(/protected variable|restricted URI/)) {isStyle = 1}\n          else if (err.message.match(/Security error/)) {\n            // Firefox3 gives \"Security error\" for missing files, so\n            //   can't distinguish that from OK files on remote servers.\n            //   or OK files in different directory from local files.\n            isStyle = 1; // just say it is OK (can't really tell)\n          }\n        }\n        if (isStyle) {\n          // Opera 9.6 requires this setTimeout\n          setTimeout(BASE.Callback([callback,check.STATUS.OK]),0);\n        } else {\n          setTimeout(check,check.delay);\n        }\n      }\n    },\n\n    //\n    //  JavaScript code must call this when they are completely initialized\n    //  (this allows them to perform asynchronous actions before indicating\n    //  that they are complete).\n    //\n    loadComplete: function (file) {\n      file = this.fileURL(file);\n      var loading = this.loading[file];\n      if (loading && !loading.preloaded) {\n        BASE.Message.Clear(loading.message);\n        clearTimeout(loading.timeout);\n\tif (loading.script) {\n\t  if (SCRIPTS.length === 0) {setTimeout(REMOVESCRIPTS,0)}\n\t  SCRIPTS.push(loading.script);\n\t}\n        this.loaded[file] = loading.status; delete this.loading[file];\n        this.addHook(file,loading.callback);\n      } else {\n        if (loading) {delete this.loading[file]}\n        this.loaded[file] = this.STATUS.OK;\n        loading = {status: this.STATUS.OK}\n      }\n      if (!this.loadHooks[file]) {return null}\n      return this.loadHooks[file].Execute(loading.status);\n    },\n\n    //\n    //  If a file fails to load within the timeout period (or the onerror handler\n    //  is called), this routine runs to signal the error condition.\n    //\n    loadTimeout: function (file) {\n      if (this.loading[file].timeout) {clearTimeout(this.loading[file].timeout)}\n      this.loading[file].status = this.STATUS.ERROR;\n      this.loadError(file);\n      this.loadComplete(file);\n    },\n\n    //\n    //  The default error hook for file load failures\n    //\n    loadError: function (file) {\n      BASE.Message.Set([\"LoadFailed\",\"File failed to load: %1\",file],null,2000);\n      BASE.Hub.signal.Post([\"file load error\",file]);\n    },\n\n    //\n    //  Defines a style sheet from a hash of style declarations (key:value pairs\n    //  where the key is the style selector and the value is a hash of CSS attributes\n    //  and values).\n    //\n    Styles: function (styles,callback) {\n      var styleString = this.StyleString(styles);\n      if (styleString === \"\") {\n        callback = BASE.Callback(callback);\n        callback();\n      } else {\n        var style = document.createElement(\"style\"); style.type = \"text/css\";\n        this.head = HEAD(this.head);\n        this.head.appendChild(style);\n        if (style.styleSheet && typeof(style.styleSheet.cssText) !== 'undefined') {\n          style.styleSheet.cssText = styleString;\n        } else {\n          style.appendChild(document.createTextNode(styleString));\n        }\n        callback = this.timer.create.call(this,callback,style);\n      }\n      return callback;\n    },\n\n    //\n    //  Create a stylesheet string from a style declaration object\n    //\n    StyleString: function (styles) {\n      if (typeof(styles) === 'string') {return styles}\n      var string = \"\", id, style;\n      for (id in styles) {if (styles.hasOwnProperty(id)) {\n        if (typeof styles[id] === 'string') {\n          string += id + \" {\"+styles[id]+\"}\\n\";\n        } else if (BASE.Object.isArray(styles[id])) {\n          for (var i = 0; i < styles[id].length; i++) {\n            style = {}; style[id] = styles[id][i];\n            string += this.StyleString(style);\n          }\n        } else if (id.substr(0,6) === '@media') {\n          string += id + \" {\"+this.StyleString(styles[id])+\"}\\n\";\n        } else if (styles[id] != null) {\n          style = [];\n          for (var name in styles[id]) {if (styles[id].hasOwnProperty(name)) {\n            if (styles[id][name] != null)\n              {style[style.length] = name + ': ' + styles[id][name]}\n          }}\n          string += id +\" {\"+style.join('; ')+\"}\\n\";\n        }\n      }}\n      return string;\n    }\n  };\n\n})(\"MathJax\");\n\n/**********************************************************/\n\nMathJax.HTML = {\n  //\n  //  Create an HTML element with given attributes and content.\n  //  The def parameter is an (optional) object containing key:value pairs\n  //  of the attributes and their values, and contents is an (optional)\n  //  array of strings to be inserted as text, or arrays of the form\n  //  [type,def,contents] that describes an HTML element to be inserted\n  //  into the current element.  Thus the contents can describe a complete\n  //  HTML snippet of arbitrary complexity.  E.g.:\n  //\n  //    MathJax.HTML.Element(\"span\",{id:\"mySpan\",style{\"font-style\":\"italic\"}},[\n  //        \"(See the \",[\"a\",{href:\"http://www.mathjax.org\"},[\"MathJax home page\"]],\n  //        \" for more details.)\"]);\n  //\n  Element: function (type,def,contents) {\n    var obj = document.createElement(type), id;\n    if (def) {\n      if (def.hasOwnProperty(\"style\")) {\n        var style = def.style; def.style = {};\n        for (id in style) {if (style.hasOwnProperty(id))\n          {def.style[id.replace(/-([a-z])/g,this.ucMatch)] = style[id]}}\n      }\n      MathJax.Hub.Insert(obj,def);\n      for (id in def) {\n        if (id === \"role\" || id.substr(0,5) === \"aria-\") obj.setAttribute(id,def[id]);\n      }\n    }\n    if (contents) {\n      if (!MathJax.Object.isArray(contents)) {contents = [contents]}\n      for (var i = 0, m = contents.length; i < m; i++) {\n        if (MathJax.Object.isArray(contents[i])) {\n          obj.appendChild(this.Element(contents[i][0],contents[i][1],contents[i][2]));\n        } else if (type === \"script\") { // IE throws an error if script is added as a text node\n          this.setScript(obj, contents[i]);\n        } else {\n          obj.appendChild(document.createTextNode(contents[i]));\n        }\n      }\n    }\n    return obj;\n  },\n  ucMatch: function (match,c) {return c.toUpperCase()},\n  addElement: function (span,type,def,contents) {return span.appendChild(this.Element(type,def,contents))},\n  TextNode: function (text) {return document.createTextNode(text)},\n  addText: function (span,text) {return span.appendChild(this.TextNode(text))},\n\n  //\n  //  Set and get the text of a script\n  //\n  setScript: function (script,text) {\n    if (this.setScriptBug) {script.text = text} else {\n      while (script.firstChild) {script.removeChild(script.firstChild)}\n      this.addText(script,text);\n    }\n  },\n  getScript: function (script) {\n    var text = (script.text === \"\" ? script.innerHTML : script.text);\n    return text.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\");\n  },\n\n  //\n  //  Manage cookies\n  //\n  Cookie: {\n    prefix: \"mjx\",\n    expires: 365,\n\n    //\n    //  Save an object as a named cookie\n    //\n    Set: function (name,def) {\n      var keys = [];\n      if (def) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          keys.push(id+\":\"+def[id].toString().replace(/&/g,\"&&\"));\n        }}\n      }\n      var cookie = this.prefix+\".\"+name+\"=\"+escape(keys.join('&;'));\n      if (this.expires) {\n        var time = new Date(); time.setDate(time.getDate() + this.expires);\n        cookie += '; expires='+time.toGMTString();\n      }\n      try {document.cookie = cookie+\"; path=/\"} catch (err) {} // ignore errors saving cookies\n    },\n\n    //\n    //  Get the contents of a named cookie and incorporate\n    //  it into the given object (or return a fresh one)\n    //\n    Get: function (name,obj) {\n      if (!obj) {obj = {}}\n      var pattern = new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+name+\"=([^;]*)(?:;|$)\");\n      var match;\n      try {match = pattern.exec(document.cookie)} catch (err) {}; // ignore errors reading cookies\n      if (match && match[1] !== \"\") {\n        var keys = unescape(match[1]).split('&;');\n        for (var i = 0, m = keys.length; i < m; i++) {\n          match = keys[i].match(/([^:]+):(.*)/);\n          var value = match[2].replace(/&&/g,'&');\n          if (value === \"true\") {value = true} else if (value === \"false\") {value = false}\n            else if (value.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)) {value = parseFloat(value)}\n          obj[match[1]] = value;\n        }\n      }\n      return obj;\n    }\n  }\n\n};\n\n\n/**********************************************************/\n\nMathJax.Localization = {\n\n  locale: \"en\",\n  directory: \"[MathJax]/localization\",\n  strings: {\n    // Currently, this list is not modified by the MathJax-i18n script. You can\n    // run the following command in MathJax/unpacked/localization to update it:\n    //\n    // find . -name \"*.js\" | xargs grep menuTitle\\: | grep -v qqq | sed 's/^\\.\\/\\(.*\\)\\/.*\\.js\\:  /    \"\\1\"\\: \\{/' | sed 's/,$/\\},/' | sed 's/\"English\"/\"English\", isLoaded: true/' > tmp ; sort tmp > tmp2 ; sed '$ s/,$//' tmp2 ; rm tmp*\n    //\n    // This only takes languages with localization data so you must also add\n    // the languages that use a remap but are not translated at all.\n    //\n    \"ar\": {menuTitle: \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"},\n    \"ast\": {menuTitle: \"asturianu\"},\n    \"bg\": {menuTitle: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},\n    \"bcc\": {menuTitle: \"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},\n    \"br\": {menuTitle: \"brezhoneg\"},\n    \"ca\": {menuTitle: \"catal\\u00E0\"},\n    \"cdo\": {menuTitle: \"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},\n    \"cs\": {menuTitle: \"\\u010De\\u0161tina\"},\n    \"da\": {menuTitle: \"dansk\"},\n    \"de\": {menuTitle: \"Deutsch\"},\n    \"diq\": {menuTitle: \"Zazaki\"},\n    \"en\": {menuTitle: \"English\", isLoaded: true},\n    \"eo\": {menuTitle: \"Esperanto\"},\n    \"es\": {menuTitle: \"espa\\u00F1ol\"},\n    \"fa\": {menuTitle: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},\n    \"fi\": {menuTitle: \"suomi\"},\n    \"fr\": {menuTitle: \"fran\\u00E7ais\"},\n    \"gl\": {menuTitle: \"galego\"},\n    \"he\": {menuTitle: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},\n    \"ia\": {menuTitle: \"interlingua\"},\n    \"it\": {menuTitle: \"italiano\"},\n    \"ja\": {menuTitle: \"\\u65E5\\u672C\\u8A9E\"},\n    \"kn\": {menuTitle: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},\n    \"ko\": {menuTitle: \"\\uD55C\\uAD6D\\uC5B4\"},\n    \"lb\": {menuTitle: \"L\\u00EBtzebuergesch\"},\n    \"lki\": {menuTitle: \"\\u0644\\u06D5\\u06A9\\u06CC\"},\n    \"lt\": {menuTitle: \"lietuvi\\u0173\"},\n    \"mk\": {menuTitle: \"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},\n    \"nl\": {menuTitle: \"Nederlands\"},\n    \"oc\": {menuTitle: \"occitan\"},\n    \"pl\": {menuTitle: \"polski\"},\n    \"pt\": {menuTitle: \"portugu\\u00EAs\"},\n    \"pt-br\": {menuTitle: \"portugu\\u00EAs do Brasil\"},\n    \"ru\": {menuTitle: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},\n    \"sco\": {menuTitle: \"Scots\"},\n    \"scn\": {menuTitle: \"sicilianu\"},\n    \"sk\": {menuTitle: \"sloven\\u010Dina\"},\n    \"sl\": {menuTitle: \"sloven\\u0161\\u010Dina\"},\n    \"sv\": {menuTitle: \"svenska\"},\n    \"th\": {menuTitle: \"\\u0E44\\u0E17\\u0E22\"},\n    \"tr\": {menuTitle: \"T\\u00FCrk\\u00E7e\"},\n    \"uk\": {menuTitle: \"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},\n    \"vi\": {menuTitle: \"Ti\\u1EBFng Vi\\u1EC7t\"},\n    \"zh-hans\": {menuTitle: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"},\n    \"zh-hant\": {menuTitle: \"\\u6C49\\u8BED\"}\n  },\n\n  //\n  //  The pattern for substitution escapes:\n  //      %n or %{n} or %{plural:%n|option1|option1|...} or %c\n  //\n  pattern: /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,\n\n  SPLIT: (\"axb\".split(/(x)/).length === 3 ?\n    function (string,regex) {return string.split(regex)} :\n    //\n    //  IE8 and below don't do split() correctly when the pattern includes\n    //    parentheses (the split should include the matched exrepssions).\n    //    So implement it by hand here.\n    //\n    function (string,regex) {\n      var result = [], match, last = 0;\n      regex.lastIndex = 0;\n      while ((match = regex.exec(string))) {\n        result.push(string.substr(last,match.index-last));\n        result.push.apply(result,match.slice(1));\n        last = match.index + match[0].length;\n      }\n      result.push(string.substr(last));\n      return result;\n    }),\n\n  _: function (id,phrase) {\n    if (MathJax.Object.isArray(phrase)) {return this.processSnippet(id,phrase)}\n    return this.processString(this.lookupPhrase(id,phrase),[].slice.call(arguments,2));\n  },\n\n  processString: function (string,args,domain) {\n    //\n    //  Process arguments for substitution\n    //    If the argument is a snippet (and we are processing snippets) do so,\n    //    Otherwise, if it is a number, convert it for the lacale\n    //\n    var i, m, isArray = MathJax.Object.isArray;\n    for (i = 0, m = args.length; i < m; i++) {\n      if (domain && isArray(args[i])) {args[i] = this.processSnippet(domain,args[i])}\n    }\n    //\n    //  Split string at escapes and process them individually\n    //\n    var parts = this.SPLIT(string,this.pattern);\n    for (i = 1, m = parts.length; i < m; i += 2) {\n      var c = parts[i].charAt(0);  // first char will be { or \\d or a char to be kept literally\n      if (c >= \"0\" && c <= \"9\") {    // %n\n        parts[i] = args[parts[i]-1];\n        if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n      } else if (c === \"{\") {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= \"0\" && c <= \"9\") {  // %{n}\n          parts[i] = args[parts[i].substr(1,parts[i].length-2)-1];\n          if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n        } else {                     // %{plural:%n|...}\n          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            if (match[1] === \"plural\") {\n              var n = args[match[2]-1];\n              if (typeof n === \"undefined\") {\n                parts[i] = \"???\";        // argument doesn't exist\n              } else {\n                n = this.plural(n) - 1;  // index of the form to use\n                var plurals = match[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/); // the parts (replacing %| with a special character)\n                if (n >= 0 && n < plurals.length) {\n                  parts[i] = this.processString(plurals[n].replace(/\\uEFEF/g,\"|\"),args,domain);\n                } else {\n                  parts[i] = \"???\";      // no string for this index\n                }\n              }\n            } else {parts[i] = \"%\"+parts[i]}  // not \"plural\", put back the % and leave unchanged\n          }\n        }\n      }\n      if (parts[i] == null) {parts[i] = \"???\"}\n    }\n    //\n    //  If we are not forming a snippet, return the completed string\n    //\n    if (!domain) {return parts.join(\"\")}\n    //\n    //  We need to return an HTML snippet, so buld it from the\n    //  broken up string with inserted parts (that could be snippets)\n    //\n    var snippet = [], part = \"\";\n    for (i = 0; i < m; i++) {\n      part += parts[i]; i++;  // add the string and move on to substitution result\n      if (i < m) {\n        if (isArray(parts[i]))  {                // substitution was a snippet\n          snippet.push(part);                        // add the accumulated string\n          snippet = snippet.concat(parts[i]);        // concatenate the substution snippet\n          part = \"\";                                 // start accumulating a new string\n        } else {                                 // substitution was a string\n          part += parts[i];                          // add to accumulating string\n        }\n      }\n    }\n    if (part !== \"\") {snippet.push(part)} // add final string\n    return snippet;\n  },\n\n  processSnippet: function (domain,snippet) {\n    var result = [];   // the new snippet\n    //\n    //  Look through the original snippet for\n    //   strings or snippets to translate\n    //\n    for (var i = 0, m = snippet.length; i < m; i++) {\n      if (MathJax.Object.isArray(snippet[i])) {\n        //\n        //  This could be a sub-snippet:\n        //    [\"tag\"] or [\"tag\",{properties}] or [\"tag\",{properties},snippet]\n        //  Or it could be something to translate:\n        //    [id,string,args] or [domain,snippet]\n        var data = snippet[i];\n        if (typeof data[1] === \"string\") {        // [id,string,args]\n          var id = data[0]; if (!MathJax.Object.isArray(id)) {id = [domain,id]}\n          var phrase = this.lookupPhrase(id,data[1]);\n          result = result.concat(this.processMarkdown(phrase,data.slice(2),domain));\n        } else if (MathJax.Object.isArray(data[1])) {    // [domain,snippet]\n          result = result.concat(this.processSnippet.apply(this,data));\n        } else if (data.length >= 3) {            // [\"tag\",{properties},snippet]\n          result.push([data[0],data[1],this.processSnippet(domain,data[2])]);\n        } else {                                  // [\"tag\"] or [\"tag\",{properties}]\n          result.push(snippet[i]);\n        }\n      } else {                                    // a string\n        result.push(snippet[i]);\n      }\n    }\n    return result;\n  },\n\n  markdownPattern: /(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,\n  //   %c or *bold*, **italics**, ***bold-italics***, or `code`, or [link](url)\n\n  processMarkdown: function (phrase,args,domain) {\n    var result = [], data;\n    //\n    //  Split the string by the Markdown pattern\n    //    (the text blocks are separated by\n    //      c,stars,star-text,backtics,code-text,link-text,URL).\n    //  Start with the first text string from the split.\n    //\n    var parts = phrase.split(this.markdownPattern);\n    var string = parts[0];\n    //\n    //  Loop through the matches and process them\n    //\n    for (var i = 1, m = parts.length; i < m; i += 8) {\n      if (parts[i+1]) {        // stars (for bold/italic)\n        //\n        //  Select the tag to use by number of stars (three stars requires two tags)\n        //\n        data = this.processString(parts[i+2],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [[\"b\",\"i\",\"i\"][parts[i+1].length-1],{},data]; // number of stars determines type\n        if (parts[i+1].length === 3) {data = [\"b\",{},data]}  // bold-italic\n      } else if (parts[i+3]) { //  backtics (for code)\n        //\n        //  Remove one leading or trailing space, and process substitutions\n        //  Make a <code> tag\n        //\n        data = this.processString(parts[i+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"code\",{},data];\n      } else if (parts[i+5]) { //  hyperlink\n        //\n        //  Process the link text, and make an <a> tag with the URL\n        //\n        data = this.processString(parts[i+5],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"a\",{href:this.processString(parts[i+6],args),target:\"_blank\"},data];\n      } else {\n        //\n        //  Escaped character (%c) gets added into the string.\n        //\n        string += parts[i]; data = null;\n      }\n      //\n      //  If there is a tag to insert,\n      //     Add any pending string, then push the tag\n      //\n      if (data) {\n        result = this.concatString(result,string,args,domain);\n        result.push(data); string = \"\";\n      }\n      //\n      //  Process the string that follows matches pattern\n      //\n      if (parts[i+7] !== \"\") {string += parts[i+7]}\n    };\n    //\n    //  Add any pending string and return the resulting snippet\n    //\n    result = this.concatString(result,string,args,domain);\n    return result;\n  },\n  concatString: function (result,string,args,domain) {\n    if (string != \"\") {\n      //\n      //  Process the substutions.\n      //  If the result is not a snippet, turn it into one.\n      //  Then concatenate the snippet to the current one\n      //\n      string = this.processString(string,args,domain);\n      if (!MathJax.Object.isArray(string)) {string = [string]}\n      result = result.concat(string);\n    }\n    return result;\n  },\n\n  lookupPhrase: function (id,phrase,domain) {\n    //\n    //  Get the domain and messageID\n    //\n    if (!domain) {domain = \"_\"}\n    if (MathJax.Object.isArray(id)) {domain = (id[0] || \"_\"); id = (id[1] || \"\")}\n    //\n    //  Check if the data is available and if not,\n    //    load it and throw a restart error so the calling\n    //    code can wait for the load and try again.\n    //\n    var load = this.loadDomain(domain);\n    if (load) {MathJax.Hub.RestartAfter(load)}\n    //\n    //  Look up the message in the localization data\n    //    (if not found, the original English is used)\n    //\n    var localeData = this.strings[this.locale];\n    if (localeData) {\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (domainData.strings && id in domainData.strings)\n          {phrase = domainData.strings[id]}\n      }\n    }\n    //\n    //  return the translated phrase\n    //\n    return phrase;\n  },\n\n  //\n  //  Load a langauge data file from the proper\n  //  directory and file.\n  //\n  loadFile: function (file,data,callback) {\n    callback = MathJax.Callback(callback);\n    file = (data.file || file);  // the data's file name or the default name\n    if (!file.match(/\\.js$/)) {file += \".js\"} // add .js if needed\n    //\n    //  Add the directory if the file doesn't\n    //  contain a full URL already.\n    //\n    if (!file.match(/^([a-z]+:|\\[MathJax\\])/)) {\n      var dir = (this.strings[this.locale].directory  ||\n                 this.directory + \"/\" + this.locale ||\n                 \"[MathJax]/localization/\" + this.locale);\n      file = dir + \"/\" + file;\n    }\n    //\n    //  Load the file and mark the data as loaded (even if it\n    //  failed to load, so we don't continue to try to load it\n    //  over and over).\n    //\n    var load = MathJax.Ajax.Require(file,function () {data.isLoaded = true; return callback()});\n    //\n    //  Return the callback if needed, otherwise null.\n    //\n    return (load.called ? null : load);\n  },\n\n  //\n  //  Check to see if the localization data are loaded\n  //  for the given domain; if not, load the data file,\n  //  and return a callback for the loading operation.\n  //  Otherwise return null (data are loaded).\n  //\n  loadDomain: function (domain,callback) {\n    var load, localeData = this.strings[this.locale];\n    if (localeData) {\n      if (!localeData.isLoaded) {\n        load = this.loadFile(this.locale,localeData);\n        if (load) {\n          return MathJax.Callback.Queue(\n            load,[\"loadDomain\",this,domain] // call again to load domain\n          ).Push(callback||{});\n        }\n      }\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (!domainData.isLoaded) {\n          load = this.loadFile(domain,domainData);\n          if (load) {return MathJax.Callback.Queue(load).Push(callback)}\n        }\n      }\n    }\n    // localization data are loaded, so just do the callback\n    return MathJax.Callback(callback)();\n  },\n\n  //\n  //  Perform a function, properly handling\n  //  restarts due to localization file loads.\n  //\n  //  Note that this may return before the function\n  //  has been called successfully, so you should\n  //  consider fn as running asynchronously.  (Callbacks\n  //  can be used to synchronize it with other actions.)\n  //\n  Try: function (fn) {\n    fn = MathJax.Callback(fn); fn.autoReset = true;\n    try {fn()} catch (err) {\n      if (!err.restart) {throw err}\n      MathJax.Callback.After([\"Try\",this,fn],err.restart);\n    }\n  },\n\n  //\n  //  Reset the current language\n  //\n  resetLocale: function(locale) {\n    // Selection algorithm:\n    // 1) Downcase locale name (e.g. \"en-US\" => \"en-us\")\n    // 2) Try a parent language (e.g. \"en-us\" => \"en\")\n    // 3) Try the fallback specified in the data (e.g. \"pt\" => \"pt-br\")\n    // 4) Otherwise don't change the locale.\n    if (!locale) return;\n    locale = locale.toLowerCase();\n    while (!this.strings[locale]) {\n      var dashPos = locale.lastIndexOf(\"-\");\n      if (dashPos === -1) return;\n      locale = locale.substring(0, dashPos);\n    }\n    var remap = this.strings[locale].remap;\n    this.locale = remap ? remap : locale;\n    MathJax.Callback.Signal(\"Hub\").Post([\"Locale Reset\", this.locale]);\n  },\n\n  //\n  //  Set the current language\n  //\n  setLocale: function(locale) {\n    this.resetLocale(locale);\n    if (MathJax.Menu) {this.loadDomain(\"MathMenu\")}\n  },\n\n  //\n  //  Add or update a language or domain\n  //\n  addTranslation: function (locale,domain,definition) {\n    var data = this.strings[locale], isNew = false;\n    if (!data) {data = this.strings[locale] = {}; isNew = true}\n    if (!data.domains) {data.domains = {}}\n    if (domain) {\n      if (!data.domains[domain]) {data.domains[domain] = {}}\n      data = data.domains[domain];\n    }\n    MathJax.Hub.Insert(data,definition);\n    if (isNew && MathJax.Menu.menu) {MathJax.Menu.CreateLocaleMenu()}\n  },\n\n  //\n  //  Set CSS for an element based on font requirements\n  //\n  setCSS: function (div) {\n    var locale = this.strings[this.locale];\n    if (locale) {\n      if (locale.fontFamily) {div.style.fontFamily = locale.fontFamily}\n      if (locale.fontDirection) {\n        div.style.direction = locale.fontDirection;\n        if (locale.fontDirection === \"rtl\") {div.style.textAlign = \"right\"}\n      }\n    }\n    return div;\n  },\n\n  //\n  //  Get the language's font family or direction\n  //\n  fontFamily: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontFamily : null);\n  },\n  fontDirection: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontDirection : null);\n  },\n\n  //\n  //  Get the language's plural index for a number\n  //\n  plural: function (n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.plural) {return locale.plural(n)}\n    // default\n    if (n == 1) {return 1} // one\n    return 2; // other\n  },\n\n  //\n  //  Convert a number to language-specific form\n  //\n  number: function(n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.number) {return locale.number(n)}\n    // default\n    return n;\n  }\n};\n\n\n/**********************************************************/\n\nMathJax.Message = {\n  ready: false,  // used to tell when the styles are available\n  log: [{}], current: null,\n  textNodeBug: (navigator.vendor === \"Apple Computer, Inc.\" &&\n                typeof navigator.vendorSub === \"undefined\") ||\n               (window.hasOwnProperty && window.hasOwnProperty(\"konqueror\")), // Konqueror displays some gibberish with text.nodeValue = \"...\"\n\n  styles: {\n    \"#MathJax_Message\": {\n      position: \"fixed\", left: \"1px\", bottom: \"2px\",\n      'background-color': \"#E6E6E6\",  border: \"1px solid #959595\",\n      margin: \"0px\", padding: \"2px 8px\",\n      'z-index': \"102\", color: \"black\", 'font-size': \"80%\",\n      width: \"auto\", 'white-space': \"nowrap\"\n    },\n\n    \"#MathJax_MSIE_Frame\": {\n      position: \"absolute\",\n      top:0, left: 0, width: \"0px\", 'z-index': 101,\n      border: \"0px\", margin: \"0px\", padding: \"0px\"\n    }\n  },\n\n  browsers: {\n    MSIE: function (browser) {\n      MathJax.Message.msieFixedPositionBug = ((document.documentMode||0) < 7);\n      if (MathJax.Message.msieFixedPositionBug)\n        {MathJax.Hub.config.styles[\"#MathJax_Message\"].position = \"absolute\"}\n      MathJax.Message.quirks = (document.compatMode === \"BackCompat\");\n    },\n    Chrome: function (browser) {\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom = \"1.5em\";\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].left = \"1em\";\n    }\n  },\n\n  Init: function (styles) {\n    if (styles) {this.ready = true}\n    if (!document.body || !this.ready) {return false}\n    //\n    //  ASCIIMathML replaces the entire page with a copy of itself (@#!#%@!!)\n    //  so check that this.div is still part of the page, otherwise look up\n    //  the copy and use that.\n    //\n    if (this.div && this.div.parentNode == null) {\n      this.div = document.getElementById(\"MathJax_Message\");\n      this.text = (this.div ? this.div.firstChild : null);\n    }\n    if (!this.div) {\n      var frame = document.body;\n      if (this.msieFixedPositionBug && window.attachEvent) {\n        frame = this.frame = this.addDiv(document.body); frame.removeAttribute(\"id\");\n        frame.style.position = \"absolute\";\n        frame.style.border = frame.style.margin = frame.style.padding = \"0px\";\n        frame.style.zIndex = \"101\"; frame.style.height = \"0px\";\n        frame = this.addDiv(frame);\n        frame.id = \"MathJax_MSIE_Frame\";\n        window.attachEvent(\"onscroll\",this.MoveFrame);\n        window.attachEvent(\"onresize\",this.MoveFrame);\n        this.MoveFrame();\n      }\n      this.div = this.addDiv(frame); this.div.style.display = \"none\";\n    }\n    if (!this.text) {\n      this.text = this.div.appendChild(document.createTextNode(\"\"));\n    }\n    return true;\n  },\n\n  addDiv: function (parent) {\n    var div = document.createElement(\"div\");\n    div.id = \"MathJax_Message\";\n    if (parent.firstChild) {parent.insertBefore(div,parent.firstChild)}\n      else {parent.appendChild(div)}\n    return div;\n  },\n\n  MoveFrame: function () {\n    var body = (MathJax.Message.quirks ? document.body : document.documentElement);\n    var frame = MathJax.Message.frame;\n    frame.style.left = body.scrollLeft + 'px';\n    frame.style.top = body.scrollTop + 'px';\n    frame.style.width = body.clientWidth + 'px';\n    frame = frame.firstChild;\n    frame.style.height = body.clientHeight + 'px';\n  },\n\n  localize: function (message) {\n    return MathJax.Localization._(message,message);\n  },\n\n  filterText: function (text,n,id) {\n    if (MathJax.Hub.config.messageStyle === \"simple\") {\n      if (id === \"LoadFile\") {\n        if (!this.loading) {this.loading = this.localize(\"Loading\") + \" \"}\n        text = this.loading; this.loading += \".\";\n      } else if (id === \"ProcessMath\") {\n        if (!this.processing) {this.processing = this.localize(\"Processing\") + \" \"}\n        text = this.processing; this.processing += \".\";\n      } else if (id === \"TypesetMath\") {\n        if (!this.typesetting) {this.typesetting = this.localize(\"Typesetting\") + \" \"}\n        text = this.typesetting; this.typesetting += \".\";\n      }\n    }\n    return text;\n  },\n\n  clearCounts: function () {\n    delete this.loading;\n    delete this.processing;\n    delete this.typesetting;\n  },\n\n  Set: function (text,n,clearDelay) {\n    if (n == null) {n = this.log.length; this.log[n] = {}}\n    //\n    //  Translate message if it is [id,message,arguments]\n    //\n    var id = \"\";\n    if (MathJax.Object.isArray(text)) {\n      id = text[0]; if (MathJax.Object.isArray(id)) {id = id[1]}\n      //\n      // Localization._() will throw a restart error if a localization file\n      //   needs to be loaded, so trap that and redo the Set() call\n      //   after it is loaded.\n      //\n      try {\n        text = MathJax.Localization._.apply(MathJax.Localization,text);\n      } catch (err) {\n        if (!err.restart) {throw err}\n        if (!err.restart.called) {\n          //\n          //  Mark it so we can tell if the Clear() comes before the message is displayed\n          //\n          if (this.log[n].restarted == null) {this.log[n].restarted = 0}\n          this.log[n].restarted++; delete this.log[n].cleared;\n          MathJax.Callback.After([\"Set\",this,text,n,clearDelay],err.restart);\n          return n;\n        }\n      }\n    }\n    //\n    // Clear the timout timer.\n    //\n    if (this.timer) {clearTimeout(this.timer); delete this.timer}\n    //\n    //  Save the message and filtered message.\n    //\n    this.log[n].text = text; this.log[n].filteredText = text = this.filterText(text,n,id);\n    //\n    //  Hook the message into the message list so we can tell\n    //   what message to put up when this one is removed.\n    //\n    if (typeof(this.log[n].next) === \"undefined\") {\n      this.log[n].next = this.current;\n      if (this.current != null) {this.log[this.current].prev = n}\n      this.current = n;\n    }\n    //\n    //  Show the message if it is the currently active one.\n    //\n    if (this.current === n && MathJax.Hub.config.messageStyle !== \"none\") {\n      if (this.Init()) {\n        if (this.textNodeBug) {this.div.innerHTML = text} else {this.text.nodeValue = text}\n        this.div.style.display = \"\";\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else {\n        window.status = text;\n        this.status = true;\n      }\n    }\n    //\n    //  Check if the message was resetarted to load a localization file\n    //    and if it has been cleared in the meanwhile.\n    //\n    if (this.log[n].restarted) {\n      if (this.log[n].cleared) {clearDelay = 0}\n      if (--this.log[n].restarted === 0) {delete this.log[n].cleared}\n    }\n    //\n    //  Check if we need to clear the message automatically.\n    //\n    if (clearDelay) {setTimeout(MathJax.Callback([\"Clear\",this,n]),clearDelay)}\n      else if (clearDelay == 0) {this.Clear(n,0)}\n    //\n    //  Return the message number.\n    //\n    return n;\n  },\n\n  Clear: function (n,delay) {\n    //\n    //  Detatch the message from the active list.\n    //\n    if (this.log[n].prev != null) {this.log[this.log[n].prev].next = this.log[n].next}\n    if (this.log[n].next != null) {this.log[this.log[n].next].prev = this.log[n].prev}\n    //\n    //  If it is the current message, get the next one to show.\n    //\n    if (this.current === n) {\n      this.current = this.log[n].next;\n      if (this.text) {\n        if (this.div.parentNode == null) {this.Init()} // see ASCIIMathML comments above\n        if (this.current == null) {\n          //\n          //  If there are no more messages, remove the message box.\n          //\n          if (this.timer) {clearTimeout(this.timer); delete this.timer}\n          if (delay == null) {delay = 600}\n          if (delay === 0) {this.Remove()}\n\t    else {this.timer = setTimeout(MathJax.Callback([\"Remove\",this]),delay)}\n        } else if (MathJax.Hub.config.messageStyle !== \"none\") {\n          //\n          //  If there is an old message, put it in place\n          //\n          if (this.textNodeBug) {this.div.innerHTML = this.log[this.current].filteredText}\n                           else {this.text.nodeValue = this.log[this.current].filteredText}\n        }\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else if (this.status) {\n        window.status = (this.current == null ? \"\" : this.log[this.current].text);\n      }\n    }\n    //\n    //  Clean up the log data no longer needed\n    //\n    delete this.log[n].next; delete this.log[n].prev;\n    delete this.log[n].filteredText;\n    //\n    //  If this is a restarted localization message, mark that it has been cleared\n    //    while waiting for the file to load.\n    //\n    if (this.log[n].restarted) {this.log[n].cleared = true}\n  },\n\n  Remove: function () {\n    // FIXME:  do a fade out or something else interesting?\n    this.text.nodeValue = \"\";\n    this.div.style.display = \"none\";\n  },\n\n  File: function (file) {\n    return this.Set([\"LoadFile\",\"Loading %1\",file],null,null);\n  },\n\n  Log: function () {\n    var strings = [];\n    for (var i = 1, m = this.log.length; i < m; i++) {strings[i] = this.log[i].text}\n    return strings.join(\"\\n\");\n  }\n\n};\n\n/**********************************************************/\n\nMathJax.Hub = {\n  config: {\n    root: \"\",\n    config: [],      // list of configuration files to load\n    styleSheets: [], // list of CSS files to load\n    styles: {        // styles to generate in-line\n      \".MathJax_Preview\": {color: \"#888\"}\n    },\n    jax: [],         // list of input and output jax to load\n    extensions: [],  // list of extensions to load\n    preJax: null,    // pattern to remove from before math script tag\n    postJax: null,   // pattern to remove from after math script tag\n    displayAlign: 'center',       // how to align displayed equations (left, center, right)\n    displayIndent: '0',           // indentation for displayed equations (when not centered)\n    preRemoveClass: 'MathJax_Preview', // class of objects to remove preceding math script\n    showProcessingMessages: true, // display \"Processing math: nn%\" messages or not\n    messageStyle: \"normal\",       // set to \"none\" or \"simple\" (for \"Loading...\" and \"Processing...\")\n    delayStartupUntil: \"none\",    // set to \"onload\" to delay setup until the onload handler runs\n                                  // set to \"configured\" to delay startup until MathJax.Hub.Configured() is called\n                                  // set to a Callback to wait for before continuing with the startup\n    skipStartupTypeset: false,    // set to true to skip PreProcess and Process during startup\n    elements: [],             // array of elements to process when none is given explicitly\n    positionToHash: true,    // after initial typeset pass, position to #hash location?\n\n    showMathMenu: true,      // attach math context menu to typeset math?\n    showMathMenuMSIE: true,  // separtely determine if MSIE should have math menu\n                             //  (since the code for that is a bit delicate)\n\n    menuSettings: {\n      zoom: \"None\",        //  when to do MathZoom\n      CTRL: false,         //    require CTRL for MathZoom?\n      ALT: false,          //    require Alt or Option?\n      CMD: false,          //    require CMD?\n      Shift: false,        //    require Shift?\n      discoverable: false, //  make math menu discoverable on hover?\n      zscale: \"200%\",      //  the scaling factor for MathZoom\n      renderer: null,      //  set when Jax are loaded\n      font: \"Auto\",        //  what font HTML-CSS should use\n      context: \"MathJax\",  //  or \"Browser\" for pass-through to browser menu\n      locale: null,        //  the language to use for messages\n      mpContext: false,    //  true means pass menu events to MathPlayer in IE\n      mpMouse: false,      //  true means pass mouse events to MathPlayer in IE\n      texHints: true,      //  include class names for TeXAtom elements\n      FastPreview: null,   //  use PreviewHTML output as preview?\n      assistiveMML: null,  //  include hidden MathML for screen readers?\n      inTabOrder: true,    //  set to false if math elements should be included in the tabindex\n      semantics: false     //  add semantics tag with original form in MathML output\n    },\n\n    errorSettings: {\n       // localized HTML snippet structure for message to use\n      message: [\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],\n      style: {color: \"#CC0000\", \"font-style\":\"italic\"}  // style for message\n    },\n\n    ignoreMMLattributes: {}  // attributes not to copy to HTML-CSS or SVG output\n                             //   from MathML input (in addition to the ones in MML.nocopyAttributes).\n                             //   An id set to true will be ignored, one set to false will\n                             //   be allowed (even if other criteria normally would prevent\n                             //   it from being copied); use false carefully!\n  },\n\n  preProcessors: MathJax.Callback.Hooks(true), // list of callbacks for preprocessing (initialized by extensions)\n  inputJax: {},          // mime-type mapped to input jax (by registration)\n  outputJax: {order:{}}, // mime-type mapped to output jax list (by registration)\n\n  processSectionDelay: 50, // pause between input and output phases of processing\n  processUpdateTime: 250, // time between screen updates when processing math (milliseconds)\n  processUpdateDelay: 10, // pause between screen updates to allow other processing (milliseconds)\n\n  signal: MathJax.Callback.Signal(\"Hub\"), // Signal used for Hub events\n\n  Config: function (def) {\n    this.Insert(this.config,def);\n    if (this.config.Augment) {this.Augment(this.config.Augment)}\n  },\n  CombineConfig: function (name,def) {\n    var config = this.config, id, parent; name = name.split(/\\./);\n    for (var i = 0, m = name.length; i < m; i++) {\n      id = name[i]; if (!config[id]) {config[id] = {}}\n      parent = config; config = config[id];\n    }\n    parent[id] = config = this.Insert(def,config);\n    return config;\n  },\n\n  Register: {\n    PreProcessor: function () {return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},\n    MessageHook: function () {return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},\n    StartupHook: function () {return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},\n    LoadHook: function () {return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}\n  },\n  UnRegister: {\n    PreProcessor: function (hook) {MathJax.Hub.preProcessors.Remove(hook)},\n    MessageHook: function (hook) {MathJax.Hub.signal.RemoveHook(hook)},\n    StartupHook: function (hook) {MathJax.Hub.Startup.signal.RemoveHook(hook)},\n    LoadHook: function (hook) {MathJax.Ajax.removeHook(hook)}\n  },\n\n  getAllJax: function (element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxByType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].MathJax.elementJax.mimeType === type)\n            {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxByInputType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].type && scripts[i].type.replace(/ *;(.|\\s)*/,\"\") === type)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n\n  getJaxFor: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (element && element.MathJax) {return element.MathJax.elementJax}\n    if (this.isMathJaxNode(element)) {\n      if (!element.isMathJax) {element = element.firstChild}  // for NativeMML output\n      while (element && !element.jaxID) {element = element.parentNode}\n      if (element) {return MathJax.OutputJax[element.jaxID].getJaxFromMath(element)}\n    }\n    return null;\n  },\n\n  isJax: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (this.isMathJaxNode(element)) {return 1}\n    if (element && (element.tagName||\"\").toLowerCase() === 'script') {\n      if (element.MathJax)\n        {return (element.MathJax.state === MathJax.ElementJax.STATE.PROCESSED ? 1 : -1)}\n      if (element.type && this.inputJax[element.type.replace(/ *;(.|\\s)*/,\"\")]) {return -1}\n    }\n    return 0;\n  },\n  isMathJaxNode: function (element) {\n    return !!element && (element.isMathJax || (element.className||\"\") === \"MathJax_MathML\");\n  },\n\n  setRenderer: function (renderer,type) {\n    if (!renderer) return;\n    if (!MathJax.OutputJax[renderer]) {\n      this.config.menuSettings.renderer = \"\";\n      var file = \"[MathJax]/jax/output/\"+renderer+\"/config.js\";\n      return MathJax.Ajax.Require(file,[\"setRenderer\",this,renderer,type]);\n    } else {\n      this.config.menuSettings.renderer = renderer;\n      if (type == null) {type = \"jax/mml\"}\n      var jax = this.outputJax;\n      if (jax[type] && jax[type].length) {\n        if (renderer !== jax[type][0].id) {\n          jax[type].unshift(MathJax.OutputJax[renderer]);\n          return this.signal.Post([\"Renderer Selected\",renderer]);\n        }\n      }\n      return null;\n    }\n  },\n\n  Queue: function () {\n    return this.queue.Push.apply(this.queue,arguments);\n  },\n\n  Typeset: function (element,callback) {\n    if (!MathJax.isReady) return null;\n    var ec = this.elementCallback(element,callback);\n    if (ec.count) {\n      var queue = MathJax.Callback.Queue(\n        [\"PreProcess\",this,ec.elements],\n        [\"Process\",this,ec.elements]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n\n  PreProcess: function (element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var queue = MathJax.Callback.Queue();\n    if (ec.count) {\n      var elements = (ec.count === 1 ? [ec.elements] : ec.elements);\n      queue.Push([\"Post\",this.signal,[\"Begin PreProcess\",ec.elements]]);\n      for (var i = 0, m = elements.length; i < m; i++) {\n        if (elements[i]) {queue.Push([\"Execute\",this.preProcessors,elements[i]])}\n      }\n      queue.Push([\"Post\",this.signal,[\"End PreProcess\",ec.elements]]);\n    }\n    return queue.Push(ec.callback);\n  },\n\n  Process:   function (element,callback) {return this.takeAction(\"Process\",element,callback)},\n  Update:    function (element,callback) {return this.takeAction(\"Update\",element,callback)},\n  Reprocess: function (element,callback) {return this.takeAction(\"Reprocess\",element,callback)},\n  Rerender:  function (element,callback) {return this.takeAction(\"Rerender\",element,callback)},\n\n  takeAction: function (action,element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var elements = ec.elements;\n    var queue = MathJax.Callback.Queue([\"Clear\",this.signal]);\n    var state = {\n      scripts: [],                  // filled in by prepareScripts\n      start: new Date().getTime(),  // timer for processing messages\n      i: 0, j: 0,                   // current script, current jax\n      jax: {},                      // scripts grouped by output jax\n      jaxIDs: []                    // id's of jax used\n    };\n    if (ec.count) {\n      var delay = [\"Delay\",MathJax.Callback,this.processSectionDelay];\n      if (!delay[2]) {delay = {}}\n      queue.Push(\n        [\"clearCounts\",MathJax.Message],\n        [\"Post\",this.signal,[\"Begin \"+action,elements]],\n        [\"Post\",this.signal,[\"Begin Math\",elements,action]],\n        [\"prepareScripts\",this,action,elements,state],\n        [\"Post\",this.signal,[\"Begin Math Input\",elements,action]],\n        [\"processInput\",this,state],\n        [\"Post\",this.signal,[\"End Math Input\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"preProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"Begin Math Output\",elements,action]],\n        [\"processOutput\",this,state],\n        [\"Post\",this.signal,[\"End Math Output\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"postProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"End Math\",elements,action]],\n        [\"Post\",this.signal,[\"End \"+action,elements]],\n        [\"clearCounts\",MathJax.Message]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n\n  scriptAction: {\n    Process: function (script) {},\n    Update: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax && jax.needsUpdate()) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n        else {script.MathJax.state = jax.STATE.PROCESSED}\n    },\n    Reprocess: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n    },\n    Rerender: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.OUTPUT}\n    }\n  },\n\n  prepareScripts: function (action,element,state) {\n    if (arguments.callee.disabled) return;\n    var scripts = this.elementScripts(element);\n    var STATE = MathJax.ElementJax.STATE;\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var script = scripts[i];\n      if (script.type && this.inputJax[script.type.replace(/ *;(.|\\n)*/,\"\")]) {\n        if (script.MathJax) {\n          if (script.MathJax.elementJax && script.MathJax.elementJax.hover) {\n            MathJax.Extension.MathEvents.Hover.ClearHover(script.MathJax.elementJax);\n          }\n          if (script.MathJax.state !== STATE.PENDING) {this.scriptAction[action](script)}\n        }\n        if (!script.MathJax) {script.MathJax = {state: STATE.PENDING}}\n        if (script.MathJax.error) delete script.MathJax.error;\n        if (script.MathJax.state !== STATE.PROCESSED) {state.scripts.push(script)}\n      }\n    }\n  },\n\n  checkScriptSiblings: function (script) {\n    if (script.MathJax.checked) return;\n    var config = this.config, pre = script.previousSibling;\n    if (pre && pre.nodeName === \"#text\") {\n      var preJax,postJax, post = script.nextSibling;\n      if (post && post.nodeName !== \"#text\") {post = null}\n      if (config.preJax) {\n        if (typeof(config.preJax) === \"string\") {config.preJax = new RegExp(config.preJax+\"$\")}\n        preJax = pre.nodeValue.match(config.preJax);\n      }\n      if (config.postJax && post) {\n        if (typeof(config.postJax) === \"string\") {config.postJax = new RegExp(\"^\"+config.postJax)}\n        postJax = post.nodeValue.match(config.postJax);\n      }\n      if (preJax && (!config.postJax || postJax)) {\n        pre.nodeValue  = pre.nodeValue.replace\n          (config.preJax,(preJax.length > 1? preJax[1] : \"\"));\n        pre = null;\n      }\n      if (postJax && (!config.preJax || preJax)) {\n        post.nodeValue = post.nodeValue.replace\n          (config.postJax,(postJax.length > 1? postJax[1] : \"\"));\n      }\n      if (pre && !pre.nodeValue.match(/\\S/)) {pre = pre.previousSibling}\n    }\n    if (config.preRemoveClass && pre && pre.className === config.preRemoveClass)\n      {script.MathJax.preview = pre}\n    script.MathJax.checked = 1;\n  },\n\n  processInput: function (state) {\n    var jax, STATE = MathJax.ElementJax.STATE;\n    var script, prev, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        script = state.scripts[state.i]; if (!script) {state.i++; continue}\n        //\n        //  Remove previous error marker, if any\n        //\n        prev = script.previousSibling;\n        if (prev && prev.className === \"MathJax_Error\") {prev.parentNode.removeChild(prev)}\n        //\n        //  Check if already processed or needs processing\n        //\n        if (!script.parentNode || !script.MathJax || script.MathJax.state === STATE.PROCESSED) {state.i++; continue};\n        if (!script.MathJax.elementJax || script.MathJax.state === STATE.UPDATE) {\n          this.checkScriptSiblings(script);                 // remove preJax/postJax etc.\n          var type = script.type.replace(/ *;(.|\\s)*/,\"\");  // the input jax type\n          var input = this.inputJax[type];                  // the input jax itself\n          jax = input.Process(script,state);                // run the input jax\n          if (typeof jax === 'function') {                  // if a callback was returned\n            if (jax.called) continue;                       //   go back and call Process() again\n            this.RestartAfter(jax);                         //   wait for the callback\n          }\n          jax = jax.Attach(script,input.id);                // register the jax on the script\n          this.saveScript(jax,state,script,STATE);          // add script to state\n          this.postInputHooks.Execute(jax,input.id,script); // run global jax filters\n        } else if (script.MathJax.state === STATE.OUTPUT) {\n          this.saveScript(script.MathJax.elementJax,state,script,STATE); // add script to state\n        }\n        //\n        //  Go on to the next script, and check if we need to update the processing message\n        //\n        state.i++; var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(1))}\n      }\n    } catch (err) {return this.processError(err,state,\"Input\")}\n    //\n    //  Put up final message, reset the state and return\n    //\n    if (state.scripts.length && this.config.showProcessingMessages)\n      {MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}\n    state.start = new Date().getTime(); state.i = state.j = 0;\n    return null;\n  },\n  postInputHooks: MathJax.Callback.Hooks(true),  // hooks to run after element jax is created\n  saveScript: function (jax,state,script,STATE) {\n    //\n    //  Check that output jax exists\n    //\n    if (!this.outputJax[jax.mimeType]) {\n      script.MathJax.state = STATE.UPDATE;\n      throw Error(\"No output jax registered for \"+jax.mimeType);\n    }\n    //\n    //  Record the output jax\n    //  and put this script in the queue for that jax\n    //\n    jax.outputJax = this.outputJax[jax.mimeType][0].id;\n    if (!state.jax[jax.outputJax]) {\n      if (state.jaxIDs.length === 0) {\n        // use original array until we know there are more (rather than two copies)\n        state.jax[jax.outputJax] = state.scripts;\n      } else {\n        if (state.jaxIDs.length === 1) // get the script so far for the existing jax\n          {state.jax[state.jaxIDs[0]] = state.scripts.slice(0,state.i)}\n        state.jax[jax.outputJax] = []; // start a new array for the new jax\n      }\n      state.jaxIDs.push(jax.outputJax); // save the ID of the jax\n    }\n    if (state.jaxIDs.length > 1) {state.jax[jax.outputJax].push(script)}\n    //\n    //  Mark script as needing output\n    //\n    script.MathJax.state = STATE.OUTPUT;\n  },\n\n  //\n  //  Pre- and post-process scripts by jax\n  //    (to get scaling factors, hide/show output, and so on)\n  //  Since this can cause the jax to load, we need to trap restarts\n  //\n  prepareOutput: function (state,method) {\n    while (state.j < state.jaxIDs.length) {\n      var id = state.jaxIDs[state.j], JAX = MathJax.OutputJax[id];\n      if (JAX[method]) {\n        try {\n          var result = JAX[method](state);\n          if (typeof result === 'function') {\n            if (result.called) continue;  // go back and try again\n            this.RestartAfter(result);\n          }\n        } catch (err) {\n          if (!err.restart) {\n            MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",id,method],null,600);\n            MathJax.Hub.lastPrepError = err;\n            state.j++;\n          }\n          return MathJax.Callback.After([\"prepareOutput\",this,state,method],err.restart);\n        }\n      }\n      state.j++;\n    }\n    return null;\n  },\n\n  processOutput: function (state) {\n    var result, STATE = MathJax.ElementJax.STATE, script, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        //\n        //  Check that there is an element jax\n        //\n        script = state.scripts[state.i];\n        if (!script || !script.parentNode || !script.MathJax || script.MathJax.error) {state.i++; continue}\n        var jax = script.MathJax.elementJax; if (!jax) {state.i++; continue}\n        //\n        //  Call the output Jax's Process method (which will be its Translate()\n        //  method once loaded).  Mark it as complete and remove the preview unless\n        //  the Process() call returns an explicit false value (in which case, it will\n        //  handle this later during the postProcess phase, as HTML-CSS does).\n        //\n        result = MathJax.OutputJax[jax.outputJax].Process(script,state);\n        if (result !== false) {\n          script.MathJax.state = STATE.PROCESSED;\n          if (script.MathJax.preview) {\n            script.MathJax.preview.innerHTML = \"\";\n            script.MathJax.preview.style.display = \"none\";\n          }\n          //\n          //  Signal that new math is available\n          //\n          this.signal.Post([\"New Math\",jax.inputID]); // FIXME: wait for this?  (i.e., restart if returns uncalled callback)\n        }\n        //\n        //  Go on to next math expression\n        //\n        state.i++;\n        //\n        //  Update the processing message, if needed\n        //\n        var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}\n      }\n    } catch (err) {return this.processError(err,state,\"Output\")}\n    //\n    //  Put up the typesetting-complete message\n    //\n    if (state.scripts.length && this.config.showProcessingMessages) {\n      MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);\n      MathJax.Message.Clear(0);\n    }\n    state.i = state.j = 0;\n    return null;\n  },\n\n  processMessage: function (state,type) {\n    var m = Math.floor(state.i/(state.scripts.length)*100);\n    var message = (type === \"Output\" ? [\"TypesetMath\",\"Typesetting math: %1%%\"] :\n                                       [\"ProcessMath\",\"Processing math: %1%%\"]);\n    if (this.config.showProcessingMessages) {MathJax.Message.Set(message.concat(m),0)}\n  },\n\n  processError: function (err,state,type) {\n    if (!err.restart) {\n      if (!this.config.errorSettings.message) {throw err}\n      this.formatError(state.scripts[state.i],err); state.i++;\n    }\n    this.processMessage(state,type);\n    return MathJax.Callback.After([\"process\"+type,this,state],err.restart);\n  },\n\n  formatError: function (script,err) {\n    var LOCALIZE = function (id,text,arg1,arg2) {return MathJax.Localization._(id,text,arg1,arg2)};\n    //\n    //  Get the error message, URL, and line, and save it for\n    //    reporting in the Show Math As Error menu\n    //\n    var message = LOCALIZE(\"ErrorMessage\",\"Error: %1\",err.message)+\"\\n\";\n    if (err.sourceURL||err.fileName) message += \"\\n\"+LOCALIZE(\"ErrorFile\",\"file: %1\",err.sourceURL||err.fileName);\n    if (err.line||err.lineNumber) message += \"\\n\"+LOCALIZE(\"ErrorLine\",\"line: %1\",err.line||err.lineNumber);\n    message += \"\\n\\n\"+LOCALIZE(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");\n    script.MathJax.error = MathJax.OutputJax.Error.Jax(message,script);\n    if (script.MathJax.elementJax)\n      script.MathJax.error.inputID = script.MathJax.elementJax.inputID;\n    //\n    //  Create the [Math Processing Error] span\n    //\n    var errorSettings = this.config.errorSettings;\n    var errorText = LOCALIZE(errorSettings.messageId,errorSettings.message);\n    var error = MathJax.HTML.Element(\"span\", {\n      className:\"MathJax_Error\", jaxID:\"Error\", isMathJax:true,\n      id: script.MathJax.error.inputID+\"-Frame\"\n    },[[\"span\",null,errorText]]);\n    //\n    //  Attach the menu events\n    //\n    MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function () {\n      var EVENT = MathJax.Extension.MathEvents.Event,\n          HUB = MathJax.Hub;\n      error.oncontextmenu = EVENT.Menu;\n      error.onmousedown = EVENT.Mousedown;\n      error.onkeydown = EVENT.Keydown;\n      error.tabIndex = HUB.getTabOrder(HUB.getJaxFor(script));\n    });\n    //\n    //  Insert the error into the page and remove any preview\n    //\n    var node = document.getElementById(error.id);\n    if (node) node.parentNode.removeChild(node);\n    if (script.parentNode) script.parentNode.insertBefore(error,script);\n    if (script.MathJax.preview) {\n      script.MathJax.preview.innerHTML = \"\";\n      script.MathJax.preview.style.display = \"none\";\n    }\n    //\n    //  Save the error for debugging purposes\n    //  Report the error as a signal\n    //\n    this.lastError = err;\n    this.signal.Post([\"Math Processing Error\",script,err]);\n  },\n\n  RestartAfter: function (callback) {\n    throw this.Insert(Error(\"restart\"),{restart: MathJax.Callback(callback)});\n  },\n\n  elementCallback: function (element,callback) {\n    if (callback == null && (MathJax.Object.isArray(element) || typeof element === 'function'))\n      {try {MathJax.Callback(element); callback = element; element = null} catch(e) {}}\n    if (element == null) {element = this.config.elements || []}\n    if (this.isHTMLCollection(element)) {element = this.HTMLCollection2Array(element)}\n    if (!MathJax.Object.isArray(element)) {element = [element]}\n    element = [].concat(element); // make a copy so the original isn't changed\n    for (var i = 0, m = element.length; i < m; i++)\n      {if (typeof(element[i]) === 'string') {element[i] = document.getElementById(element[i])}}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element.length == 0) {element.push(document.body)}\n    if (!callback) {callback = {}}\n    return {\n      count: element.length,\n      elements: (element.length === 1 ? element[0] : element),\n      callback: callback\n    };\n  },\n\n  elementScripts: function (element) {\n    var scripts = [];\n    if (MathJax.Object.isArray(element) || this.isHTMLCollection(element)) {\n      for (var i = 0, m = element.length; i < m; i++) {\n        var alreadyDone = 0;\n        for (var j = 0; j < i && !alreadyDone; j++)\n          {alreadyDone = element[j].contains(element[i])}\n        if (!alreadyDone) scripts.push.apply(scripts,this.elementScripts(element[i]));\n      }\n      return scripts;\n    }\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element == null) {element = document.body}\n    if (element.tagName != null && element.tagName.toLowerCase() === \"script\") {return [element]}\n    scripts = element.getElementsByTagName(\"script\");\n    if (this.msieHTMLCollectionBug) {scripts = this.HTMLCollection2Array(scripts)}\n    return scripts;\n  },\n\n  //\n  //  IE8 fails to check \"obj instanceof HTMLCollection\" for some values of obj.\n  //\n  isHTMLCollection: function (obj) {\n    return (\"HTMLCollection\" in window && typeof(obj) === \"object\" && obj instanceof HTMLCollection);\n  },\n  //\n  //  IE8 doesn't deal with HTMLCollection as an array, so convert to array\n  //\n  HTMLCollection2Array: function (nodes) {\n    if (!this.msieHTMLCollectionBug) {return [].slice.call(nodes)}\n    var NODES = [];\n    for (var i = 0, m = nodes.length; i < m; i++) {NODES[i] = nodes[i]}\n    return NODES;\n  },\n\n  Insert: function (dst,src) {\n    for (var id in src) {if (src.hasOwnProperty(id)) {\n      // allow for concatenation of arrays?\n      if (typeof src[id] === 'object' && !(MathJax.Object.isArray(src[id])) &&\n         (typeof dst[id] === 'object' || typeof dst[id] === 'function')) {\n        this.Insert(dst[id],src[id]);\n      } else {\n        dst[id] = src[id];\n      }\n    }}\n    return dst;\n  },\n\n  getTabOrder: function(script) {\n    return this.config.menuSettings.inTabOrder ? 0 : -1;\n  },\n\n  // Old browsers (e.g. Internet Explorer <= 8) do not support trim().\n  SplitList: (\"trim\" in String.prototype ?\n              function (list) {return list.trim().split(/\\s+/)} :\n              function (list) {return list.replace(/^\\s+/,'').\n                                           replace(/\\s+$/,'').split(/\\s+/)})\n};\nMathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);\nMathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});\n\n//\n//  Storage area for extensions and preprocessors\n//\nMathJax.Extension = {};\n\n//\n//  Hub Startup code\n//\nMathJax.Hub.Configured = MathJax.Callback({}); // called when configuration is complete\nMathJax.Hub.Startup = {\n  script: \"\", // the startup script from the SCRIPT call that loads MathJax.js\n  queue:   MathJax.Callback.Queue(),           // Queue used for startup actions\n  signal:  MathJax.Callback.Signal(\"Startup\"), // Signal used for startup events\n  params:  {},\n\n  //\n  //  Load the configuration files\n  //\n  Config: function () {\n    this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);\n    //\n    //  Make sure root is set before loading any files\n    //\n    if (MathJax.AuthorConfig && MathJax.AuthorConfig.root)\n      MathJax.Ajax.config.root = MathJax.AuthorConfig.root;\n    //\n    //  If a locale is given as a parameter,\n    //    set the locale and the default menu value for the locale\n    //\n    if (this.params.locale) {\n      MathJax.Localization.resetLocale(this.params.locale);\n      MathJax.Hub.config.menuSettings.locale = this.params.locale;\n    }\n    //\n    //  Run the config files, if any are given in the parameter list\n    //\n    if (this.params.config) {\n      var files = this.params.config.split(/,/);\n      for (var i = 0, m = files.length; i < m; i++) {\n        if (!files[i].match(/\\.js$/)) {files[i] += \".js\"}\n        this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",files[i])]);\n      }\n    }\n    //\n    //  Perform author configuration from in-line MathJax = {...}\n    //\n    this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);\n    //\n    //  Run the deprecated configuration script, if any (ignoring return value)\n    //  Wait for the startup delay signal\n    //  Run the mathjax-config blocks\n    //  Load the files in the configuration's config array\n    //\n    if (this.script.match(/\\S/)) {this.queue.Push(this.script+\";\\n1;\")}\n    this.queue.Push(\n      [\"ConfigDelay\",this],\n      [\"ConfigBlocks\",this],\n      [function (THIS) {return THIS.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],\n      [\"Post\",this.signal,\"End Config\"]\n    );\n  },\n  //\n  //  Return the delay callback\n  //\n  ConfigDelay: function () {\n    var delay = this.params.delayStartupUntil || MathJax.Hub.config.delayStartupUntil;\n    if (delay === \"onload\") {return this.onload}\n    if (delay === \"configured\") {return MathJax.Hub.Configured}\n    return delay;\n  },\n  //\n  //  Run the scripts of type=text/x-mathjax-config\n  //\n  ConfigBlocks: function () {\n    var scripts = document.getElementsByTagName(\"script\");\n    var queue = MathJax.Callback.Queue();\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var type = String(scripts[i].type).replace(/ /g,\"\");\n      if (type.match(/^text\\/x-mathjax-config(;.*)?$/) && !type.match(/;executed=true/)) {\n        scripts[i].type += \";executed=true\";\n        queue.Push(scripts[i].innerHTML+\";\\n1;\");\n      }\n    }\n    return queue.Push(function () {MathJax.Ajax.config.root = MathJax.Hub.config.root});\n  },\n\n  //\n  //  Read cookie and set up menu defaults\n  //  (set the locale according to the cookie)\n  //  (adjust the jax to accommodate renderer preferences)\n  //\n  Cookie: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Cookie\"],\n      [\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],\n      [function (config) {\n        var SETTINGS = config.menuSettings;\n        if (SETTINGS.locale) MathJax.Localization.resetLocale(SETTINGS.locale);\n        var renderer = config.menuSettings.renderer, jax = config.jax;\n        if (renderer) {\n          var name = \"output/\"+renderer; jax.sort();\n          for (var i = 0, m = jax.length; i < m; i++) {\n            if (jax[i].substr(0,7) === \"output/\") break;\n          }\n          if (i == m-1) {jax.pop()} else {\n            while (i < m) {if (jax[i] === name) {jax.splice(i,1); break}; i++}\n          }\n          jax.unshift(name);\n        }\n        if (SETTINGS.CHTMLpreview != null) {\n          if (SETTINGS.FastPreview == null) SETTINGS.FastPreview = SETTINGS.CHTMLpreview;\n          delete SETTINGS.CHTMLpreview;\n        }\n        if (SETTINGS.FastPreview && !MathJax.Extension[\"fast-preview\"])\n          MathJax.Hub.config.extensions.push(\"fast-preview.js\");\n        if (config.menuSettings.assistiveMML && !MathJax.Extension.AssistiveMML)\n          MathJax.Hub.config.extensions.push(\"AssistiveMML.js\");\n      },MathJax.Hub.config],\n      [\"Post\",this.signal,\"End Cookie\"]\n    );\n  },\n  //\n  //  Setup stylesheets and extra styles\n  //\n  Styles: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Styles\"],\n      [\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],\n      [\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],\n      [\"Post\",this.signal,\"End Styles\"]\n    );\n  },\n  //\n  //  Load the input and output jax\n  //\n  Jax: function () {\n    var config = MathJax.Hub.config, jax = MathJax.Hub.outputJax;\n    //  Save the order of the output jax since they are loading asynchronously\n    for (var i = 0, m = config.jax.length, k = 0; i < m; i++) {\n      var name = config.jax[i].substr(7);\n      if (config.jax[i].substr(0,7) === \"output/\" && jax.order[name] == null)\n        {jax.order[name] = k; k++}\n    }\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Jax\"],\n      [\"loadArray\",this,config.jax,\"jax\",\"config.js\"],\n      [\"Post\",this.signal,\"End Jax\"]\n    );\n  },\n  //\n  //  Load the extensions\n  //\n  Extensions: function () {\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Extensions\"],\n      [\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],\n      [\"Post\",this.signal,\"End Extensions\"]\n    );\n  },\n\n  //\n  //  Initialize the Message system\n  //\n  Message: function () {\n    MathJax.Message.Init(true);\n  },\n\n  //\n  //  Set the math menu renderer, if it isn't already\n  //  (this must come after the jax are loaded)\n  //\n  Menu: function () {\n    var menu = MathJax.Hub.config.menuSettings, jax = MathJax.Hub.outputJax, registered;\n    for (var id in jax) {if (jax.hasOwnProperty(id)) {\n      if (jax[id].length) {registered = jax[id]; break}\n    }}\n    if (registered && registered.length) {\n      if (menu.renderer && menu.renderer !== registered[0].id)\n        {registered.unshift(MathJax.OutputJax[menu.renderer])}\n      menu.renderer = registered[0].id;\n    }\n  },\n\n  //\n  //  Set the location to the designated hash position\n  //\n  Hash: function () {\n    if (MathJax.Hub.config.positionToHash && document.location.hash &&\n        document.body && document.body.scrollIntoView) {\n      var name = decodeURIComponent(document.location.hash.substr(1));\n      var target = document.getElementById(name);\n      if (!target) {\n        var a = document.getElementsByTagName(\"a\");\n        for (var i = 0, m = a.length; i < m; i++)\n          {if (a[i].name === name) {target = a[i]; break}}\n      }\n      if (target) {\n        while (!target.scrollIntoView) {target = target.parentNode}\n        target = this.HashCheck(target);\n        if (target && target.scrollIntoView)\n          {setTimeout(function () {target.scrollIntoView(true)},1)}\n      }\n    }\n  },\n  HashCheck: function (target) {\n    var jax = MathJax.Hub.getJaxFor(target);\n    if (jax && MathJax.OutputJax[jax.outputJax].hashCheck)\n      {target = MathJax.OutputJax[jax.outputJax].hashCheck(target)}\n    return target;\n  },\n\n  //\n  //  Load the Menu and Zoom code, if it hasn't already been loaded.\n  //  This is called after the initial typeset, so should no longer be\n  //  competing with other page loads, but will make these available\n  //  if needed later on.\n  //\n  MenuZoom: function () {\n    if (MathJax.Hub.config.showMathMenu) {\n      if (!MathJax.Extension.MathMenu) {\n        setTimeout(\n          function () {\n            MathJax.Callback.Queue(\n              [\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],\n              [\"loadDomain\",MathJax.Localization,\"MathMenu\"]\n            )\n          },1000\n        );\n      } else {\n        setTimeout(\n          MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),\n          1000\n        );\n      }\n      if (!MathJax.Extension.MathZoom) {\n        setTimeout(\n          MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),\n          2000\n        );\n      }\n    }\n  },\n\n  //\n  //  Setup the onload callback\n  //\n  onLoad: function () {\n    var onload = this.onload =\n      MathJax.Callback(function () {MathJax.Hub.Startup.signal.Post(\"onLoad\")});\n    if (document.body && document.readyState)\n      if (MathJax.Hub.Browser.isMSIE) {\n        // IE can change from loading to interactive before\n        //  full page is ready, so go with complete (even though\n        //  that means we may have to wait longer).\n        if (document.readyState === \"complete\") {return [onload]}\n      } else if (document.readyState !== \"loading\") {return [onload]}\n    if (window.addEventListener) {\n      window.addEventListener(\"load\",onload,false);\n      if (!this.params.noDOMContentEvent)\n        {window.addEventListener(\"DOMContentLoaded\",onload,false)}\n    }\n    else if (window.attachEvent) {window.attachEvent(\"onload\",onload)}\n    else {window.onload = onload}\n    return onload;\n  },\n\n  //\n  //  Perform the initial typesetting (or skip if configuration says to)\n  //\n  Typeset: function (element,callback) {\n    if (MathJax.Hub.config.skipStartupTypeset) {return function () {}}\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Typeset\"],\n      [\"Typeset\",MathJax.Hub,element,callback],\n      [\"Post\",this.signal,\"End Typeset\"]\n    );\n  },\n\n  //\n  //  Create a URL in the MathJax hierarchy\n  //\n  URL: function (dir,name) {\n    if (!name.match(/^([a-z]+:\\/\\/|\\[|\\/)/)) {name = \"[MathJax]/\"+dir+\"/\"+name}\n    return name;\n  },\n\n  //\n  //  Load an array of files, waiting for all of them\n  //  to be loaded before going on\n  //\n  loadArray: function (files,dir,name,synchronous) {\n    if (files) {\n      if (!MathJax.Object.isArray(files)) {files = [files]}\n      if (files.length) {\n        var queue = MathJax.Callback.Queue(), callback = {}, file;\n        for (var i = 0, m = files.length; i < m; i++) {\n          file = this.URL(dir,files[i]);\n          if (name) {file += \"/\" + name}\n          if (synchronous) {queue.Push([\"Require\",MathJax.Ajax,file,callback])}\n                      else {queue.Push(MathJax.Ajax.Require(file,callback))}\n        }\n        return queue.Push({}); // wait for everything to finish\n      }\n    }\n    return null;\n  }\n\n};\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME], ROOT = \"[\"+BASENAME+\"]\";\n  var HUB = BASE.Hub, AJAX = BASE.Ajax, CALLBACK = BASE.Callback;\n\n  var JAX = MathJax.Object.Subclass({\n    JAXFILE: \"jax.js\",\n    require: null, // array of files to load before jax.js is complete\n    config: {},\n    //\n    //  Make a subclass and return an instance of it.\n    //  (FIXME: should we replace config with a copy of the constructor's\n    //   config?  Otherwise all subclasses share the same config structure.)\n    //\n    Init: function (def,cdef) {\n      if (arguments.length === 0) {return this}\n      return (this.constructor.Subclass(def,cdef))();\n    },\n    //\n    //  Augment by merging with class definition (not replacing)\n    //\n    Augment: function (def,cdef) {\n      var cObject = this.constructor, ndef = {};\n      if (def != null) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          if (typeof def[id] === \"function\")\n            {cObject.protoFunction(id,def[id])} else {ndef[id] = def[id]}\n        }}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== cObject.prototype.toString && def.toString !== {}.toString)\n          {cObject.protoFunction('toString',def.toString)}\n      }\n      HUB.Insert(cObject.prototype,ndef);\n      cObject.Augment(null,cdef);\n      return this;\n    },\n    Translate: function (script,state) {\n      throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\");\n    },\n    Register: function (mimetype) {},\n    Config: function () {\n      this.config = HUB.CombineConfig(this.id,this.config);\n      if (this.config.Augment) {this.Augment(this.config.Augment)}\n    },\n    Startup: function () {},\n    loadComplete: function (file) {\n      if (file === \"config.js\") {\n        return AJAX.loadComplete(this.directory+\"/\"+file);\n      } else {\n        var queue = CALLBACK.Queue();\n        queue.Push(\n          HUB.Register.StartupHook(\"End Config\",{}), // wait until config complete\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Config\"],\n          [\"Config\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Require\"],\n          // Config may set the required and extensions array,\n          //  so use functions to delay making the reference until needed\n          [function (THIS) {return MathJax.Hub.Startup.loadArray(THIS.require,this.directory)},this],\n          [function (config,id) {return MathJax.Hub.Startup.loadArray(config.extensions,\"extensions/\"+id)},this.config||{},this.id],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Startup\"],\n          [\"Startup\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Ready\"]\n        );\n        if (this.copyTranslate) {\n          queue.Push(\n            [function (THIS) {\n              THIS.preProcess  = THIS.preTranslate;\n              THIS.Process     = THIS.Translate;\n              THIS.postProcess = THIS.postTranslate;\n            },this.constructor.prototype]\n          );\n        }\n        return queue.Push([\"loadComplete\",AJAX,this.directory+\"/\"+file]);\n      }\n    }\n  },{\n    id: \"Jax\",\n    version: \"2.7.3\",\n    directory: ROOT+\"/jax\",\n    extensionDir: ROOT+\"/extensions\"\n  });\n\n  /***********************************/\n\n  BASE.InputJax = JAX.Subclass({\n    elementJax: \"mml\",  // the element jax to load for this input jax\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"],\n    copyTranslate: true,\n    Process: function (script,state) {\n      var queue = CALLBACK.Queue(), file;\n      // Load any needed element jax\n      var jax = this.elementJax; if (!BASE.Object.isArray(jax)) {jax = [jax]}\n      for (var i = 0, m = jax.length; i < m; i++) {\n        file = BASE.ElementJax.directory+\"/\"+jax[i]+\"/\"+this.JAXFILE;\n        if (!this.require) {this.require = []}\n          else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n        this.require.push(file);  // so Startup will wait for it to be loaded\n        queue.Push(AJAX.Require(file));\n      }\n      // Load the input jax\n      file = this.directory+\"/\"+this.JAXFILE;\n      var load = queue.Push(AJAX.Require(file));\n      if (!load.called) {\n        this.constructor.prototype.Process = function () {\n          if (!load.called) {return load}\n          throw Error(file+\" failed to load properly\");\n        }\n      }\n      // Load the associated output jax\n      jax = HUB.outputJax[\"jax/\"+jax[0]];\n      if (jax) {queue.Push(AJAX.Require(jax[0].directory+\"/\"+this.JAXFILE))}\n      return queue.Push({});\n    },\n    needsUpdate: function (jax) {\n      var script = jax.SourceElement();\n      return (jax.originalText !== BASE.HTML.getScript(script));\n    },\n    Register: function (mimetype) {\n      if (!HUB.inputJax) {HUB.inputJax = {}}\n      HUB.inputJax[mimetype] = this;\n    }\n  },{\n    id: \"InputJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/input\",\n    extensionDir: JAX.extensionDir\n  });\n\n  /***********************************/\n\n  BASE.OutputJax = JAX.Subclass({\n    copyTranslate: true,\n    preProcess: function (state) {\n      var load, file = this.directory+\"/\"+this.JAXFILE;\n      this.constructor.prototype.preProcess = function (state) {\n\tif (!load.called) {return load}\n        throw Error(file+\" failed to load properly\");\n      }\n      load = AJAX.Require(file);\n      return load;\n    },\n    Register: function (mimetype) {\n      var jax = HUB.outputJax;\n      if (!jax[mimetype]) {jax[mimetype] = []}\n      //  If the output jax is earlier in the original configuration list, put it first here\n      if (jax[mimetype].length && (this.id === HUB.config.menuSettings.renderer ||\n            (jax.order[this.id]||0) < (jax.order[jax[mimetype][0].id]||0)))\n        {jax[mimetype].unshift(this)} else {jax[mimetype].push(this)}\n      //  Make sure the element jax is loaded before Startup is called\n      if (!this.require) {this.require = []}\n        else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n      this.require.push(BASE.ElementJax.directory+\"/\"+(mimetype.split(/\\//)[1])+\"/\"+this.JAXFILE);\n    },\n    Remove: function (jax) {}\n  },{\n    id: \"OutputJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/output\",\n    extensionDir: JAX.extensionDir,\n    fontDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/fonts\",\n    imageDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/images\"\n  });\n\n  /***********************************/\n\n  BASE.ElementJax = JAX.Subclass({\n    // make a subclass, not an instance\n    Init: function (def,cdef) {return this.constructor.Subclass(def,cdef)},\n\n    inputJax: null,\n    outputJax: null,\n    inputID: null,\n    originalText: \"\",\n    mimeType: \"\",\n    sourceMenuTitle: /*_(MathMenu)*/ [\"MathMLcode\",\"MathML Code\"],\n\n    Text: function (text,callback) {\n      var script = this.SourceElement();\n      BASE.HTML.setScript(script,text);\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Update(script,callback);\n    },\n    Reprocess: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Reprocess(script,callback);\n    },\n    Update: function (callback) {return this.Rerender(callback)},\n    Rerender: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.OUTPUT;\n      return HUB.Process(script,callback);\n    },\n    Remove: function (keep) {\n      if (this.hover) {this.hover.clear(this)}\n      BASE.OutputJax[this.outputJax].Remove(this);\n      if (!keep) {\n        HUB.signal.Post([\"Remove Math\",this.inputID]); // wait for this to finish?\n        this.Detach();\n      }\n    },\n    needsUpdate: function () {\n      return BASE.InputJax[this.inputJax].needsUpdate(this);\n    },\n\n    SourceElement: function () {return document.getElementById(this.inputID)},\n\n    Attach: function (script,inputJax) {\n      var jax = script.MathJax.elementJax;\n      if (script.MathJax.state === this.STATE.UPDATE) {\n        jax.Clone(this);\n      } else {\n        jax = script.MathJax.elementJax = this;\n        if (script.id) {this.inputID = script.id}\n          else {script.id = this.inputID = BASE.ElementJax.GetID(); this.newID = 1}\n      }\n      jax.originalText = BASE.HTML.getScript(script);\n      jax.inputJax = inputJax;\n      if (jax.root) {jax.root.inputID = jax.inputID}\n      return jax;\n    },\n    Detach: function () {\n      var script = this.SourceElement(); if (!script) return;\n      try {delete script.MathJax} catch(err) {script.MathJax = null}\n      if (this.newID) {script.id = \"\"}\n    },\n    Clone: function (jax) {\n      var id;\n      for (id in this) {\n        if (!this.hasOwnProperty(id)) continue;\n        if (typeof(jax[id]) === 'undefined' && id !== 'newID') {delete this[id]}\n      }\n      for (id in jax) {\n        if (!jax.hasOwnProperty(id)) continue;\n        if (typeof(this[id]) === 'undefined' || (this[id] !== jax[id] && id !== 'inputID'))\n          {this[id] = jax[id]}\n      }\n    }\n  },{\n    id: \"ElementJax\",\n    version: \"2.7.3\",\n    directory: JAX.directory+\"/element\",\n    extensionDir: JAX.extensionDir,\n    ID: 0,  // jax counter (for IDs)\n    STATE: {\n      PENDING: 1,      // script is identified as math but not yet processed\n      PROCESSED: 2,    // script has been processed\n      UPDATE: 3,       // elementJax should be updated\n      OUTPUT: 4        // output should be updated (input is OK)\n    },\n\n    GetID: function () {this.ID++; return \"MathJax-Element-\"+this.ID},\n    Subclass: function () {\n      var obj = JAX.Subclass.apply(this,arguments);\n      obj.loadComplete = this.prototype.loadComplete;\n      return obj;\n    }\n  });\n  BASE.ElementJax.prototype.STATE = BASE.ElementJax.STATE;\n\n  //\n  //  Some \"Fake\" jax used to allow menu access for \"Math Processing Error\" messages\n  //\n  BASE.OutputJax.Error = {\n    id: \"Error\", version: \"2.7.3\", config: {}, errors: 0,\n    ContextMenu: function () {return BASE.Extension.MathEvents.Event.ContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    Mousedown:   function () {return BASE.Extension.MathEvents.Event.AltContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    getJaxFromMath: function (math) {return (math.nextSibling.MathJax||{}).error},\n    Jax: function (text,script) {\n      var jax = MathJax.Hub.inputJax[script.type.replace(/ *;(.|\\s)*/,\"\")];\n      this.errors++;\n      return {\n        inputJax: (jax||{id:\"Error\"}).id,  // Use Error InputJax as fallback\n        outputJax: \"Error\",\n        inputID: \"MathJax-Error-\"+this.errors,\n        sourceMenuTitle: /*_(MathMenu)*/ [\"ErrorMessage\",\"Error Message\"],\n        sourceMenuFormat: \"Error\",\n        originalText: MathJax.HTML.getScript(script),\n        errorText: text\n      }\n    }\n  };\n  BASE.InputJax.Error = {\n    id: \"Error\", version: \"2.7.3\", config: {},\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"]\n  };\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var HUB = BASE.Hub; var STARTUP = HUB.Startup; var CONFIG = HUB.config;\n  var HEAD = document.head || (document.getElementsByTagName(\"head\")[0]);\n  if (!HEAD) {HEAD = document.childNodes[0]};\n  var scripts = (document.documentElement || document).getElementsByTagName(\"script\");\n  if (scripts.length === 0 && HEAD.namespaceURI)\n    scripts = document.getElementsByTagNameNS(HEAD.namespaceURI,\"script\");\n  var namePattern = new RegExp(\"(^|/)\"+BASENAME+\"\\\\.js(\\\\?.*)?$\");\n  for (var i = scripts.length-1; i >= 0; i--) {\n    if ((scripts[i].src||\"\").match(namePattern)) {\n      STARTUP.script = scripts[i].innerHTML;\n      if (RegExp.$2) {\n        var params = RegExp.$2.substr(1).split(/\\&/);\n        for (var j = 0, m = params.length; j < m; j++) {\n          var KV = params[j].match(/(.*)=(.*)/);\n          if (KV) {STARTUP.params[unescape(KV[1])] = unescape(KV[2])}\n             else {STARTUP.params[params[j]] = true}\n        }\n      }\n      CONFIG.root = scripts[i].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,'');\n      BASE.Ajax.config.root = CONFIG.root;\n      BASE.Ajax.params = STARTUP.params;\n      break;\n    }\n  }\n\n  var AGENT = navigator.userAgent;\n  var BROWSERS = {\n    isMac:       (navigator.platform.substr(0,3) === \"Mac\"),\n    isPC:        (navigator.platform.substr(0,3) === \"Win\"),\n    isMSIE:      (\"ActiveXObject\" in window && \"clipboardData\" in window),\n    isEdge:      (\"MSGestureEvent\" in window && \"chrome\" in window &&\n                     window.chrome.loadTimes == null),\n    isFirefox:   (!!AGENT.match(/Gecko\\//) && !AGENT.match(/like Gecko/)),\n    isSafari:    (!!AGENT.match(/ (Apple)?WebKit\\//) && !AGENT.match(/ like iPhone /) &&\n                     (!window.chrome || window.chrome.app == null)),\n    isChrome:    (\"chrome\" in window && window.chrome.loadTimes != null),\n    isOpera:     (\"opera\" in window && window.opera.version != null),\n    isKonqueror: (\"konqueror\" in window && navigator.vendor == \"KDE\"),\n    versionAtLeast: function (v) {\n      var bv = (this.version).split('.'); v = (new String(v)).split('.');\n      for (var i = 0, m = v.length; i < m; i++)\n        {if (bv[i] != v[i]) {return parseInt(bv[i]||\"0\") >= parseInt(v[i])}}\n      return true;\n    },\n    Select: function (choices) {\n      var browser = choices[HUB.Browser];\n      if (browser) {return browser(HUB.Browser)}\n      return null;\n    }\n  };\n\n  var xAGENT = AGENT\n    .replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\")                                   // remove initial Mozilla, which is never right\n    .replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\")  // remove linux version\n    .replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");               // special case for these\n\n  HUB.Browser = HUB.Insert(HUB.Insert(new String(\"Unknown\"),{version: \"0.0\"}),BROWSERS);\n  for (var browser in BROWSERS) {if (BROWSERS.hasOwnProperty(browser)) {\n    if (BROWSERS[browser] && browser.substr(0,2) === \"is\") {\n      browser = browser.slice(2);\n      if (browser === \"Mac\" || browser === \"PC\") continue;\n      HUB.Browser = HUB.Insert(new String(browser),BROWSERS);\n      var VERSION = new RegExp(\n        \".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|\" +                      // for Safari, Opera10, and IE11+\n        \".*(\"+browser+\")\"+(browser == \"MSIE\" ? \" \" : \"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|\"+  // for one of the main browsers\n        \"(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");  // for unrecognized browser\n      var MATCH = VERSION.exec(xAGENT) || [\"\",\"\",\"\",\"unknown\",\"0.0\"];\n      HUB.Browser.name = (MATCH[1] != \"\" ? browser : (MATCH[3] || MATCH[5]));\n      HUB.Browser.version = MATCH[2] || MATCH[4] || MATCH[6];\n      break;\n    }\n  }};\n\n  //\n  //  Initial browser-specific info (e.g., touch up version or name, check for MathPlayer, etc.)\n  //  Wrap in try/catch just in case of error (see issue #1155).\n  //\n  try {HUB.Browser.Select({\n    Safari: function (browser) {\n      var v = parseInt((String(browser.version).split(\".\"))[0]);\n      if (v > 85) {browser.webkit = browser.version}\n      if      (v >= 538) {browser.version = \"8.0\"}\n      else if (v >= 537) {browser.version = \"7.0\"}\n      else if (v >= 536) {browser.version = \"6.0\"}\n      else if (v >= 534) {browser.version = \"5.1\"}\n      else if (v >= 533) {browser.version = \"5.0\"}\n      else if (v >= 526) {browser.version = \"4.0\"}\n      else if (v >= 525) {browser.version = \"3.1\"}\n      else if (v >  500) {browser.version = \"3.0\"}\n      else if (v >  400) {browser.version = \"2.0\"}\n      else if (v >   85) {browser.version = \"1.0\"}\n      browser.webkit = (navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];\n      browser.isMobile = (navigator.appVersion.match(/Mobile/i) != null);\n      browser.noContextMenu = browser.isMobile;\n    },\n    Firefox: function (browser) {\n      if ((browser.version === \"0.0\" || AGENT.match(/Firefox/) == null) &&\n           navigator.product === \"Gecko\") {\n        var rv = AGENT.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);\n        if (rv) {browser.version = rv[1]}\n        else {\n          var date = (navigator.buildID||navigator.productSub||\"0\").substr(0,8);\n          if      (date >= \"20111220\") {browser.version = \"9.0\"}\n          else if (date >= \"20111120\") {browser.version = \"8.0\"}\n          else if (date >= \"20110927\") {browser.version = \"7.0\"}\n          else if (date >= \"20110816\") {browser.version = \"6.0\"}\n          else if (date >= \"20110621\") {browser.version = \"5.0\"}\n          else if (date >= \"20110320\") {browser.version = \"4.0\"}\n          else if (date >= \"20100121\") {browser.version = \"3.6\"}\n          else if (date >= \"20090630\") {browser.version = \"3.5\"}\n          else if (date >= \"20080617\") {browser.version = \"3.0\"}\n          else if (date >= \"20061024\") {browser.version = \"2.0\"}\n        }\n      }\n      browser.isMobile = (navigator.appVersion.match(/Android/i) != null ||\n                          AGENT.match(/ Fennec\\//) != null ||\n                          AGENT.match(/Mobile/) != null);\n    },\n    Chrome: function (browser) {\n      browser.noContextMenu = browser.isMobile = !!navigator.userAgent.match(/ Mobile[ \\/]/);\n    },\n    Opera: function (browser) {browser.version = opera.version()},\n    Edge: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n    },\n    MSIE: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n      browser.isIE9 = !!(document.documentMode && (window.performance || window.msPerformance));\n      MathJax.HTML.setScriptBug = !browser.isIE9 || document.documentMode < 9;\n      MathJax.Hub.msieHTMLCollectionBug = (document.documentMode < 9);\n      //\n      //  MathPlayer doesn't function properly in IE10, and not at all in IE11,\n      //  so don't even try to load it.\n      //\n      if (document.documentMode < 10 && !STARTUP.params.NoMathPlayer) {\n        try {\n          new ActiveXObject(\"MathPlayer.Factory.1\");\n          browser.hasMathPlayer = true;\n        } catch (err) {}\n        try {\n          if (browser.hasMathPlayer) {\n            var mathplayer = document.createElement(\"object\");\n            mathplayer.id = \"mathplayer\"; mathplayer.classid = \"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";\n            HEAD.appendChild(mathplayer);\n            document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");\n            browser.mpNamespace = true;\n            if (document.readyState && (document.readyState === \"loading\" ||\n                                        document.readyState === \"interactive\")) {\n              document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');\n              browser.mpImported = true;\n            }\n          } else {\n            //  Adding any namespace avoids a crash in IE9 in IE9-standards mode\n            //  (any reference to document.namespaces before document.readyState is\n            //   \"complete\" causes an \"unspecified error\" to be thrown)\n            document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\");\n          }\n        } catch (err) {}\n      }\n    }\n  });} catch (err) {\n    console.error(err.message);\n  }\n  HUB.Browser.Select(MathJax.Message.browsers);\n\n  if (BASE.AuthorConfig && typeof BASE.AuthorConfig.AuthorInit === \"function\") {BASE.AuthorConfig.AuthorInit()}\n  HUB.queue = BASE.Callback.Queue();\n  HUB.queue.Push(\n    [\"Post\",STARTUP.signal,\"Begin\"],\n    [\"Config\",STARTUP],\n    [\"Cookie\",STARTUP],\n    [\"Styles\",STARTUP],\n    [\"Message\",STARTUP],\n    function () {\n      // Do Jax and Extensions in parallel, but wait for them all to complete\n      var queue = BASE.Callback.Queue(\n        STARTUP.Jax(),\n        STARTUP.Extensions()\n      );\n      return queue.Push({});\n    },\n    [\"Menu\",STARTUP],\n    STARTUP.onLoad(),\n    function () {MathJax.isReady = true}, // indicates that MathJax is ready to process math\n    [\"Typeset\",STARTUP],\n    [\"Hash\",STARTUP],\n    [\"MenuZoom\",STARTUP],\n    [\"Post\",STARTUP.signal,\"End\"]\n  );\n\n})(\"MathJax\");\n\n}}\n"},"lineCount":3321}},"hash":"fdb6c926a2020a42eb13a5e8a97e7c1e","cacheData":{"env":{}}}